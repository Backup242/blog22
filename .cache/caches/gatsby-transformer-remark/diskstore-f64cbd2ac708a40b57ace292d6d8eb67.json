{"expireTime":9007200908525412000,"key":"transformer-remark-markdown-html-ast-06272ab6e344519d9e420a390ff75a5c--","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#handling_events","title":"Permalink to Handling events"},"children":[{"type":"text","value":"Handling events","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":20,"offset":20}}}],"position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":201,"offset":201}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":201,"offset":201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you've only written vanilla JavaScript before now, you might be used to having a separate JavaScript file, where you query for some DOM nodes and attach listeners to them. For example:","position":{"start":{"line":4,"column":1,"offset":203},"end":{"line":4,"column":188,"offset":390}}}],"position":{"start":{"line":4,"column":1,"offset":203},"end":{"line":4,"column":188,"offset":390}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"const btn = document.querySelector(\"button\");\n\nbtn.addEventListener(\"click\", () => {\n  alert(\"hi!\");\n});\n"}],"position":{"start":{"line":6,"column":1,"offset":392},"end":{"line":12,"column":4,"offset":507}}}],"position":{"start":{"line":6,"column":1,"offset":392},"end":{"line":12,"column":4,"offset":507}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In React, we write event handlers directly on the elements in our JSX, like this:","position":{"start":{"line":14,"column":1,"offset":509},"end":{"line":14,"column":82,"offset":590}}}],"position":{"start":{"line":14,"column":1,"offset":509},"end":{"line":14,"column":82,"offset":590}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"<button type=\"button\" onClick={() => alert(\"hi!\")}>\n  Say hi!\n</button>\n"}],"position":{"start":{"line":16,"column":1,"offset":592},"end":{"line":20,"column":4,"offset":674}}}],"position":{"start":{"line":16,"column":1,"offset":592},"end":{"line":20,"column":4,"offset":674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":22,"column":3,"offset":678},"end":{"line":22,"column":8,"offset":683}}}],"position":{"start":{"line":22,"column":1,"offset":676},"end":{"line":22,"column":10,"offset":685}}},{"type":"text","value":" This may seem counter-intuitive regarding best-practice advice that tends to advise against use of inline event handlers on HTML, but remember that JSX is actually part of your JavaScript.","position":{"start":{"line":22,"column":10,"offset":685},"end":{"line":22,"column":199,"offset":874}}}],"position":{"start":{"line":22,"column":1,"offset":676},"end":{"line":22,"column":199,"offset":874}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the above example, we're adding an ","position":{"start":{"line":24,"column":1,"offset":876},"end":{"line":24,"column":39,"offset":914}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onClick"}],"position":{"start":{"line":24,"column":39,"offset":914},"end":{"line":24,"column":48,"offset":923}}},{"type":"text","value":" attribute to the ","position":{"start":{"line":24,"column":48,"offset":923},"end":{"line":24,"column":66,"offset":941}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<button>"}],"position":{"start":{"line":24,"column":66,"offset":941},"end":{"line":24,"column":76,"offset":951}}},{"type":"text","value":" element. The value of that attribute is a function that triggers a simple alert.","position":{"start":{"line":24,"column":76,"offset":951},"end":{"line":24,"column":157,"offset":1032}}}],"position":{"start":{"line":24,"column":1,"offset":876},"end":{"line":24,"column":157,"offset":1032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":26,"column":1,"offset":1034},"end":{"line":26,"column":5,"offset":1038}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onClick"}],"position":{"start":{"line":26,"column":5,"offset":1038},"end":{"line":26,"column":14,"offset":1047}}},{"type":"text","value":" attribute has special meaning here: it tells React to run a given function when the user clicks on the button. There are a couple of other things to note:","position":{"start":{"line":26,"column":14,"offset":1047},"end":{"line":26,"column":169,"offset":1202}}}],"position":{"start":{"line":26,"column":1,"offset":1034},"end":{"line":26,"column":169,"offset":1202}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The camel-cased nature of ","position":{"start":{"line":28,"column":3,"offset":1206},"end":{"line":28,"column":29,"offset":1232}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onClick"}],"position":{"start":{"line":28,"column":29,"offset":1232},"end":{"line":28,"column":38,"offset":1241}}},{"type":"text","value":" is important — JSX will not recognize ","position":{"start":{"line":28,"column":38,"offset":1241},"end":{"line":28,"column":77,"offset":1280}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onclick"}],"position":{"start":{"line":28,"column":77,"offset":1280},"end":{"line":28,"column":86,"offset":1289}}},{"type":"text","value":" (again, it is already used in JavaScript for a specific purpose, which is related but different — standard ","position":{"start":{"line":28,"column":86,"offset":1289},"end":{"line":28,"column":194,"offset":1397}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclick"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onclick"}],"position":{"start":{"line":28,"column":195,"offset":1398},"end":{"line":28,"column":204,"offset":1407}}}],"position":{"start":{"line":28,"column":194,"offset":1397},"end":{"line":28,"column":283,"offset":1486}}},{"type":"text","value":" handler properties).","position":{"start":{"line":28,"column":283,"offset":1486},"end":{"line":28,"column":304,"offset":1507}}}],"position":{"start":{"line":28,"column":1,"offset":1204},"end":{"line":28,"column":304,"offset":1507}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All browser events follow this format in JSX – ","position":{"start":{"line":29,"column":3,"offset":1510},"end":{"line":29,"column":50,"offset":1557}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"on"}],"position":{"start":{"line":29,"column":50,"offset":1557},"end":{"line":29,"column":54,"offset":1561}}},{"type":"text","value":", followed by the name of the event.","position":{"start":{"line":29,"column":54,"offset":1561},"end":{"line":29,"column":90,"offset":1597}}}],"position":{"start":{"line":29,"column":1,"offset":1508},"end":{"line":29,"column":90,"offset":1597}}},{"type":"text","value":"\n"}],"position":{"start":{"line":28,"column":1,"offset":1204},"end":{"line":29,"column":90,"offset":1597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's apply this to our app, starting in the ","position":{"start":{"line":31,"column":1,"offset":1599},"end":{"line":31,"column":46,"offset":1644}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form.js"}],"position":{"start":{"line":31,"column":46,"offset":1644},"end":{"line":31,"column":55,"offset":1653}}},{"type":"text","value":" component.","position":{"start":{"line":31,"column":55,"offset":1653},"end":{"line":31,"column":66,"offset":1664}}}],"position":{"start":{"line":31,"column":1,"offset":1599},"end":{"line":31,"column":66,"offset":1664}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#handling_form_submission","title":"Permalink to Handling form submission"},"children":[{"type":"text","value":"Handling form submission","position":{"start":{"line":33,"column":6,"offset":1671},"end":{"line":33,"column":30,"offset":1695}}}],"position":{"start":{"line":33,"column":5,"offset":1670},"end":{"line":33,"column":229,"offset":1894}}}],"position":{"start":{"line":33,"column":1,"offset":1666},"end":{"line":33,"column":229,"offset":1894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At the top of the ","position":{"start":{"line":35,"column":1,"offset":1896},"end":{"line":35,"column":19,"offset":1914}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form()"}],"position":{"start":{"line":35,"column":19,"offset":1914},"end":{"line":35,"column":27,"offset":1922}}},{"type":"text","value":" component function, create a function named ","position":{"start":{"line":35,"column":27,"offset":1922},"end":{"line":35,"column":72,"offset":1967}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit()"}],"position":{"start":{"line":35,"column":72,"offset":1967},"end":{"line":35,"column":88,"offset":1983}}},{"type":"text","value":". This function should ","position":{"start":{"line":35,"column":88,"offset":1983},"end":{"line":35,"column":111,"offset":2006}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#preventing_default_behavior"},"children":[{"type":"text","value":"prevent the default behavior of the ","position":{"start":{"line":35,"column":112,"offset":2007},"end":{"line":35,"column":148,"offset":2043}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"submit"}],"position":{"start":{"line":35,"column":148,"offset":2043},"end":{"line":35,"column":156,"offset":2051}}},{"type":"text","value":" event","position":{"start":{"line":35,"column":156,"offset":2051},"end":{"line":35,"column":162,"offset":2057}}}],"position":{"start":{"line":35,"column":111,"offset":2006},"end":{"line":35,"column":273,"offset":2168}}},{"type":"text","value":". After that, it should trigger an ","position":{"start":{"line":35,"column":273,"offset":2168},"end":{"line":35,"column":308,"offset":2203}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"alert()"}],"position":{"start":{"line":35,"column":308,"offset":2203},"end":{"line":35,"column":317,"offset":2212}}},{"type":"text","value":", which can say whatever you'd like. It should end up looking something like this:","position":{"start":{"line":35,"column":317,"offset":2212},"end":{"line":35,"column":399,"offset":2294}}}],"position":{"start":{"line":35,"column":1,"offset":1896},"end":{"line":35,"column":399,"offset":2294}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"function handleSubmit(e) {\n  e.preventDefault();\n  alert(\"Hello, world!\");\n}\n"}],"position":{"start":{"line":37,"column":1,"offset":2296},"end":{"line":42,"column":4,"offset":2383}}}],"position":{"start":{"line":37,"column":1,"offset":2296},"end":{"line":42,"column":4,"offset":2383}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To use this function, add an ","position":{"start":{"line":44,"column":1,"offset":2385},"end":{"line":44,"column":30,"offset":2414}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onSubmit"}],"position":{"start":{"line":44,"column":30,"offset":2414},"end":{"line":44,"column":40,"offset":2424}}},{"type":"text","value":" attribute to the ","position":{"start":{"line":44,"column":40,"offset":2424},"end":{"line":44,"column":58,"offset":2442}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<form>"}],"position":{"start":{"line":44,"column":59,"offset":2443},"end":{"line":44,"column":67,"offset":2451}}}],"position":{"start":{"line":44,"column":58,"offset":2442},"end":{"line":44,"column":132,"offset":2516}}},{"type":"text","value":" element, and set its value to the ","position":{"start":{"line":44,"column":132,"offset":2516},"end":{"line":44,"column":167,"offset":2551}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit"}],"position":{"start":{"line":44,"column":167,"offset":2551},"end":{"line":44,"column":181,"offset":2565}}},{"type":"text","value":" function:","position":{"start":{"line":44,"column":181,"offset":2565},"end":{"line":44,"column":191,"offset":2575}}}],"position":{"start":{"line":44,"column":1,"offset":2385},"end":{"line":44,"column":191,"offset":2575}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<form onSubmit={handleSubmit}>\n"}],"position":{"start":{"line":46,"column":1,"offset":2577},"end":{"line":48,"column":4,"offset":2615}}}],"position":{"start":{"line":46,"column":1,"offset":2577},"end":{"line":48,"column":4,"offset":2615}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now if you head back to your browser and click on the \"Add\" button, your browser will show you an alert dialog with the words \"Hello, world!\" — or whatever you chose to write there.","position":{"start":{"line":50,"column":1,"offset":2617},"end":{"line":50,"column":182,"offset":2798}}}],"position":{"start":{"line":50,"column":1,"offset":2617},"end":{"line":50,"column":182,"offset":2798}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#callback_props","title":"Permalink to Callback props"},"children":[{"type":"text","value":"Callback props","position":{"start":{"line":52,"column":5,"offset":2804},"end":{"line":52,"column":19,"offset":2818}}}],"position":{"start":{"line":52,"column":4,"offset":2803},"end":{"line":52,"column":198,"offset":2997}}}],"position":{"start":{"line":52,"column":1,"offset":2800},"end":{"line":52,"column":198,"offset":2997}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In React applications, interactivity is rarely confined to just one component: events that happen in one component will affect other parts of the app. When we start giving ourselves the power to make new tasks, things that happen in the ","position":{"start":{"line":54,"column":1,"offset":2999},"end":{"line":54,"column":238,"offset":3236}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":54,"column":238,"offset":3236},"end":{"line":54,"column":248,"offset":3246}}},{"type":"text","value":" component will affect the list rendered in ","position":{"start":{"line":54,"column":248,"offset":3246},"end":{"line":54,"column":292,"offset":3290}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<App />"}],"position":{"start":{"line":54,"column":292,"offset":3290},"end":{"line":54,"column":301,"offset":3299}}},{"type":"text","value":".","position":{"start":{"line":54,"column":301,"offset":3299},"end":{"line":54,"column":302,"offset":3300}}}],"position":{"start":{"line":54,"column":1,"offset":2999},"end":{"line":54,"column":302,"offset":3300}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want our ","position":{"start":{"line":56,"column":1,"offset":3302},"end":{"line":56,"column":13,"offset":3314}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit()"}],"position":{"start":{"line":56,"column":13,"offset":3314},"end":{"line":56,"column":29,"offset":3330}}},{"type":"text","value":" function to ultimately help us create a new task, so we need a way to pass information from ","position":{"start":{"line":56,"column":29,"offset":3330},"end":{"line":56,"column":122,"offset":3423}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":56,"column":122,"offset":3423},"end":{"line":56,"column":132,"offset":3433}}},{"type":"text","value":" to ","position":{"start":{"line":56,"column":132,"offset":3433},"end":{"line":56,"column":136,"offset":3437}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<App />"}],"position":{"start":{"line":56,"column":136,"offset":3437},"end":{"line":56,"column":145,"offset":3446}}},{"type":"text","value":". We can't pass data from child to parent in the same way as we pass data from parent to child using standard props. Instead, we can write a function in ","position":{"start":{"line":56,"column":145,"offset":3446},"end":{"line":56,"column":298,"offset":3599}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<App />"}],"position":{"start":{"line":56,"column":298,"offset":3599},"end":{"line":56,"column":307,"offset":3608}}},{"type":"text","value":" that will expect some data from our form as an input, then pass that function to ","position":{"start":{"line":56,"column":307,"offset":3608},"end":{"line":56,"column":389,"offset":3690}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":56,"column":389,"offset":3690},"end":{"line":56,"column":399,"offset":3700}}},{"type":"text","value":" as a prop. This function-as-a-prop is called a callback prop. Once we have our callback prop, we can call it inside ","position":{"start":{"line":56,"column":399,"offset":3700},"end":{"line":56,"column":516,"offset":3817}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":56,"column":516,"offset":3817},"end":{"line":56,"column":526,"offset":3827}}},{"type":"text","value":" to send the right data to ","position":{"start":{"line":56,"column":526,"offset":3827},"end":{"line":56,"column":553,"offset":3854}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<App />"}],"position":{"start":{"line":56,"column":553,"offset":3854},"end":{"line":56,"column":562,"offset":3863}}},{"type":"text","value":".","position":{"start":{"line":56,"column":562,"offset":3863},"end":{"line":56,"column":563,"offset":3864}}}],"position":{"start":{"line":56,"column":1,"offset":3302},"end":{"line":56,"column":563,"offset":3864}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#handling_form_submission_via_callbacks","title":"Permalink to Handling form submission via callbacks"},"children":[{"type":"text","value":"Handling form submission via callbacks","position":{"start":{"line":58,"column":6,"offset":3871},"end":{"line":58,"column":44,"offset":3909}}}],"position":{"start":{"line":58,"column":5,"offset":3870},"end":{"line":58,"column":271,"offset":4136}}}],"position":{"start":{"line":58,"column":1,"offset":3866},"end":{"line":58,"column":271,"offset":4136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inside the top of our ","position":{"start":{"line":60,"column":1,"offset":4138},"end":{"line":60,"column":23,"offset":4160}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App()"}],"position":{"start":{"line":60,"column":23,"offset":4160},"end":{"line":60,"column":30,"offset":4167}}},{"type":"text","value":" component function, create a function named ","position":{"start":{"line":60,"column":30,"offset":4167},"end":{"line":60,"column":75,"offset":4212}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":60,"column":75,"offset":4212},"end":{"line":60,"column":86,"offset":4223}}},{"type":"text","value":" which has a single parameter of ","position":{"start":{"line":60,"column":86,"offset":4223},"end":{"line":60,"column":119,"offset":4256}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":60,"column":119,"offset":4256},"end":{"line":60,"column":125,"offset":4262}}},{"type":"text","value":":","position":{"start":{"line":60,"column":125,"offset":4262},"end":{"line":60,"column":126,"offset":4263}}}],"position":{"start":{"line":60,"column":1,"offset":4138},"end":{"line":60,"column":126,"offset":4263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function addTask(name) {\n  alert(name);\n}\n"}],"position":{"start":{"line":62,"column":1,"offset":4265},"end":{"line":66,"column":4,"offset":4314}}}],"position":{"start":{"line":62,"column":1,"offset":4265},"end":{"line":66,"column":4,"offset":4314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next, we'll pass ","position":{"start":{"line":68,"column":1,"offset":4316},"end":{"line":68,"column":18,"offset":4333}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":68,"column":18,"offset":4333},"end":{"line":68,"column":29,"offset":4344}}},{"type":"text","value":" into ","position":{"start":{"line":68,"column":29,"offset":4344},"end":{"line":68,"column":35,"offset":4350}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":68,"column":35,"offset":4350},"end":{"line":68,"column":45,"offset":4360}}},{"type":"text","value":" as a prop. The prop can have whatever name you want, but pick a name you'll understand later. Something like ","position":{"start":{"line":68,"column":45,"offset":4360},"end":{"line":68,"column":155,"offset":4470}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask"}],"position":{"start":{"line":68,"column":155,"offset":4470},"end":{"line":68,"column":164,"offset":4479}}},{"type":"text","value":" works, because it matches the name of the function as well as what the function will do. Your ","position":{"start":{"line":68,"column":164,"offset":4479},"end":{"line":68,"column":259,"offset":4574}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":68,"column":259,"offset":4574},"end":{"line":68,"column":269,"offset":4584}}},{"type":"text","value":" component call should be updated as follows:","position":{"start":{"line":68,"column":269,"offset":4584},"end":{"line":68,"column":314,"offset":4629}}}],"position":{"start":{"line":68,"column":1,"offset":4316},"end":{"line":68,"column":314,"offset":4629}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form addTask={addTask} />\n"}],"position":{"start":{"line":70,"column":1,"offset":4631},"end":{"line":72,"column":4,"offset":4665}}}],"position":{"start":{"line":70,"column":1,"offset":4631},"end":{"line":72,"column":4,"offset":4665}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Finally, you can use this prop inside the ","position":{"start":{"line":74,"column":1,"offset":4667},"end":{"line":74,"column":43,"offset":4709}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit()"}],"position":{"start":{"line":74,"column":43,"offset":4709},"end":{"line":74,"column":59,"offset":4725}}},{"type":"text","value":" function in your ","position":{"start":{"line":74,"column":59,"offset":4725},"end":{"line":74,"column":77,"offset":4743}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":74,"column":77,"offset":4743},"end":{"line":74,"column":87,"offset":4753}}},{"type":"text","value":" component! Update it as follows:","position":{"start":{"line":74,"column":87,"offset":4753},"end":{"line":74,"column":120,"offset":4786}}}],"position":{"start":{"line":74,"column":1,"offset":4667},"end":{"line":74,"column":120,"offset":4786}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function handleSubmit(e) {\n  e.preventDefault();\n  props.addTask(\"Say hello!\");\n}\n"}],"position":{"start":{"line":76,"column":1,"offset":4788},"end":{"line":81,"column":4,"offset":4877}}}],"position":{"start":{"line":76,"column":1,"offset":4788},"end":{"line":81,"column":4,"offset":4877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Clicking on the \"Add\" button in your browser will prove that the ","position":{"start":{"line":83,"column":1,"offset":4879},"end":{"line":83,"column":66,"offset":4944}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":83,"column":66,"offset":4944},"end":{"line":83,"column":77,"offset":4955}}},{"type":"text","value":" callback function works, but it'd be nice if we could get the alert to show us what we're typing in our input field! This is what we'll do next.","position":{"start":{"line":83,"column":77,"offset":4955},"end":{"line":83,"column":222,"offset":5100}}}],"position":{"start":{"line":83,"column":1,"offset":4879},"end":{"line":83,"column":222,"offset":5100}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":85,"column":3,"offset":5104},"end":{"line":85,"column":8,"offset":5109}}}],"position":{"start":{"line":85,"column":1,"offset":5102},"end":{"line":85,"column":10,"offset":5111}}},{"type":"text","value":" We decided to name our callback prop ","position":{"start":{"line":85,"column":10,"offset":5111},"end":{"line":85,"column":48,"offset":5149}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask"}],"position":{"start":{"line":85,"column":48,"offset":5149},"end":{"line":85,"column":57,"offset":5158}}},{"type":"text","value":" to make it easy to understand what the prop will do. Another common convention you may well come across in React code is to prefix callback prop names with the word ","position":{"start":{"line":85,"column":57,"offset":5158},"end":{"line":85,"column":223,"offset":5324}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"on"}],"position":{"start":{"line":85,"column":223,"offset":5324},"end":{"line":85,"column":227,"offset":5328}}},{"type":"text","value":", followed by the name of the event that will cause them to be run. For instance, we could have given our form a prop of ","position":{"start":{"line":85,"column":227,"offset":5328},"end":{"line":85,"column":348,"offset":5449}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onSubmit"}],"position":{"start":{"line":85,"column":348,"offset":5449},"end":{"line":85,"column":358,"offset":5459}}},{"type":"text","value":" with the value of ","position":{"start":{"line":85,"column":358,"offset":5459},"end":{"line":85,"column":377,"offset":5478}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask"}],"position":{"start":{"line":85,"column":377,"offset":5478},"end":{"line":85,"column":386,"offset":5487}}},{"type":"text","value":".","position":{"start":{"line":85,"column":386,"offset":5487},"end":{"line":85,"column":387,"offset":5488}}}],"position":{"start":{"line":85,"column":1,"offset":5102},"end":{"line":85,"column":387,"offset":5488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#state_and_the_usestate_hook","title":"Permalink to State and the useState hook"},"children":[{"type":"text","value":"State and the ","position":{"start":{"line":87,"column":5,"offset":5494},"end":{"line":87,"column":19,"offset":5508}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState"}],"position":{"start":{"line":87,"column":19,"offset":5508},"end":{"line":87,"column":29,"offset":5518}}},{"type":"text","value":" hook","position":{"start":{"line":87,"column":29,"offset":5518},"end":{"line":87,"column":34,"offset":5523}}}],"position":{"start":{"line":87,"column":4,"offset":5493},"end":{"line":87,"column":239,"offset":5728}}}],"position":{"start":{"line":87,"column":1,"offset":5490},"end":{"line":87,"column":239,"offset":5728}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So far, we've used props to pass data through our components and this has served us just fine. Now that we're dealing with user input and data updates, however, we need something more.","position":{"start":{"line":89,"column":1,"offset":5730},"end":{"line":89,"column":185,"offset":5914}}}],"position":{"start":{"line":89,"column":1,"offset":5730},"end":{"line":89,"column":185,"offset":5914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For one thing, props come from the parent of a component. Our ","position":{"start":{"line":91,"column":1,"offset":5916},"end":{"line":91,"column":63,"offset":5978}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":91,"column":63,"offset":5978},"end":{"line":91,"column":73,"offset":5988}}},{"type":"text","value":" will not be inheriting a new name for our task; our ","position":{"start":{"line":91,"column":73,"offset":5988},"end":{"line":91,"column":126,"offset":6041}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input />"}],"position":{"start":{"line":91,"column":126,"offset":6041},"end":{"line":91,"column":137,"offset":6052}}},{"type":"text","value":" element lives directly inside of ","position":{"start":{"line":91,"column":137,"offset":6052},"end":{"line":91,"column":171,"offset":6086}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":91,"column":171,"offset":6086},"end":{"line":91,"column":181,"offset":6096}}},{"type":"text","value":", so ","position":{"start":{"line":91,"column":181,"offset":6096},"end":{"line":91,"column":186,"offset":6101}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form/>"}],"position":{"start":{"line":91,"column":186,"offset":6101},"end":{"line":91,"column":195,"offset":6110}}},{"type":"text","value":" will be directly responsible for creating that new name. We can't ask ","position":{"start":{"line":91,"column":195,"offset":6110},"end":{"line":91,"column":266,"offset":6181}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":91,"column":266,"offset":6181},"end":{"line":91,"column":276,"offset":6191}}},{"type":"text","value":" to spontaneously create its own props, but we ","position":{"start":{"line":91,"column":276,"offset":6191},"end":{"line":91,"column":323,"offset":6238}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"can","position":{"start":{"line":91,"column":324,"offset":6239},"end":{"line":91,"column":327,"offset":6242}}}],"position":{"start":{"line":91,"column":323,"offset":6238},"end":{"line":91,"column":328,"offset":6243}}},{"type":"text","value":" ask it to track some of its own data for us. Data such as this, which a component itself owns, is called ","position":{"start":{"line":91,"column":328,"offset":6243},"end":{"line":91,"column":434,"offset":6349}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"state","position":{"start":{"line":91,"column":436,"offset":6351},"end":{"line":91,"column":441,"offset":6356}}}],"position":{"start":{"line":91,"column":434,"offset":6349},"end":{"line":91,"column":443,"offset":6358}}},{"type":"text","value":". State is another powerful tool for React because components not only ","position":{"start":{"line":91,"column":443,"offset":6358},"end":{"line":91,"column":514,"offset":6429}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"own","position":{"start":{"line":91,"column":515,"offset":6430},"end":{"line":91,"column":518,"offset":6433}}}],"position":{"start":{"line":91,"column":514,"offset":6429},"end":{"line":91,"column":519,"offset":6434}}},{"type":"text","value":" state, but can ","position":{"start":{"line":91,"column":519,"offset":6434},"end":{"line":91,"column":535,"offset":6450}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"update","position":{"start":{"line":91,"column":536,"offset":6451},"end":{"line":91,"column":542,"offset":6457}}}],"position":{"start":{"line":91,"column":535,"offset":6450},"end":{"line":91,"column":543,"offset":6458}}},{"type":"text","value":" it later. It's not possible to update the props a component receives; only to read them.","position":{"start":{"line":91,"column":543,"offset":6458},"end":{"line":91,"column":632,"offset":6547}}}],"position":{"start":{"line":91,"column":1,"offset":5916},"end":{"line":91,"column":632,"offset":6547}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"React provides a variety of special functions that allow us to provide new capabilities to components, like state. These functions are called ","position":{"start":{"line":93,"column":1,"offset":6549},"end":{"line":93,"column":143,"offset":6691}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"hooks","position":{"start":{"line":93,"column":145,"offset":6693},"end":{"line":93,"column":150,"offset":6698}}}],"position":{"start":{"line":93,"column":143,"offset":6691},"end":{"line":93,"column":152,"offset":6700}}},{"type":"text","value":", and the ","position":{"start":{"line":93,"column":152,"offset":6700},"end":{"line":93,"column":162,"offset":6710}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState"}],"position":{"start":{"line":93,"column":162,"offset":6710},"end":{"line":93,"column":172,"offset":6720}}},{"type":"text","value":" hook, as its name implies, is precisely the one we need in order to give our component some state.","position":{"start":{"line":93,"column":172,"offset":6720},"end":{"line":93,"column":271,"offset":6819}}}],"position":{"start":{"line":93,"column":1,"offset":6549},"end":{"line":93,"column":271,"offset":6819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To use a React hook, we need to import it from the React module. In ","position":{"start":{"line":95,"column":1,"offset":6821},"end":{"line":95,"column":69,"offset":6889}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form.js"}],"position":{"start":{"line":95,"column":69,"offset":6889},"end":{"line":95,"column":78,"offset":6898}}},{"type":"text","value":", change your very first line so that it reads like this:","position":{"start":{"line":95,"column":78,"offset":6898},"end":{"line":95,"column":135,"offset":6955}}}],"position":{"start":{"line":95,"column":1,"offset":6821},"end":{"line":95,"column":135,"offset":6955}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import React, { useState } from \"react\";\n"}],"position":{"start":{"line":97,"column":1,"offset":6957},"end":{"line":99,"column":4,"offset":7005}}}],"position":{"start":{"line":97,"column":1,"offset":6957},"end":{"line":99,"column":4,"offset":7005}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This allows us to import the ","position":{"start":{"line":101,"column":1,"offset":7007},"end":{"line":101,"column":30,"offset":7036}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState()"}],"position":{"start":{"line":101,"column":30,"offset":7036},"end":{"line":101,"column":42,"offset":7048}}},{"type":"text","value":" function by itself, and utilize it anywhere in this file.","position":{"start":{"line":101,"column":42,"offset":7048},"end":{"line":101,"column":100,"offset":7106}}}],"position":{"start":{"line":101,"column":1,"offset":7007},"end":{"line":101,"column":100,"offset":7106}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState()"}],"position":{"start":{"line":103,"column":1,"offset":7108},"end":{"line":103,"column":13,"offset":7120}}},{"type":"text","value":" creates a piece of state for a component, and its only parameter determines the ","position":{"start":{"line":103,"column":13,"offset":7120},"end":{"line":103,"column":94,"offset":7201}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"initial value","position":{"start":{"line":103,"column":95,"offset":7202},"end":{"line":103,"column":108,"offset":7215}}}],"position":{"start":{"line":103,"column":94,"offset":7201},"end":{"line":103,"column":109,"offset":7216}}},{"type":"text","value":" of that state. It returns two things: the state, and a function that can be used to update the state later.","position":{"start":{"line":103,"column":109,"offset":7216},"end":{"line":103,"column":217,"offset":7324}}}],"position":{"start":{"line":103,"column":1,"offset":7108},"end":{"line":103,"column":217,"offset":7324}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a lot to take in at once, so let's try it out. We're going to make ourselves a ","position":{"start":{"line":105,"column":1,"offset":7326},"end":{"line":105,"column":88,"offset":7413}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":105,"column":88,"offset":7413},"end":{"line":105,"column":94,"offset":7419}}},{"type":"text","value":" state, and a function for updating the ","position":{"start":{"line":105,"column":94,"offset":7419},"end":{"line":105,"column":134,"offset":7459}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":105,"column":134,"offset":7459},"end":{"line":105,"column":140,"offset":7465}}},{"type":"text","value":" state.","position":{"start":{"line":105,"column":140,"offset":7465},"end":{"line":105,"column":147,"offset":7472}}}],"position":{"start":{"line":105,"column":1,"offset":7326},"end":{"line":105,"column":147,"offset":7472}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write the following above your ","position":{"start":{"line":107,"column":1,"offset":7474},"end":{"line":107,"column":32,"offset":7505}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit()"}],"position":{"start":{"line":107,"column":32,"offset":7505},"end":{"line":107,"column":48,"offset":7521}}},{"type":"text","value":" function, inside ","position":{"start":{"line":107,"column":48,"offset":7521},"end":{"line":107,"column":66,"offset":7539}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form()"}],"position":{"start":{"line":107,"column":66,"offset":7539},"end":{"line":107,"column":74,"offset":7547}}},{"type":"text","value":":","position":{"start":{"line":107,"column":74,"offset":7547},"end":{"line":107,"column":75,"offset":7548}}}],"position":{"start":{"line":107,"column":1,"offset":7474},"end":{"line":107,"column":75,"offset":7548}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const [name, setName] = useState('Use hooks!');\n"}],"position":{"start":{"line":109,"column":1,"offset":7550},"end":{"line":111,"column":4,"offset":7605}}}],"position":{"start":{"line":109,"column":1,"offset":7550},"end":{"line":111,"column":4,"offset":7605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What's going on in this line of code?","position":{"start":{"line":113,"column":1,"offset":7607},"end":{"line":113,"column":38,"offset":7644}}}],"position":{"start":{"line":113,"column":1,"offset":7607},"end":{"line":113,"column":38,"offset":7644}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"We are setting the initial ","position":{"start":{"line":115,"column":3,"offset":7648},"end":{"line":115,"column":30,"offset":7675}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":115,"column":30,"offset":7675},"end":{"line":115,"column":36,"offset":7681}}},{"type":"text","value":" value as \"Use hooks!\".","position":{"start":{"line":115,"column":36,"offset":7681},"end":{"line":115,"column":59,"offset":7704}}}],"position":{"start":{"line":115,"column":1,"offset":7646},"end":{"line":115,"column":59,"offset":7704}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"We are defining a function whose job is to modify ","position":{"start":{"line":116,"column":3,"offset":7707},"end":{"line":116,"column":53,"offset":7757}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":116,"column":53,"offset":7757},"end":{"line":116,"column":59,"offset":7763}}},{"type":"text","value":", called ","position":{"start":{"line":116,"column":59,"offset":7763},"end":{"line":116,"column":68,"offset":7772}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setName()"}],"position":{"start":{"line":116,"column":68,"offset":7772},"end":{"line":116,"column":79,"offset":7783}}},{"type":"text","value":".","position":{"start":{"line":116,"column":79,"offset":7783},"end":{"line":116,"column":80,"offset":7784}}}],"position":{"start":{"line":116,"column":1,"offset":7705},"end":{"line":116,"column":80,"offset":7784}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState()"}],"position":{"start":{"line":117,"column":3,"offset":7787},"end":{"line":117,"column":15,"offset":7799}}},{"type":"text","value":" returns these two things, so we are using ","position":{"start":{"line":117,"column":15,"offset":7799},"end":{"line":117,"column":58,"offset":7842}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"},"children":[{"type":"text","value":"array destructuring","position":{"start":{"line":117,"column":59,"offset":7843},"end":{"line":117,"column":78,"offset":7862}}}],"position":{"start":{"line":117,"column":58,"offset":7842},"end":{"line":117,"column":181,"offset":7965}}},{"type":"text","value":" to capture them both in separate variables.","position":{"start":{"line":117,"column":181,"offset":7965},"end":{"line":117,"column":225,"offset":8009}}}],"position":{"start":{"line":117,"column":1,"offset":7785},"end":{"line":117,"column":225,"offset":8009}}},{"type":"text","value":"\n"}],"position":{"start":{"line":115,"column":1,"offset":7646},"end":{"line":117,"column":225,"offset":8009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#reading_state","title":"Permalink to Reading state"},"children":[{"type":"text","value":"Reading state","position":{"start":{"line":119,"column":6,"offset":8016},"end":{"line":119,"column":19,"offset":8029}}}],"position":{"start":{"line":119,"column":5,"offset":8015},"end":{"line":119,"column":196,"offset":8206}}}],"position":{"start":{"line":119,"column":1,"offset":8011},"end":{"line":119,"column":196,"offset":8206}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can see the ","position":{"start":{"line":121,"column":1,"offset":8208},"end":{"line":121,"column":17,"offset":8224}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":121,"column":17,"offset":8224},"end":{"line":121,"column":23,"offset":8230}}},{"type":"text","value":" state in action right away. Add a ","position":{"start":{"line":121,"column":23,"offset":8230},"end":{"line":121,"column":58,"offset":8265}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"value"}],"position":{"start":{"line":121,"column":58,"offset":8265},"end":{"line":121,"column":65,"offset":8272}}},{"type":"text","value":" attribute to the form's input, and set its value to ","position":{"start":{"line":121,"column":65,"offset":8272},"end":{"line":121,"column":118,"offset":8325}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":121,"column":118,"offset":8325},"end":{"line":121,"column":124,"offset":8331}}},{"type":"text","value":". Your browser will render \"Use hooks!\" inside the input.","position":{"start":{"line":121,"column":124,"offset":8331},"end":{"line":121,"column":181,"offset":8388}}}],"position":{"start":{"line":121,"column":1,"offset":8208},"end":{"line":121,"column":181,"offset":8388}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input\n  type=\"text\"\n  id=\"new-todo-input\"\n  className=\"input input__lg\"\n  name=\"text\"\n  autoComplete=\"off\"\n  value={name}\n/>\n"}],"position":{"start":{"line":123,"column":1,"offset":8390},"end":{"line":132,"column":4,"offset":8523}}}],"position":{"start":{"line":123,"column":1,"offset":8390},"end":{"line":132,"column":4,"offset":8523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Change \"Use hooks!\" to an empty string once you're done; this is what we want for our initial state.","position":{"start":{"line":134,"column":1,"offset":8525},"end":{"line":134,"column":101,"offset":8625}}}],"position":{"start":{"line":134,"column":1,"offset":8525},"end":{"line":134,"column":101,"offset":8625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const [name, setName] = useState('');\n"}],"position":{"start":{"line":136,"column":1,"offset":8627},"end":{"line":138,"column":4,"offset":8672}}}],"position":{"start":{"line":136,"column":1,"offset":8627},"end":{"line":138,"column":4,"offset":8672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#reading_user_input","title":"Permalink to Reading user input"},"children":[{"type":"text","value":"Reading user input","position":{"start":{"line":140,"column":6,"offset":8679},"end":{"line":140,"column":24,"offset":8697}}}],"position":{"start":{"line":140,"column":5,"offset":8678},"end":{"line":140,"column":211,"offset":8884}}}],"position":{"start":{"line":140,"column":1,"offset":8674},"end":{"line":140,"column":211,"offset":8884}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before we can change the value of ","position":{"start":{"line":142,"column":1,"offset":8886},"end":{"line":142,"column":35,"offset":8920}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":142,"column":35,"offset":8920},"end":{"line":142,"column":41,"offset":8926}}},{"type":"text","value":", we need to capture a user's input as they type. For this, we can listen to the ","position":{"start":{"line":142,"column":41,"offset":8926},"end":{"line":142,"column":122,"offset":9007}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onChange"}],"position":{"start":{"line":142,"column":122,"offset":9007},"end":{"line":142,"column":132,"offset":9017}}},{"type":"text","value":" event. Let's write a ","position":{"start":{"line":142,"column":132,"offset":9017},"end":{"line":142,"column":154,"offset":9039}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleChange()"}],"position":{"start":{"line":142,"column":154,"offset":9039},"end":{"line":142,"column":170,"offset":9055}}},{"type":"text","value":" function, and listen for it on the ","position":{"start":{"line":142,"column":170,"offset":9055},"end":{"line":142,"column":206,"offset":9091}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input />"}],"position":{"start":{"line":142,"column":206,"offset":9091},"end":{"line":142,"column":217,"offset":9102}}},{"type":"text","value":" tag.","position":{"start":{"line":142,"column":217,"offset":9102},"end":{"line":142,"column":222,"offset":9107}}}],"position":{"start":{"line":142,"column":1,"offset":8886},"end":{"line":142,"column":222,"offset":9107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"// near the top of the `Form` component\nfunction handleChange(e) {\n  console.log(\"Typing!\");\n}\n\n// Down in the return statement\n<input\n  type=\"text\"\n  id=\"new-todo-input\"\n  className=\"input input__lg\"\n  name=\"text\"\n  autoComplete=\"off\"\n  value={name}\n  onChange={handleChange}\n/>\n"}],"position":{"start":{"line":144,"column":1,"offset":9109},"end":{"line":160,"column":4,"offset":9396}}}],"position":{"start":{"line":144,"column":1,"offset":9109},"end":{"line":160,"column":4,"offset":9396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Currently, your input's value will not change as you type, but your browser will log the word \"Typing!\" to the JavaScript console, so we know our event listener is attached to the input. In order to change the input's value, we have to use our ","position":{"start":{"line":162,"column":1,"offset":9398},"end":{"line":162,"column":245,"offset":9642}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleChange()"}],"position":{"start":{"line":162,"column":245,"offset":9642},"end":{"line":162,"column":261,"offset":9658}}},{"type":"text","value":" function to update our ","position":{"start":{"line":162,"column":261,"offset":9658},"end":{"line":162,"column":285,"offset":9682}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":162,"column":285,"offset":9682},"end":{"line":162,"column":291,"offset":9688}}},{"type":"text","value":" state.","position":{"start":{"line":162,"column":291,"offset":9688},"end":{"line":162,"column":298,"offset":9695}}}],"position":{"start":{"line":162,"column":1,"offset":9398},"end":{"line":162,"column":298,"offset":9695}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To read the contents of the input field as they change, you can access the input's ","position":{"start":{"line":164,"column":1,"offset":9697},"end":{"line":164,"column":84,"offset":9780}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"value"}],"position":{"start":{"line":164,"column":84,"offset":9780},"end":{"line":164,"column":91,"offset":9787}}},{"type":"text","value":" property. We can do this inside ","position":{"start":{"line":164,"column":91,"offset":9787},"end":{"line":164,"column":124,"offset":9820}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleChange()"}],"position":{"start":{"line":164,"column":124,"offset":9820},"end":{"line":164,"column":140,"offset":9836}}},{"type":"text","value":" by reading ","position":{"start":{"line":164,"column":140,"offset":9836},"end":{"line":164,"column":152,"offset":9848}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"e.target.value"}],"position":{"start":{"line":164,"column":152,"offset":9848},"end":{"line":164,"column":168,"offset":9864}}},{"type":"text","value":". ","position":{"start":{"line":164,"column":168,"offset":9864},"end":{"line":164,"column":170,"offset":9866}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"e.target"}],"position":{"start":{"line":164,"column":170,"offset":9866},"end":{"line":164,"column":180,"offset":9876}}},{"type":"text","value":" represents the element that fired the ","position":{"start":{"line":164,"column":180,"offset":9876},"end":{"line":164,"column":219,"offset":9915}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"change"}],"position":{"start":{"line":164,"column":219,"offset":9915},"end":{"line":164,"column":227,"offset":9923}}},{"type":"text","value":" event — that's our input. So, ","position":{"start":{"line":164,"column":227,"offset":9923},"end":{"line":164,"column":258,"offset":9954}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"value"}],"position":{"start":{"line":164,"column":258,"offset":9954},"end":{"line":164,"column":265,"offset":9961}}},{"type":"text","value":" is the text inside it.","position":{"start":{"line":164,"column":265,"offset":9961},"end":{"line":164,"column":288,"offset":9984}}}],"position":{"start":{"line":164,"column":1,"offset":9697},"end":{"line":164,"column":288,"offset":9984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can ","position":{"start":{"line":166,"column":1,"offset":9986},"end":{"line":166,"column":9,"offset":9994}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log()"}],"position":{"start":{"line":166,"column":9,"offset":9994},"end":{"line":166,"column":24,"offset":10009}}},{"type":"text","value":" this value to see it in your browser's console.","position":{"start":{"line":166,"column":24,"offset":10009},"end":{"line":166,"column":72,"offset":10057}}}],"position":{"start":{"line":166,"column":1,"offset":9986},"end":{"line":166,"column":72,"offset":10057}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function handleChange(e) {\n  console.log(e.target.value);\n}\n"}],"position":{"start":{"line":168,"column":1,"offset":10059},"end":{"line":172,"column":4,"offset":10126}}}],"position":{"start":{"line":168,"column":1,"offset":10059},"end":{"line":172,"column":4,"offset":10126}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#updating_state","title":"Permalink to Updating state"},"children":[{"type":"text","value":"Updating state","position":{"start":{"line":174,"column":6,"offset":10133},"end":{"line":174,"column":20,"offset":10147}}}],"position":{"start":{"line":174,"column":5,"offset":10132},"end":{"line":174,"column":199,"offset":10326}}}],"position":{"start":{"line":174,"column":1,"offset":10128},"end":{"line":174,"column":199,"offset":10326}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Logging isn't enough — we want to actually store the updated state of the name as the input value changes! Change the ","position":{"start":{"line":176,"column":1,"offset":10328},"end":{"line":176,"column":119,"offset":10446}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log()"}],"position":{"start":{"line":176,"column":119,"offset":10446},"end":{"line":176,"column":134,"offset":10461}}},{"type":"text","value":" to ","position":{"start":{"line":176,"column":134,"offset":10461},"end":{"line":176,"column":138,"offset":10465}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setName()"}],"position":{"start":{"line":176,"column":138,"offset":10465},"end":{"line":176,"column":149,"offset":10476}}},{"type":"text","value":", as shown below:","position":{"start":{"line":176,"column":149,"offset":10476},"end":{"line":176,"column":166,"offset":10493}}}],"position":{"start":{"line":176,"column":1,"offset":10328},"end":{"line":176,"column":166,"offset":10493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function handleChange(e) {\n  setName(e.target.value);\n}\n"}],"position":{"start":{"line":178,"column":1,"offset":10495},"end":{"line":182,"column":4,"offset":10558}}}],"position":{"start":{"line":178,"column":1,"offset":10495},"end":{"line":182,"column":4,"offset":10558}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we need to change our ","position":{"start":{"line":184,"column":1,"offset":10560},"end":{"line":184,"column":27,"offset":10586}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit()"}],"position":{"start":{"line":184,"column":27,"offset":10586},"end":{"line":184,"column":43,"offset":10602}}},{"type":"text","value":" function so that it calls ","position":{"start":{"line":184,"column":43,"offset":10602},"end":{"line":184,"column":70,"offset":10629}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props.addTask"}],"position":{"start":{"line":184,"column":70,"offset":10629},"end":{"line":184,"column":85,"offset":10644}}},{"type":"text","value":" with name as an argument — remember our callback prop? This will serve to send the task back to the ","position":{"start":{"line":184,"column":85,"offset":10644},"end":{"line":184,"column":186,"offset":10745}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App"}],"position":{"start":{"line":184,"column":186,"offset":10745},"end":{"line":184,"column":191,"offset":10750}}},{"type":"text","value":" component, so we can add it to our list of tasks at some later date. As a matter of good practice, you should clear the input after your form submits, so we'll call ","position":{"start":{"line":184,"column":191,"offset":10750},"end":{"line":184,"column":357,"offset":10916}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setName()"}],"position":{"start":{"line":184,"column":357,"offset":10916},"end":{"line":184,"column":368,"offset":10927}}},{"type":"text","value":" again with an empty string to do so:","position":{"start":{"line":184,"column":368,"offset":10927},"end":{"line":184,"column":405,"offset":10964}}}],"position":{"start":{"line":184,"column":1,"offset":10560},"end":{"line":184,"column":405,"offset":10964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function handleSubmit(e) {\n  e.preventDefault();\n  props.addTask(name);\n  setName(\"\");\n}\n"}],"position":{"start":{"line":186,"column":1,"offset":10966},"end":{"line":192,"column":4,"offset":11062}}}],"position":{"start":{"line":186,"column":1,"offset":10966},"end":{"line":192,"column":4,"offset":11062}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At last, you can type something into the input field in your browser and click ","position":{"start":{"line":194,"column":1,"offset":11064},"end":{"line":194,"column":80,"offset":11143}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Add","position":{"start":{"line":194,"column":81,"offset":11144},"end":{"line":194,"column":84,"offset":11147}}}],"position":{"start":{"line":194,"column":80,"offset":11143},"end":{"line":194,"column":85,"offset":11148}}},{"type":"text","value":" — whatever you typed will appear in an alert dialog.","position":{"start":{"line":194,"column":85,"offset":11148},"end":{"line":194,"column":138,"offset":11201}}}],"position":{"start":{"line":194,"column":1,"offset":11064},"end":{"line":194,"column":138,"offset":11201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Your ","position":{"start":{"line":196,"column":1,"offset":11203},"end":{"line":196,"column":6,"offset":11208}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form.js"}],"position":{"start":{"line":196,"column":6,"offset":11208},"end":{"line":196,"column":15,"offset":11217}}},{"type":"text","value":" file should now read like this:","position":{"start":{"line":196,"column":15,"offset":11217},"end":{"line":196,"column":47,"offset":11249}}}],"position":{"start":{"line":196,"column":1,"offset":11203},"end":{"line":196,"column":47,"offset":11249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState(\"\");\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName(\"\");\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n"}],"position":{"start":{"line":198,"column":1,"offset":11251},"end":{"line":237,"column":4,"offset":12075}}}],"position":{"start":{"line":198,"column":1,"offset":11251},"end":{"line":237,"column":4,"offset":12075}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":239,"column":3,"offset":12079},"end":{"line":239,"column":8,"offset":12084}}}],"position":{"start":{"line":239,"column":1,"offset":12077},"end":{"line":239,"column":10,"offset":12086}}},{"type":"text","value":" One thing you'll notice is that you are able to submit empty tasks by just pressing the Add button without entering a task name. Can you think of a way to disallow empty tasks from being added? As a hint, you probably need to add some kind of check into the ","position":{"start":{"line":239,"column":10,"offset":12086},"end":{"line":239,"column":269,"offset":12345}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit()"}],"position":{"start":{"line":239,"column":269,"offset":12345},"end":{"line":239,"column":285,"offset":12361}}},{"type":"text","value":" function.","position":{"start":{"line":239,"column":285,"offset":12361},"end":{"line":239,"column":295,"offset":12371}}}],"position":{"start":{"line":239,"column":1,"offset":12077},"end":{"line":239,"column":295,"offset":12371}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#putting_it_all_together_adding_a_task","title":"Permalink to Putting it all together: Adding a task"},"children":[{"type":"text","value":"Putting it all together: Adding a task","position":{"start":{"line":241,"column":5,"offset":12377},"end":{"line":241,"column":43,"offset":12415}}}],"position":{"start":{"line":241,"column":4,"offset":12376},"end":{"line":241,"column":269,"offset":12641}}}],"position":{"start":{"line":241,"column":1,"offset":12373},"end":{"line":241,"column":269,"offset":12641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now that we've practiced with events, callback props, and hooks we're ready to write functionality that will allow a user to add a new task from their browser.","position":{"start":{"line":243,"column":1,"offset":12643},"end":{"line":243,"column":160,"offset":12802}}}],"position":{"start":{"line":243,"column":1,"offset":12643},"end":{"line":243,"column":160,"offset":12802}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#tasks_as_state","title":"Permalink to Tasks as state"},"children":[{"type":"text","value":"Tasks as state","position":{"start":{"line":245,"column":6,"offset":12809},"end":{"line":245,"column":20,"offset":12823}}}],"position":{"start":{"line":245,"column":5,"offset":12808},"end":{"line":245,"column":199,"offset":13002}}}],"position":{"start":{"line":245,"column":1,"offset":12804},"end":{"line":245,"column":199,"offset":13002}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Import ","position":{"start":{"line":247,"column":1,"offset":13004},"end":{"line":247,"column":8,"offset":13011}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState"}],"position":{"start":{"line":247,"column":8,"offset":13011},"end":{"line":247,"column":18,"offset":13021}}},{"type":"text","value":" into ","position":{"start":{"line":247,"column":18,"offset":13021},"end":{"line":247,"column":24,"offset":13027}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App.js"}],"position":{"start":{"line":247,"column":24,"offset":13027},"end":{"line":247,"column":32,"offset":13035}}},{"type":"text","value":", so that we can store our tasks in state — update your ","position":{"start":{"line":247,"column":32,"offset":13035},"end":{"line":247,"column":88,"offset":13091}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React"}],"position":{"start":{"line":247,"column":88,"offset":13091},"end":{"line":247,"column":95,"offset":13098}}},{"type":"text","value":" import line to the following:","position":{"start":{"line":247,"column":95,"offset":13098},"end":{"line":247,"column":125,"offset":13128}}}],"position":{"start":{"line":247,"column":1,"offset":13004},"end":{"line":247,"column":125,"offset":13128}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import React, { useState } from \"react\";\n"}],"position":{"start":{"line":249,"column":1,"offset":13130},"end":{"line":251,"column":4,"offset":13178}}}],"position":{"start":{"line":249,"column":1,"offset":13130},"end":{"line":251,"column":4,"offset":13178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want to pass ","position":{"start":{"line":253,"column":1,"offset":13180},"end":{"line":253,"column":17,"offset":13196}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props.tasks"}],"position":{"start":{"line":253,"column":17,"offset":13196},"end":{"line":253,"column":30,"offset":13209}}},{"type":"text","value":" into the ","position":{"start":{"line":253,"column":30,"offset":13209},"end":{"line":253,"column":40,"offset":13219}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState()"}],"position":{"start":{"line":253,"column":40,"offset":13219},"end":{"line":253,"column":52,"offset":13231}}},{"type":"text","value":" hook – this will preserve its initial state. Add the following right at the top of your App() function definition:","position":{"start":{"line":253,"column":52,"offset":13231},"end":{"line":253,"column":167,"offset":13346}}}],"position":{"start":{"line":253,"column":1,"offset":13180},"end":{"line":253,"column":167,"offset":13346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const [tasks, setTasks] = useState(props.tasks);\n"}],"position":{"start":{"line":255,"column":1,"offset":13348},"end":{"line":257,"column":4,"offset":13404}}}],"position":{"start":{"line":255,"column":1,"offset":13348},"end":{"line":257,"column":4,"offset":13404}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, we can change our ","position":{"start":{"line":259,"column":1,"offset":13406},"end":{"line":259,"column":24,"offset":13429}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"taskList"}],"position":{"start":{"line":259,"column":24,"offset":13429},"end":{"line":259,"column":34,"offset":13439}}},{"type":"text","value":" mapping so that it is the result of mapping ","position":{"start":{"line":259,"column":34,"offset":13439},"end":{"line":259,"column":79,"offset":13484}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tasks"}],"position":{"start":{"line":259,"column":79,"offset":13484},"end":{"line":259,"column":86,"offset":13491}}},{"type":"text","value":", instead of ","position":{"start":{"line":259,"column":86,"offset":13491},"end":{"line":259,"column":99,"offset":13504}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props.tasks"}],"position":{"start":{"line":259,"column":99,"offset":13504},"end":{"line":259,"column":112,"offset":13517}}},{"type":"text","value":". Your ","position":{"start":{"line":259,"column":112,"offset":13517},"end":{"line":259,"column":119,"offset":13524}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"taskList"}],"position":{"start":{"line":259,"column":119,"offset":13524},"end":{"line":259,"column":129,"offset":13534}}},{"type":"text","value":" constant declaration should now look like so:","position":{"start":{"line":259,"column":129,"offset":13534},"end":{"line":259,"column":175,"offset":13580}}}],"position":{"start":{"line":259,"column":1,"offset":13406},"end":{"line":259,"column":175,"offset":13580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const taskList = tasks.map(task => (\n    <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n      />\n    )\n  );\n"}],"position":{"start":{"line":261,"column":1,"offset":13582},"end":{"line":271,"column":4,"offset":13759}}}],"position":{"start":{"line":261,"column":1,"offset":13582},"end":{"line":271,"column":4,"offset":13759}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#adding_a_task","title":"Permalink to Adding a task"},"children":[{"type":"text","value":"Adding a task","position":{"start":{"line":273,"column":6,"offset":13766},"end":{"line":273,"column":19,"offset":13779}}}],"position":{"start":{"line":273,"column":5,"offset":13765},"end":{"line":273,"column":196,"offset":13956}}}],"position":{"start":{"line":273,"column":1,"offset":13761},"end":{"line":273,"column":196,"offset":13956}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We've now got a ","position":{"start":{"line":275,"column":1,"offset":13958},"end":{"line":275,"column":17,"offset":13974}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setTasks"}],"position":{"start":{"line":275,"column":17,"offset":13974},"end":{"line":275,"column":27,"offset":13984}}},{"type":"text","value":" hook that we can use in our ","position":{"start":{"line":275,"column":27,"offset":13984},"end":{"line":275,"column":56,"offset":14013}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":275,"column":56,"offset":14013},"end":{"line":275,"column":67,"offset":14024}}},{"type":"text","value":" function to update our list of tasks. There's one problem however: we can't just pass the ","position":{"start":{"line":275,"column":67,"offset":14024},"end":{"line":275,"column":158,"offset":14115}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":275,"column":158,"offset":14115},"end":{"line":275,"column":164,"offset":14121}}},{"type":"text","value":" argument of ","position":{"start":{"line":275,"column":164,"offset":14121},"end":{"line":275,"column":177,"offset":14134}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":275,"column":177,"offset":14134},"end":{"line":275,"column":188,"offset":14145}}},{"type":"text","value":" into ","position":{"start":{"line":275,"column":188,"offset":14145},"end":{"line":275,"column":194,"offset":14151}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setTasks"}],"position":{"start":{"line":275,"column":194,"offset":14151},"end":{"line":275,"column":204,"offset":14161}}},{"type":"text","value":", because ","position":{"start":{"line":275,"column":204,"offset":14161},"end":{"line":275,"column":214,"offset":14171}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tasks"}],"position":{"start":{"line":275,"column":214,"offset":14171},"end":{"line":275,"column":221,"offset":14178}}},{"type":"text","value":" is an array of objects and ","position":{"start":{"line":275,"column":221,"offset":14178},"end":{"line":275,"column":249,"offset":14206}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":275,"column":249,"offset":14206},"end":{"line":275,"column":255,"offset":14212}}},{"type":"text","value":" is a string. If we tried to do this, the array would be replaced with the string.","position":{"start":{"line":275,"column":255,"offset":14212},"end":{"line":275,"column":337,"offset":14294}}}],"position":{"start":{"line":275,"column":1,"offset":13958},"end":{"line":275,"column":337,"offset":14294}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"First of all, we need to put ","position":{"start":{"line":277,"column":1,"offset":14296},"end":{"line":277,"column":30,"offset":14325}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":277,"column":30,"offset":14325},"end":{"line":277,"column":36,"offset":14331}}},{"type":"text","value":" into an object that has the same structure as our existing tasks. Inside of the ","position":{"start":{"line":277,"column":36,"offset":14331},"end":{"line":277,"column":117,"offset":14412}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":277,"column":117,"offset":14412},"end":{"line":277,"column":128,"offset":14423}}},{"type":"text","value":" function, we will make a ","position":{"start":{"line":277,"column":128,"offset":14423},"end":{"line":277,"column":154,"offset":14449}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"newTask"}],"position":{"start":{"line":277,"column":154,"offset":14449},"end":{"line":277,"column":163,"offset":14458}}},{"type":"text","value":" object to add to the array.","position":{"start":{"line":277,"column":163,"offset":14458},"end":{"line":277,"column":191,"offset":14486}}}],"position":{"start":{"line":277,"column":1,"offset":14296},"end":{"line":277,"column":191,"offset":14486}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We then need to make a new array with this new task added to it and then update the state of the tasks data to this new state. To do this, we can use spread syntax to ","position":{"start":{"line":279,"column":1,"offset":14488},"end":{"line":279,"column":168,"offset":14655}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax#copy_an_array"},"children":[{"type":"text","value":"copy the existing array","position":{"start":{"line":279,"column":169,"offset":14656},"end":{"line":279,"column":192,"offset":14679}}}],"position":{"start":{"line":279,"column":168,"offset":14655},"end":{"line":279,"column":298,"offset":14785}}},{"type":"text","value":", and add our object at the end. We then pass this array into ","position":{"start":{"line":279,"column":298,"offset":14785},"end":{"line":279,"column":360,"offset":14847}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setTasks()"}],"position":{"start":{"line":279,"column":360,"offset":14847},"end":{"line":279,"column":372,"offset":14859}}},{"type":"text","value":" to update the state.","position":{"start":{"line":279,"column":372,"offset":14859},"end":{"line":279,"column":393,"offset":14880}}}],"position":{"start":{"line":279,"column":1,"offset":14488},"end":{"line":279,"column":393,"offset":14880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Putting that all together, your ","position":{"start":{"line":281,"column":1,"offset":14882},"end":{"line":281,"column":33,"offset":14914}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":281,"column":33,"offset":14914},"end":{"line":281,"column":44,"offset":14925}}},{"type":"text","value":" function should read like so:","position":{"start":{"line":281,"column":44,"offset":14925},"end":{"line":281,"column":74,"offset":14955}}}],"position":{"start":{"line":281,"column":1,"offset":14882},"end":{"line":281,"column":74,"offset":14955}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function addTask(name) {\n  const newTask = { id: \"id\", name: name, completed: false };\n  setTasks([...tasks, newTask]);\n}\n"}],"position":{"start":{"line":283,"column":1,"offset":14957},"end":{"line":288,"column":4,"offset":15086}}}],"position":{"start":{"line":283,"column":1,"offset":14957},"end":{"line":288,"column":4,"offset":15086}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now you can use the browser to add a task to our data! Type anything into the form and click \"Add\" (or press the Enter key) and you'll see your new todo item appear in the UI!","position":{"start":{"line":290,"column":1,"offset":15088},"end":{"line":290,"column":176,"offset":15263}}}],"position":{"start":{"line":290,"column":1,"offset":15088},"end":{"line":290,"column":176,"offset":15263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"However, we have another problem","position":{"start":{"line":292,"column":3,"offset":15267},"end":{"line":292,"column":35,"offset":15299}}}],"position":{"start":{"line":292,"column":1,"offset":15265},"end":{"line":292,"column":37,"offset":15301}}},{"type":"text","value":": our ","position":{"start":{"line":292,"column":37,"offset":15301},"end":{"line":292,"column":43,"offset":15307}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":292,"column":43,"offset":15307},"end":{"line":292,"column":54,"offset":15318}}},{"type":"text","value":" function is giving each task the same ","position":{"start":{"line":292,"column":54,"offset":15318},"end":{"line":292,"column":93,"offset":15357}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":292,"column":93,"offset":15357},"end":{"line":292,"column":97,"offset":15361}}},{"type":"text","value":". This is bad for accessibility, and makes it impossible for React to tell future tasks apart with the ","position":{"start":{"line":292,"column":97,"offset":15361},"end":{"line":292,"column":200,"offset":15464}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"key"}],"position":{"start":{"line":292,"column":200,"offset":15464},"end":{"line":292,"column":205,"offset":15469}}},{"type":"text","value":" prop. In fact, React will give you a warning in your DevTools console — \"Warning: Encountered two children with the same key...\"","position":{"start":{"line":292,"column":205,"offset":15469},"end":{"line":292,"column":334,"offset":15598}}}],"position":{"start":{"line":292,"column":1,"offset":15265},"end":{"line":292,"column":334,"offset":15598}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We need to fix this. Making unique identifiers is a hard problem – one for which the JavaScript community has written some helpful libraries. We'll use ","position":{"start":{"line":294,"column":1,"offset":15600},"end":{"line":294,"column":153,"offset":15752}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/ai/nanoid"},"children":[{"type":"text","value":"nanoid","position":{"start":{"line":294,"column":154,"offset":15753},"end":{"line":294,"column":160,"offset":15759}}}],"position":{"start":{"line":294,"column":153,"offset":15752},"end":{"line":294,"column":191,"offset":15790}}},{"type":"text","value":" because it's tiny, and it works.","position":{"start":{"line":294,"column":191,"offset":15790},"end":{"line":294,"column":224,"offset":15823}}}],"position":{"start":{"line":294,"column":1,"offset":15600},"end":{"line":294,"column":224,"offset":15823}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Make sure you're in the root directory of your application and run the following terminal command:","position":{"start":{"line":296,"column":1,"offset":15825},"end":{"line":296,"column":99,"offset":15923}}}],"position":{"start":{"line":296,"column":1,"offset":15825},"end":{"line":296,"column":99,"offset":15923}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":298,"column":3,"offset":15927},"end":{"line":298,"column":8,"offset":15932}}}],"position":{"start":{"line":298,"column":1,"offset":15925},"end":{"line":298,"column":10,"offset":15934}}},{"type":"text","value":" If you're using yarn, you'll need the following instead: ","position":{"start":{"line":298,"column":10,"offset":15934},"end":{"line":298,"column":68,"offset":15992}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"yarn add nanoid"}],"position":{"start":{"line":298,"column":68,"offset":15992},"end":{"line":298,"column":85,"offset":16009}}}],"position":{"start":{"line":298,"column":1,"offset":15925},"end":{"line":298,"column":85,"offset":16009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we can import ","position":{"start":{"line":300,"column":1,"offset":16011},"end":{"line":300,"column":19,"offset":16029}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nanoid"}],"position":{"start":{"line":300,"column":19,"offset":16029},"end":{"line":300,"column":27,"offset":16037}}},{"type":"text","value":" into the top of ","position":{"start":{"line":300,"column":27,"offset":16037},"end":{"line":300,"column":44,"offset":16054}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App.js"}],"position":{"start":{"line":300,"column":44,"offset":16054},"end":{"line":300,"column":52,"offset":16062}}},{"type":"text","value":" so we can use it to create unique IDs for our new tasks. First of all, include the following import line at the top of ","position":{"start":{"line":300,"column":52,"offset":16062},"end":{"line":300,"column":172,"offset":16182}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App.js"}],"position":{"start":{"line":300,"column":172,"offset":16182},"end":{"line":300,"column":180,"offset":16190}}},{"type":"text","value":":","position":{"start":{"line":300,"column":180,"offset":16190},"end":{"line":300,"column":181,"offset":16191}}}],"position":{"start":{"line":300,"column":1,"offset":16011},"end":{"line":300,"column":181,"offset":16191}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import { nanoid } from \"nanoid\";\n"}],"position":{"start":{"line":302,"column":1,"offset":16193},"end":{"line":304,"column":4,"offset":16233}}}],"position":{"start":{"line":302,"column":1,"offset":16193},"end":{"line":304,"column":4,"offset":16233}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now let's update ","position":{"start":{"line":306,"column":1,"offset":16235},"end":{"line":306,"column":18,"offset":16252}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":306,"column":18,"offset":16252},"end":{"line":306,"column":29,"offset":16263}}},{"type":"text","value":" so that each task ID becomes a prefix todo- plus a unique string generated by nanoid. Update your ","position":{"start":{"line":306,"column":29,"offset":16263},"end":{"line":306,"column":128,"offset":16362}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"newTask"}],"position":{"start":{"line":306,"column":128,"offset":16362},"end":{"line":306,"column":137,"offset":16371}}},{"type":"text","value":" constant declaration to this:","position":{"start":{"line":306,"column":137,"offset":16371},"end":{"line":306,"column":167,"offset":16401}}}],"position":{"start":{"line":306,"column":1,"offset":16235},"end":{"line":306,"column":167,"offset":16401}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n"}],"position":{"start":{"line":308,"column":1,"offset":16403},"end":{"line":310,"column":4,"offset":16484}}}],"position":{"start":{"line":308,"column":1,"offset":16403},"end":{"line":310,"column":4,"offset":16484}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Save everything, and try your app again — now you can add tasks without getting that warning about duplicate IDs.","position":{"start":{"line":312,"column":1,"offset":16486},"end":{"line":312,"column":114,"offset":16599}}}],"position":{"start":{"line":312,"column":1,"offset":16486},"end":{"line":312,"column":114,"offset":16599}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#detour_counting_tasks","title":"Permalink to Detour: counting tasks"},"children":[{"type":"text","value":"Detour: counting tasks","position":{"start":{"line":314,"column":5,"offset":16605},"end":{"line":314,"column":27,"offset":16627}}}],"position":{"start":{"line":314,"column":4,"offset":16604},"end":{"line":314,"column":221,"offset":16821}}}],"position":{"start":{"line":314,"column":1,"offset":16601},"end":{"line":314,"column":221,"offset":16821}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now that we can add new tasks, you may notice a problem: our heading reads 3 tasks remaining, no matter how many tasks we have! We can fix this by counting the length of ","position":{"start":{"line":316,"column":1,"offset":16823},"end":{"line":316,"column":171,"offset":16993}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"taskList"}],"position":{"start":{"line":316,"column":171,"offset":16993},"end":{"line":316,"column":181,"offset":17003}}},{"type":"text","value":" and changing the text of our heading accordingly.","position":{"start":{"line":316,"column":181,"offset":17003},"end":{"line":316,"column":231,"offset":17053}}}],"position":{"start":{"line":316,"column":1,"offset":16823},"end":{"line":316,"column":231,"offset":17053}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Add this inside your ","position":{"start":{"line":318,"column":1,"offset":17055},"end":{"line":318,"column":22,"offset":17076}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App()"}],"position":{"start":{"line":318,"column":22,"offset":17076},"end":{"line":318,"column":29,"offset":17083}}},{"type":"text","value":" definition, before the return statement:","position":{"start":{"line":318,"column":29,"offset":17083},"end":{"line":318,"column":70,"offset":17124}}}],"position":{"start":{"line":318,"column":1,"offset":17055},"end":{"line":318,"column":70,"offset":17124}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const headingText = `${taskList.length} tasks remaining`;\n"}],"position":{"start":{"line":320,"column":1,"offset":17126},"end":{"line":322,"column":4,"offset":17191}}}],"position":{"start":{"line":320,"column":1,"offset":17126},"end":{"line":322,"column":4,"offset":17191}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hrm. This is almost right, except that if our list ever contains a single task, the heading will still use the word \"tasks\". We can make this a variable, too. Update the code you just added as follows:","position":{"start":{"line":324,"column":1,"offset":17193},"end":{"line":324,"column":202,"offset":17394}}}],"position":{"start":{"line":324,"column":1,"offset":17193},"end":{"line":324,"column":202,"offset":17394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\nconst headingText = `${taskList.length} ${tasksNoun} remaining`;\n"}],"position":{"start":{"line":326,"column":1,"offset":17396},"end":{"line":329,"column":4,"offset":17528}}}],"position":{"start":{"line":326,"column":1,"offset":17396},"end":{"line":329,"column":4,"offset":17528}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now you can replace the list heading's text content with the ","position":{"start":{"line":331,"column":1,"offset":17530},"end":{"line":331,"column":62,"offset":17591}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"headingText"}],"position":{"start":{"line":331,"column":62,"offset":17591},"end":{"line":331,"column":75,"offset":17604}}},{"type":"text","value":" variable. Update your ","position":{"start":{"line":331,"column":75,"offset":17604},"end":{"line":331,"column":98,"offset":17627}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<h2>"}],"position":{"start":{"line":331,"column":98,"offset":17627},"end":{"line":331,"column":104,"offset":17633}}},{"type":"text","value":" like so:","position":{"start":{"line":331,"column":104,"offset":17633},"end":{"line":331,"column":113,"offset":17642}}}],"position":{"start":{"line":331,"column":1,"offset":17530},"end":{"line":331,"column":113,"offset":17642}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<h2 id=\"list-heading\">{headingText}</h2>\n"}],"position":{"start":{"line":333,"column":1,"offset":17644},"end":{"line":335,"column":4,"offset":17692}}}],"position":{"start":{"line":333,"column":1,"offset":17644},"end":{"line":335,"column":4,"offset":17692}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#completing_a_task","title":"Permalink to Completing a task"},"children":[{"type":"text","value":"Completing a task","position":{"start":{"line":337,"column":5,"offset":17698},"end":{"line":337,"column":22,"offset":17715}}}],"position":{"start":{"line":337,"column":4,"offset":17697},"end":{"line":337,"column":207,"offset":17900}}}],"position":{"start":{"line":337,"column":1,"offset":17694},"end":{"line":337,"column":207,"offset":17900}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You might notice that, when you click on a checkbox, it checks and unchecks appropriately. As a feature of HTML, the browser knows how to remember which checkbox inputs are checked or unchecked without our help. This feature hides a problem, however: toggling a checkbox doesn't change the state in our React application. This means that the browser and our app are now out-of-sync. We have to write our own code to put the browser back in sync with our app.","position":{"start":{"line":339,"column":1,"offset":17902},"end":{"line":339,"column":459,"offset":18360}}}],"position":{"start":{"line":339,"column":1,"offset":17902},"end":{"line":339,"column":459,"offset":18360}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#proving_the_bug","title":"Permalink to Proving the bug"},"children":[{"type":"text","value":"Proving the bug","position":{"start":{"line":341,"column":6,"offset":18367},"end":{"line":341,"column":21,"offset":18382}}}],"position":{"start":{"line":341,"column":5,"offset":18366},"end":{"line":341,"column":202,"offset":18563}}}],"position":{"start":{"line":341,"column":1,"offset":18362},"end":{"line":341,"column":202,"offset":18563}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before we fix the problem, let's observe it happening.","position":{"start":{"line":343,"column":1,"offset":18565},"end":{"line":343,"column":55,"offset":18619}}}],"position":{"start":{"line":343,"column":1,"offset":18565},"end":{"line":343,"column":55,"offset":18619}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We'll start by writing a ","position":{"start":{"line":345,"column":1,"offset":18621},"end":{"line":345,"column":26,"offset":18646}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toggleTaskCompleted()"}],"position":{"start":{"line":345,"column":26,"offset":18646},"end":{"line":345,"column":49,"offset":18669}}},{"type":"text","value":" function in our ","position":{"start":{"line":345,"column":49,"offset":18669},"end":{"line":345,"column":66,"offset":18686}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App()"}],"position":{"start":{"line":345,"column":66,"offset":18686},"end":{"line":345,"column":73,"offset":18693}}},{"type":"text","value":" component. This function will have an ","position":{"start":{"line":345,"column":73,"offset":18693},"end":{"line":345,"column":112,"offset":18732}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":345,"column":112,"offset":18732},"end":{"line":345,"column":116,"offset":18736}}},{"type":"text","value":" parameter, but we're not going to use it yet. For now, we'll log the first task in the array to the console – we're going to inspect what happens when we check or uncheck it in our browser:","position":{"start":{"line":345,"column":116,"offset":18736},"end":{"line":345,"column":306,"offset":18926}}}],"position":{"start":{"line":345,"column":1,"offset":18621},"end":{"line":345,"column":306,"offset":18926}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Add this just above your ","position":{"start":{"line":347,"column":1,"offset":18928},"end":{"line":347,"column":26,"offset":18953}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"taskList"}],"position":{"start":{"line":347,"column":26,"offset":18953},"end":{"line":347,"column":36,"offset":18963}}},{"type":"text","value":" constant declaration:","position":{"start":{"line":347,"column":36,"offset":18963},"end":{"line":347,"column":58,"offset":18985}}}],"position":{"start":{"line":347,"column":1,"offset":18928},"end":{"line":347,"column":58,"offset":18985}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function toggleTaskCompleted(id) {\n  console.log(tasks[0])\n}\n"}],"position":{"start":{"line":349,"column":1,"offset":18987},"end":{"line":353,"column":4,"offset":19055}}}],"position":{"start":{"line":349,"column":1,"offset":18987},"end":{"line":353,"column":4,"offset":19055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next, we'll add ","position":{"start":{"line":355,"column":1,"offset":19057},"end":{"line":355,"column":17,"offset":19073}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toggleTaskCompleted"}],"position":{"start":{"line":355,"column":17,"offset":19073},"end":{"line":355,"column":38,"offset":19094}}},{"type":"text","value":" to the props of each ","position":{"start":{"line":355,"column":38,"offset":19094},"end":{"line":355,"column":60,"offset":19116}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Todo />"}],"position":{"start":{"line":355,"column":60,"offset":19116},"end":{"line":355,"column":70,"offset":19126}}},{"type":"text","value":" component rendered inside our ","position":{"start":{"line":355,"column":70,"offset":19126},"end":{"line":355,"column":101,"offset":19157}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"taskList"}],"position":{"start":{"line":355,"column":101,"offset":19157},"end":{"line":355,"column":111,"offset":19167}}},{"type":"text","value":"; update it like so:","position":{"start":{"line":355,"column":111,"offset":19167},"end":{"line":355,"column":131,"offset":19187}}}],"position":{"start":{"line":355,"column":1,"offset":19057},"end":{"line":355,"column":131,"offset":19187}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const taskList = tasks.map(task => (\n  <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n  />\n));\n"}],"position":{"start":{"line":357,"column":1,"offset":19189},"end":{"line":367,"column":4,"offset":19393}}}],"position":{"start":{"line":357,"column":1,"offset":19189},"end":{"line":367,"column":4,"offset":19393}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next, go over to your ","position":{"start":{"line":369,"column":1,"offset":19395},"end":{"line":369,"column":23,"offset":19417}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Todo.js"}],"position":{"start":{"line":369,"column":23,"offset":19417},"end":{"line":369,"column":32,"offset":19426}}},{"type":"text","value":" component and add an ","position":{"start":{"line":369,"column":32,"offset":19426},"end":{"line":369,"column":54,"offset":19448}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onChange"}],"position":{"start":{"line":369,"column":54,"offset":19448},"end":{"line":369,"column":64,"offset":19458}}},{"type":"text","value":" handler to your ","position":{"start":{"line":369,"column":64,"offset":19458},"end":{"line":369,"column":81,"offset":19475}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input />"}],"position":{"start":{"line":369,"column":81,"offset":19475},"end":{"line":369,"column":92,"offset":19486}}},{"type":"text","value":" element, which should use an anonymous function to call ","position":{"start":{"line":369,"column":92,"offset":19486},"end":{"line":369,"column":149,"offset":19543}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props.toggleTaskCompleted()"}],"position":{"start":{"line":369,"column":149,"offset":19543},"end":{"line":369,"column":178,"offset":19572}}},{"type":"text","value":" with a parameter of ","position":{"start":{"line":369,"column":178,"offset":19572},"end":{"line":369,"column":199,"offset":19593}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props.id"}],"position":{"start":{"line":369,"column":199,"offset":19593},"end":{"line":369,"column":209,"offset":19603}}},{"type":"text","value":". The ","position":{"start":{"line":369,"column":209,"offset":19603},"end":{"line":369,"column":215,"offset":19609}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input />"}],"position":{"start":{"line":369,"column":215,"offset":19609},"end":{"line":369,"column":226,"offset":19620}}},{"type":"text","value":" should now look like this:","position":{"start":{"line":369,"column":226,"offset":19620},"end":{"line":369,"column":253,"offset":19647}}}],"position":{"start":{"line":369,"column":1,"offset":19395},"end":{"line":369,"column":253,"offset":19647}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input\n  id={props.id}\n  type=\"checkbox\"\n  defaultChecked={props.completed}\n  onChange={() => props.toggleTaskCompleted(props.id)}\n/>\n"}],"position":{"start":{"line":371,"column":1,"offset":19649},"end":{"line":378,"column":4,"offset":19790}}}],"position":{"start":{"line":371,"column":1,"offset":19649},"end":{"line":378,"column":4,"offset":19790}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Save everything and return to your browser and notice that our first task, Eat, is checked. Open your JavaScript console, then click on the checkbox next to Eat. It unchecks, as we expect. Your JavaScript console, however, will log something like this:","position":{"start":{"line":380,"column":1,"offset":19792},"end":{"line":380,"column":253,"offset":20044}}}],"position":{"start":{"line":380,"column":1,"offset":19792},"end":{"line":380,"column":253,"offset":20044}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object { id: \"task-0\", name: \"Eat\", completed: true }\n"}],"position":{"start":{"line":382,"column":1,"offset":20046},"end":{"line":384,"column":4,"offset":20107}}}],"position":{"start":{"line":382,"column":1,"offset":20046},"end":{"line":384,"column":4,"offset":20107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The checkbox unchecks in the browser, but our console tells us that Eat is still completed. We will fix that next!","position":{"start":{"line":386,"column":1,"offset":20109},"end":{"line":386,"column":115,"offset":20223}}}],"position":{"start":{"line":386,"column":1,"offset":20109},"end":{"line":386,"column":115,"offset":20223}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#synchronizing_the_browser_with_our_data","title":"Permalink to Synchronizing the browser with our data"},"children":[{"type":"text","value":"Synchronizing the browser with our data","position":{"start":{"line":388,"column":6,"offset":20230},"end":{"line":388,"column":45,"offset":20269}}}],"position":{"start":{"line":388,"column":5,"offset":20229},"end":{"line":388,"column":274,"offset":20498}}}],"position":{"start":{"line":388,"column":1,"offset":20225},"end":{"line":388,"column":274,"offset":20498}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's revisit our ","position":{"start":{"line":390,"column":1,"offset":20500},"end":{"line":390,"column":19,"offset":20518}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toggleTaskCompleted()"}],"position":{"start":{"line":390,"column":19,"offset":20518},"end":{"line":390,"column":42,"offset":20541}}},{"type":"text","value":" function in ","position":{"start":{"line":390,"column":42,"offset":20541},"end":{"line":390,"column":55,"offset":20554}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App.js"}],"position":{"start":{"line":390,"column":55,"offset":20554},"end":{"line":390,"column":63,"offset":20562}}},{"type":"text","value":". We want it to change the ","position":{"start":{"line":390,"column":63,"offset":20562},"end":{"line":390,"column":90,"offset":20589}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"completed"}],"position":{"start":{"line":390,"column":90,"offset":20589},"end":{"line":390,"column":101,"offset":20600}}},{"type":"text","value":" property of only the task that was toggled, and leave all the others alone. To do this, we'll ","position":{"start":{"line":390,"column":101,"offset":20600},"end":{"line":390,"column":196,"offset":20695}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"map()"}],"position":{"start":{"line":390,"column":196,"offset":20695},"end":{"line":390,"column":203,"offset":20702}}},{"type":"text","value":" over the task list and just change the one we completed.","position":{"start":{"line":390,"column":203,"offset":20702},"end":{"line":390,"column":260,"offset":20759}}}],"position":{"start":{"line":390,"column":1,"offset":20500},"end":{"line":390,"column":260,"offset":20759}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Update your ","position":{"start":{"line":392,"column":1,"offset":20761},"end":{"line":392,"column":13,"offset":20773}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toggleTaskCompleted()"}],"position":{"start":{"line":392,"column":13,"offset":20773},"end":{"line":392,"column":36,"offset":20796}}},{"type":"text","value":" function to the following:","position":{"start":{"line":392,"column":36,"offset":20796},"end":{"line":392,"column":63,"offset":20823}}}],"position":{"start":{"line":392,"column":1,"offset":20761},"end":{"line":392,"column":63,"offset":20823}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function toggleTaskCompleted(id) {\n  const updatedTasks = tasks.map(task => {\n    // if this task has the same ID as the edited task\n    if (id === task.id) {\n      // use object spread to make a new object\n      // whose `completed` prop has been inverted\n      return {...task, completed: !task.completed}\n    }\n    return task;\n  });\n  setTasks(updatedTasks);\n}\n"}],"position":{"start":{"line":394,"column":1,"offset":20825},"end":{"line":407,"column":4,"offset":21197}}}],"position":{"start":{"line":394,"column":1,"offset":20825},"end":{"line":407,"column":4,"offset":21197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here, we define an ","position":{"start":{"line":409,"column":1,"offset":21199},"end":{"line":409,"column":20,"offset":21218}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updatedTasks"}],"position":{"start":{"line":409,"column":20,"offset":21218},"end":{"line":409,"column":34,"offset":21232}}},{"type":"text","value":" constant that maps over the original ","position":{"start":{"line":409,"column":34,"offset":21232},"end":{"line":409,"column":72,"offset":21270}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tasks"}],"position":{"start":{"line":409,"column":72,"offset":21270},"end":{"line":409,"column":79,"offset":21277}}},{"type":"text","value":" array. If the task's ","position":{"start":{"line":409,"column":79,"offset":21277},"end":{"line":409,"column":101,"offset":21299}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":409,"column":101,"offset":21299},"end":{"line":409,"column":105,"offset":21303}}},{"type":"text","value":" property matches the ","position":{"start":{"line":409,"column":105,"offset":21303},"end":{"line":409,"column":127,"offset":21325}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":409,"column":127,"offset":21325},"end":{"line":409,"column":131,"offset":21329}}},{"type":"text","value":" provided to the function, we use ","position":{"start":{"line":409,"column":131,"offset":21329},"end":{"line":409,"column":165,"offset":21363}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax"},"children":[{"type":"text","value":"object spread syntax","position":{"start":{"line":409,"column":166,"offset":21364},"end":{"line":409,"column":186,"offset":21384}}}],"position":{"start":{"line":409,"column":165,"offset":21363},"end":{"line":409,"column":278,"offset":21476}}},{"type":"text","value":" to create a new object, and toggle the ","position":{"start":{"line":409,"column":278,"offset":21476},"end":{"line":409,"column":318,"offset":21516}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"checked"}],"position":{"start":{"line":409,"column":318,"offset":21516},"end":{"line":409,"column":327,"offset":21525}}},{"type":"text","value":" property of that object before returning it. If it doesn't match, we return the original object.","position":{"start":{"line":409,"column":327,"offset":21525},"end":{"line":409,"column":424,"offset":21622}}}],"position":{"start":{"line":409,"column":1,"offset":21199},"end":{"line":409,"column":424,"offset":21622}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Then we call ","position":{"start":{"line":411,"column":1,"offset":21624},"end":{"line":411,"column":14,"offset":21637}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setTasks()"}],"position":{"start":{"line":411,"column":14,"offset":21637},"end":{"line":411,"column":26,"offset":21649}}},{"type":"text","value":" with this new array in order to update our state.","position":{"start":{"line":411,"column":26,"offset":21649},"end":{"line":411,"column":76,"offset":21699}}}],"position":{"start":{"line":411,"column":1,"offset":21624},"end":{"line":411,"column":76,"offset":21699}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#deleting_a_task","title":"Permalink to Deleting a task"},"children":[{"type":"text","value":"Deleting a task","position":{"start":{"line":413,"column":5,"offset":21705},"end":{"line":413,"column":20,"offset":21720}}}],"position":{"start":{"line":413,"column":4,"offset":21704},"end":{"line":413,"column":201,"offset":21901}}}],"position":{"start":{"line":413,"column":1,"offset":21701},"end":{"line":413,"column":201,"offset":21901}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Deleting a task will follow a similar pattern to toggling its completed state: We need to define a function for updating our state, then pass that function into ","position":{"start":{"line":415,"column":1,"offset":21903},"end":{"line":415,"column":162,"offset":22064}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Todo />"}],"position":{"start":{"line":415,"column":162,"offset":22064},"end":{"line":415,"column":172,"offset":22074}}},{"type":"text","value":" as a prop and call it when the right event happens.","position":{"start":{"line":415,"column":172,"offset":22074},"end":{"line":415,"column":224,"offset":22126}}}],"position":{"start":{"line":415,"column":1,"offset":21903},"end":{"line":415,"column":224,"offset":22126}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#the_deletetask_callback_prop","title":"Permalink to The deleteTask callback prop"},"children":[{"type":"text","value":"The ","position":{"start":{"line":417,"column":6,"offset":22133},"end":{"line":417,"column":10,"offset":22137}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask"}],"position":{"start":{"line":417,"column":10,"offset":22137},"end":{"line":417,"column":22,"offset":22149}}},{"type":"text","value":" callback prop","position":{"start":{"line":417,"column":22,"offset":22149},"end":{"line":417,"column":36,"offset":22163}}}],"position":{"start":{"line":417,"column":5,"offset":22132},"end":{"line":417,"column":243,"offset":22370}}}],"position":{"start":{"line":417,"column":1,"offset":22128},"end":{"line":417,"column":243,"offset":22370}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here we'll start by writing a ","position":{"start":{"line":419,"column":1,"offset":22372},"end":{"line":419,"column":31,"offset":22402}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":419,"column":31,"offset":22402},"end":{"line":419,"column":45,"offset":22416}}},{"type":"text","value":" function in your ","position":{"start":{"line":419,"column":45,"offset":22416},"end":{"line":419,"column":63,"offset":22434}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App"}],"position":{"start":{"line":419,"column":63,"offset":22434},"end":{"line":419,"column":68,"offset":22439}}},{"type":"text","value":" component. Like ","position":{"start":{"line":419,"column":68,"offset":22439},"end":{"line":419,"column":85,"offset":22456}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toggleTaskCompleted()"}],"position":{"start":{"line":419,"column":85,"offset":22456},"end":{"line":419,"column":108,"offset":22479}}},{"type":"text","value":", this function will take an ","position":{"start":{"line":419,"column":108,"offset":22479},"end":{"line":419,"column":137,"offset":22508}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":419,"column":137,"offset":22508},"end":{"line":419,"column":141,"offset":22512}}},{"type":"text","value":" parameter, and we will log that ","position":{"start":{"line":419,"column":141,"offset":22512},"end":{"line":419,"column":174,"offset":22545}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":419,"column":174,"offset":22545},"end":{"line":419,"column":178,"offset":22549}}},{"type":"text","value":" to the console to start with. Add the following below ","position":{"start":{"line":419,"column":178,"offset":22549},"end":{"line":419,"column":233,"offset":22604}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toggleTaskCompleted()"}],"position":{"start":{"line":419,"column":233,"offset":22604},"end":{"line":419,"column":256,"offset":22627}}},{"type":"text","value":":","position":{"start":{"line":419,"column":256,"offset":22627},"end":{"line":419,"column":257,"offset":22628}}}],"position":{"start":{"line":419,"column":1,"offset":22372},"end":{"line":419,"column":257,"offset":22628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function deleteTask(id) {\n  console.log(id)\n}\n"}],"position":{"start":{"line":421,"column":1,"offset":22630},"end":{"line":425,"column":4,"offset":22683}}}],"position":{"start":{"line":421,"column":1,"offset":22630},"end":{"line":425,"column":4,"offset":22683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next, add another callback prop to our array of ","position":{"start":{"line":427,"column":1,"offset":22685},"end":{"line":427,"column":49,"offset":22733}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Todo />"}],"position":{"start":{"line":427,"column":49,"offset":22733},"end":{"line":427,"column":59,"offset":22743}}},{"type":"text","value":" components:","position":{"start":{"line":427,"column":59,"offset":22743},"end":{"line":427,"column":71,"offset":22755}}}],"position":{"start":{"line":427,"column":1,"offset":22685},"end":{"line":427,"column":71,"offset":22755}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const taskList = tasks.map(task => (\n  <Todo\n    id={task.id}\n    name={task.name}\n    completed={task.completed}\n    key={task.id}\n    toggleTaskCompleted={toggleTaskCompleted}\n    deleteTask={deleteTask}\n  />\n));\n"}],"position":{"start":{"line":429,"column":1,"offset":22757},"end":{"line":440,"column":4,"offset":22979}}}],"position":{"start":{"line":429,"column":1,"offset":22757},"end":{"line":440,"column":4,"offset":22979}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ","position":{"start":{"line":442,"column":1,"offset":22981},"end":{"line":442,"column":4,"offset":22984}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Todo.js"}],"position":{"start":{"line":442,"column":4,"offset":22984},"end":{"line":442,"column":13,"offset":22993}}},{"type":"text","value":", we want to call ","position":{"start":{"line":442,"column":13,"offset":22993},"end":{"line":442,"column":31,"offset":23011}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props.deleteTask()"}],"position":{"start":{"line":442,"column":31,"offset":23011},"end":{"line":442,"column":51,"offset":23031}}},{"type":"text","value":" when the \"Delete\" button is pressed. ","position":{"start":{"line":442,"column":51,"offset":23031},"end":{"line":442,"column":89,"offset":23069}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":442,"column":89,"offset":23069},"end":{"line":442,"column":103,"offset":23083}}},{"type":"text","value":" needs to know the ID of the task that called it, so it can delete the correct task from the state.","position":{"start":{"line":442,"column":103,"offset":23083},"end":{"line":442,"column":202,"offset":23182}}}],"position":{"start":{"line":442,"column":1,"offset":22981},"end":{"line":442,"column":202,"offset":23182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Update the \"Delete\" button inside Todo.js, like so:","position":{"start":{"line":444,"column":1,"offset":23184},"end":{"line":444,"column":52,"offset":23235}}}],"position":{"start":{"line":444,"column":1,"offset":23184},"end":{"line":444,"column":52,"offset":23235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<button\n  type=\"button\"\n  className=\"btn btn__danger\"\n  onClick={() => props.deleteTask(props.id)}\n>\n  Delete <span className=\"visually-hidden\">{props.name}</span>\n</button>\n"}],"position":{"start":{"line":446,"column":1,"offset":23237},"end":{"line":454,"column":4,"offset":23418}}}],"position":{"start":{"line":446,"column":1,"offset":23237},"end":{"line":454,"column":4,"offset":23418}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now when you click on any of the \"Delete\" buttons in the app, your browser console should log the ID of the related task.","position":{"start":{"line":456,"column":1,"offset":23420},"end":{"line":456,"column":122,"offset":23541}}}],"position":{"start":{"line":456,"column":1,"offset":23420},"end":{"line":456,"column":122,"offset":23541}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#deleting_tasks_from_state_and_ui","title":"Permalink to Deleting tasks from state and UI"},"children":[{"type":"text","value":"Deleting tasks from state and UI","position":{"start":{"line":458,"column":5,"offset":23547},"end":{"line":458,"column":37,"offset":23579}}}],"position":{"start":{"line":458,"column":4,"offset":23546},"end":{"line":458,"column":252,"offset":23794}}}],"position":{"start":{"line":458,"column":1,"offset":23543},"end":{"line":458,"column":252,"offset":23794}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now that we know ","position":{"start":{"line":460,"column":1,"offset":23796},"end":{"line":460,"column":18,"offset":23813}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":460,"column":18,"offset":23813},"end":{"line":460,"column":32,"offset":23827}}},{"type":"text","value":" is invoked correctly, we can call our ","position":{"start":{"line":460,"column":32,"offset":23827},"end":{"line":460,"column":71,"offset":23866}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setTasks()"}],"position":{"start":{"line":460,"column":71,"offset":23866},"end":{"line":460,"column":83,"offset":23878}}},{"type":"text","value":" hook in ","position":{"start":{"line":460,"column":83,"offset":23878},"end":{"line":460,"column":92,"offset":23887}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":460,"column":92,"offset":23887},"end":{"line":460,"column":106,"offset":23901}}},{"type":"text","value":" to actually delete that task from the app's state as well as visually in the app UI. Since ","position":{"start":{"line":460,"column":106,"offset":23901},"end":{"line":460,"column":198,"offset":23993}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setTasks()"}],"position":{"start":{"line":460,"column":198,"offset":23993},"end":{"line":460,"column":210,"offset":24005}}},{"type":"text","value":" expects an array as an argument, we should provide it with a new array that copies the existing tasks, ","position":{"start":{"line":460,"column":210,"offset":24005},"end":{"line":460,"column":314,"offset":24109}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"excluding","position":{"start":{"line":460,"column":315,"offset":24110},"end":{"line":460,"column":324,"offset":24119}}}],"position":{"start":{"line":460,"column":314,"offset":24109},"end":{"line":460,"column":325,"offset":24120}}},{"type":"text","value":" the task whose ID matches the one passed into ","position":{"start":{"line":460,"column":325,"offset":24120},"end":{"line":460,"column":372,"offset":24167}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":460,"column":372,"offset":24167},"end":{"line":460,"column":386,"offset":24181}}},{"type":"text","value":".","position":{"start":{"line":460,"column":386,"offset":24181},"end":{"line":460,"column":387,"offset":24182}}}],"position":{"start":{"line":460,"column":1,"offset":23796},"end":{"line":460,"column":387,"offset":24182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a perfect opportunity to use ","position":{"start":{"line":462,"column":1,"offset":24184},"end":{"line":462,"column":38,"offset":24221}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array.prototype.filter()"}],"position":{"start":{"line":462,"column":39,"offset":24222},"end":{"line":462,"column":65,"offset":24248}}}],"position":{"start":{"line":462,"column":38,"offset":24221},"end":{"line":462,"column":161,"offset":24344}}},{"type":"text","value":". We can test each task, and exclude a task from the new array if its ","position":{"start":{"line":462,"column":161,"offset":24344},"end":{"line":462,"column":231,"offset":24414}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":462,"column":231,"offset":24414},"end":{"line":462,"column":235,"offset":24418}}},{"type":"text","value":" prop matches the ","position":{"start":{"line":462,"column":235,"offset":24418},"end":{"line":462,"column":253,"offset":24436}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":462,"column":253,"offset":24436},"end":{"line":462,"column":257,"offset":24440}}},{"type":"text","value":" parameter passed into ","position":{"start":{"line":462,"column":257,"offset":24440},"end":{"line":462,"column":280,"offset":24463}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":462,"column":280,"offset":24463},"end":{"line":462,"column":294,"offset":24477}}},{"type":"text","value":".","position":{"start":{"line":462,"column":294,"offset":24477},"end":{"line":462,"column":295,"offset":24478}}}],"position":{"start":{"line":462,"column":1,"offset":24184},"end":{"line":462,"column":295,"offset":24478}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Update the ","position":{"start":{"line":464,"column":1,"offset":24480},"end":{"line":464,"column":12,"offset":24491}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":464,"column":12,"offset":24491},"end":{"line":464,"column":26,"offset":24505}}},{"type":"text","value":" function inside your ","position":{"start":{"line":464,"column":26,"offset":24505},"end":{"line":464,"column":48,"offset":24527}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App.js"}],"position":{"start":{"line":464,"column":48,"offset":24527},"end":{"line":464,"column":56,"offset":24535}}},{"type":"text","value":" file as follows:","position":{"start":{"line":464,"column":56,"offset":24535},"end":{"line":464,"column":73,"offset":24552}}}],"position":{"start":{"line":464,"column":1,"offset":24480},"end":{"line":464,"column":73,"offset":24552}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function deleteTask(id) {\n  const remainingTasks = tasks.filter(task => id !== task.id);\n  setTasks(remainingTasks);\n}\n"}],"position":{"start":{"line":466,"column":1,"offset":24554},"end":{"line":471,"column":4,"offset":24680}}}],"position":{"start":{"line":466,"column":1,"offset":24554},"end":{"line":471,"column":4,"offset":24680}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":472,"column":1,"offset":24681}}}}