{"expireTime":9007200908525414000,"key":"transformer-remark-markdown-html-ast-61e7c1739de73634a8b2a1c3c53708a2--","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Data structures","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":16,"offset":16}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":16,"offset":16}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<br>","position":{"start":{"line":4,"column":1,"offset":18},"end":{"line":4,"column":5,"offset":22}}},{"type":"element","tagName":"a","properties":{"href":"https://ds-unit-5-lambda.netlify.app/#"},"children":[{"type":"text","value":"https://ds-unit-5-lambda.netlify.app/#","position":{"start":{"line":4,"column":5,"offset":22},"end":{"line":4,"column":43,"offset":60}}}],"position":{"start":{"line":4,"column":5,"offset":22},"end":{"line":4,"column":43,"offset":60}}},{"type":"text","value":".\n","position":{"start":{"line":4,"column":43,"offset":60},"end":{"line":5,"column":1,"offset":62}}},{"type":"raw","value":"<br>","position":{"start":{"line":5,"column":1,"offset":62},"end":{"line":5,"column":5,"offset":66}}},{"type":"text","value":"\n","position":{"start":{"line":5,"column":5,"offset":66},"end":{"line":6,"column":1,"offset":67}}},{"type":"raw","value":"<br>","position":{"start":{"line":6,"column":1,"offset":67},"end":{"line":6,"column":5,"offset":71}}},{"type":"text","value":"\n","position":{"start":{"line":6,"column":5,"offset":71},"end":{"line":7,"column":1,"offset":72}}},{"type":"raw","value":"<br>","position":{"start":{"line":7,"column":1,"offset":72},"end":{"line":7,"column":5,"offset":76}}}],"position":{"start":{"line":4,"column":1,"offset":18},"end":{"line":7,"column":5,"offset":76}}},{"type":"text","value":"\n"},{"type":"raw","value":"<h1>   Algorithms </h1>\n<br>\n<iframe style=\"resize:both; overflow:scroll;\"  sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"     style=\"z-index:-1!important; overflow:scroll;resize:both;\"  src=\"https://bgoonz-branch-the-algos.vercel.app/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" >\n</iframe>\n<br>\n<br>\n<br>\n<br>","position":{"start":{"line":9,"column":1,"offset":78},"end":{"line":16,"column":5,"offset":483}}},{"type":"text","value":"\n"},{"type":"raw","value":"<h1>  The Algos Bgoonz Branch </h1>\n<br>\n<iframe style=\"resize:both; overflow:scroll;\"  sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"     style=\"z-index:-1!important; overflow:scroll;resize:both;\"  src=\"https://thealgorithms.netlify.app/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" >\n</iframe>\n<br>\n<br>\n<br>\n<br>\n<br>","position":{"start":{"line":18,"column":1,"offset":485},"end":{"line":26,"column":5,"offset":898}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>\n<br>\n<br>","position":{"start":{"line":28,"column":1,"offset":900},"end":{"line":31,"column":5,"offset":919}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>\n<br>","position":{"start":{"line":33,"column":1,"offset":921},"end":{"line":35,"column":5,"offset":935}}},{"type":"text","value":"\n"},{"type":"raw","value":"<h1>  Python Data Structures</h1>\n<br>\n<iframe style=\"resize:both; overflow:scroll;\"  sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"     style=\"z-index:-1!important; overflow:scroll;resize:both;\"  src=\"https://ds-unit-5-lambda.netlify.app/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" >\n</iframe>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>","position":{"start":{"line":37,"column":1,"offset":937},"end":{"line":47,"column":5,"offset":1361}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>\n<br>\n<br>","position":{"start":{"line":49,"column":1,"offset":1363},"end":{"line":52,"column":5,"offset":1382}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>\n<br>\n<br>\n<h1>   Leetcode </h1>\n<br>\n<iframe style=\"resize:both; overflow:scroll;\"  sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"     style=\"z-index:-1!important; overflow:scroll;resize:both;\"  src=\"https://bgoonz.github.io/Leetcode-JS-PY-MD/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" >\n</iframe>\n<br>\n<br>\n<br>\n<br>","position":{"start":{"line":54,"column":1,"offset":1384},"end":{"line":65,"column":5,"offset":1807}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>\n<br>\n<h1>   Algorithms </h1>\n<br>\n<iframe style=\"resize:both; overflow:scroll;\"  sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"     style=\"z-index:-1!important; overflow:scroll;resize:both;\"  src=\"https://bgoonz-branch-the-algos.vercel.app/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" >\n</iframe>\n<br>\n<br>\n<br>\n<br>","position":{"start":{"line":67,"column":1,"offset":1809},"end":{"line":77,"column":5,"offset":2229}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Data structures in JavaScript","position":{"start":{"line":79,"column":5,"offset":2235},"end":{"line":79,"column":34,"offset":2264}}}],"position":{"start":{"line":79,"column":1,"offset":2231},"end":{"line":79,"column":34,"offset":2264}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<span class=\"graf-dropCap\">","position":{"start":{"line":81,"column":1,"offset":2266},"end":{"line":81,"column":28,"offset":2293}}},{"type":"text","value":"H","position":{"start":{"line":81,"column":28,"offset":2293},"end":{"line":81,"column":29,"offset":2294}}},{"type":"raw","value":"</span>","position":{"start":{"line":81,"column":29,"offset":2294},"end":{"line":81,"column":36,"offset":2301}}},{"type":"text","value":"ere's a website I created to practice data structures!","position":{"start":{"line":81,"column":36,"offset":2301},"end":{"line":81,"column":90,"offset":2355}}}],"position":{"start":{"line":81,"column":1,"offset":2266},"end":{"line":81,"column":90,"offset":2355}}},{"type":"text","value":"\n"},{"type":"raw","value":"<a href=\"https://ds-algo-official-c3dw6uapg-bgoonz.vercel.app/\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://ds-algo-official-c3dw6uapg-bgoonz.vercel.app/\">\n<strong>directory</strong>\n<br />\n<em>Edit description</em>ds-algo-official-c3dw6uapg-bgoonz.vercel.app</a>\n<a href=\"https://ds-algo-official-c3dw6uapg-bgoonz.vercel.app/\" class=\"js-mixtapeImage mixtapeImage mixtapeImage--empty u-ignoreBlock\">\n</a>","position":{"start":{"line":83,"column":1,"offset":2357},"end":{"line":88,"column":5,"offset":2783}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<span class=\"graf-dropCap\">","position":{"start":{"line":90,"column":1,"offset":2785},"end":{"line":90,"column":28,"offset":2812}}},{"type":"text","value":"H","position":{"start":{"line":90,"column":28,"offset":2812},"end":{"line":90,"column":29,"offset":2813}}},{"type":"raw","value":"</span>","position":{"start":{"line":90,"column":29,"offset":2813},"end":{"line":90,"column":36,"offset":2820}}},{"type":"text","value":"ere's the repo that the website is built on:","position":{"start":{"line":90,"column":36,"offset":2820},"end":{"line":90,"column":80,"offset":2864}}}],"position":{"start":{"line":90,"column":1,"offset":2785},"end":{"line":90,"column":80,"offset":2864}}},{"type":"text","value":"\n"},{"type":"raw","value":"<a href=\"https://github.com/bgoonz/DS-ALGO-OFFICIAL\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://github.com/bgoonz/DS-ALGO-OFFICIAL\">\n<strong>bgoonz/DS-ALGO-OFFICIAL</strong>\n<br />\n<em>Navigation ####Author:Bryan Guner Big O notation is the language we use for talking about how long an algorithm takes…</em>github.com</a>\n<a href=\"https://github.com/bgoonz/DS-ALGO-OFFICIAL\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\">\n</a>","position":{"start":{"line":92,"column":1,"offset":2866},"end":{"line":97,"column":5,"offset":3321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<span class=\"graf-dropCap\">","position":{"start":{"line":99,"column":1,"offset":3323},"end":{"line":99,"column":28,"offset":3350}}},{"type":"text","value":"H","position":{"start":{"line":99,"column":28,"offset":3350},"end":{"line":99,"column":29,"offset":3351}}},{"type":"raw","value":"</span>","position":{"start":{"line":99,"column":29,"offset":3351},"end":{"line":99,"column":36,"offset":3358}}},{"type":"text","value":"ere's a live code editor where you can mess with any of the examples…","position":{"start":{"line":99,"column":36,"offset":3358},"end":{"line":99,"column":105,"offset":3427}}}],"position":{"start":{"line":99,"column":1,"offset":3323},"end":{"line":99,"column":105,"offset":3427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Resources (article content below):","position":{"start":{"line":101,"column":5,"offset":3433},"end":{"line":101,"column":39,"offset":3467}}}],"position":{"start":{"line":101,"column":1,"offset":3429},"end":{"line":101,"column":39,"offset":3467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Videos","position":{"start":{"line":103,"column":6,"offset":3474},"end":{"line":103,"column":12,"offset":3480}}}],"position":{"start":{"line":103,"column":1,"offset":3469},"end":{"line":103,"column":12,"offset":3480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"53c4\">\n<a href=\"https://www.youtube.com/watch?v=0IAPZzGSbME&amp;list=PLDN4rrl48XKpZkf03iYFl-O29szjTrs_O&amp;index=2&amp;t=0s\" class=\"markup--anchor markup--li-anchor\">Abdul Bari: YouTubeChannel for Algorithms</a>\n</span>","position":{"start":{"line":105,"column":5,"offset":3486},"end":{"line":107,"column":8,"offset":3716}}},{"type":"text","value":"\n"}],"position":{"start":{"line":105,"column":1,"offset":3482},"end":{"line":107,"column":8,"offset":3716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"ab93\">\n<a href=\"https://www.youtube.com/watch?v=lxja8wBwN0k&amp;list=PLKKfKV1b9e8ps6dD3QA5KFfHdiWj9cB1s\" class=\"markup--anchor markup--li-anchor\">Data Structures and algorithms</a>\n</span>","position":{"start":{"line":108,"column":5,"offset":3721},"end":{"line":110,"column":8,"offset":3919}}},{"type":"text","value":"\n"}],"position":{"start":{"line":108,"column":1,"offset":3717},"end":{"line":110,"column":8,"offset":3919}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"e614\">\n<a href=\"https://www.youtube.com/playlist?list=PLmGElG-9wxc9Us6IK6Qy-KHlG_F3IS6Q9\" class=\"markup--anchor markup--li-anchor\">Data Structures and algorithms Course</a>\n</span>","position":{"start":{"line":111,"column":5,"offset":3924},"end":{"line":113,"column":8,"offset":4114}}},{"type":"text","value":"\n"}],"position":{"start":{"line":111,"column":1,"offset":3920},"end":{"line":113,"column":8,"offset":4114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"3d48\">\n<a href=\"https://www.khanacademy.org/computing/computer-science/algorithms\" class=\"markup--anchor markup--li-anchor\">Khan Academy</a>\n</span>","position":{"start":{"line":114,"column":5,"offset":4119},"end":{"line":116,"column":8,"offset":4277}}},{"type":"text","value":"\n"}],"position":{"start":{"line":114,"column":1,"offset":4115},"end":{"line":116,"column":8,"offset":4277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"ac90\">\n<a href=\"https://www.youtube.com/playlist?list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P\" class=\"markup--anchor markup--li-anchor\">Data structures by mycodeschool</a>Pre-requisite for this lesson is good understanding of pointers in C.</span>","position":{"start":{"line":117,"column":5,"offset":4282},"end":{"line":118,"column":236,"offset":4534}}},{"type":"text","value":"\n"}],"position":{"start":{"line":117,"column":1,"offset":4278},"end":{"line":118,"column":236,"offset":4534}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"9bd9\">\n<a href=\"https://www.youtube.com/watch?v=HtSuA80QTyo&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb\" class=\"markup--anchor markup--li-anchor\">MIT 6.006: Intro to Algorithms(2011)</a>\n</span>","position":{"start":{"line":119,"column":5,"offset":4539},"end":{"line":121,"column":8,"offset":4743}}},{"type":"text","value":"\n"}],"position":{"start":{"line":119,"column":1,"offset":4535},"end":{"line":121,"column":8,"offset":4743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"71f0\">\n<a href=\"https://www.youtube.com/watch?v=5_5oE5lgrhw&amp;list=PLu0W_9lII9ahIappRPN0MCAgtOu3lQjQi\" class=\"markup--anchor markup--li-anchor\">Data Structures and Algorithms by Codewithharry</a>\n</span>","position":{"start":{"line":122,"column":5,"offset":4748},"end":{"line":124,"column":8,"offset":4963}}},{"type":"text","value":"\n"}],"position":{"start":{"line":122,"column":1,"offset":4744},"end":{"line":124,"column":8,"offset":4963}}},{"type":"text","value":"\n"}],"position":{"start":{"line":105,"column":1,"offset":3482},"end":{"line":124,"column":8,"offset":4963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Books","position":{"start":{"line":126,"column":6,"offset":4970},"end":{"line":126,"column":11,"offset":4975}}}],"position":{"start":{"line":126,"column":1,"offset":4965},"end":{"line":126,"column":11,"offset":4975}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"2eac\">\n<a href=\"https://edutechlearners.com/download/Introduction_to_algorithms-3rd%20Edition.pdf\" class=\"markup--anchor markup--li-anchor\">Introduction to Algorithms</a> by Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein</span>","position":{"start":{"line":128,"column":5,"offset":4981},"end":{"line":129,"column":251,"offset":5248}}},{"type":"text","value":"\n"}],"position":{"start":{"line":128,"column":1,"offset":4977},"end":{"line":129,"column":251,"offset":5248}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"3e8d\">\n<a href=\"http://www.sso.sy/sites/default/files/competitive%20programming%203_1.pdf\" class=\"markup--anchor markup--li-anchor\">Competitive Programming 3</a> by Steven Halim and Felix Halim</span>","position":{"start":{"line":130,"column":5,"offset":5253},"end":{"line":131,"column":194,"offset":5463}}},{"type":"text","value":"\n"}],"position":{"start":{"line":130,"column":1,"offset":5249},"end":{"line":131,"column":194,"offset":5463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"3aa3\">\n<a href=\"https://cses.fi/book/book.pdf\" class=\"markup--anchor markup--li-anchor\">Competitive Programmers Hand Book</a> Beginner friendly hand book for competitive programmers.</span>","position":{"start":{"line":132,"column":5,"offset":5468},"end":{"line":133,"column":183,"offset":5667}}},{"type":"text","value":"\n"}],"position":{"start":{"line":132,"column":1,"offset":5464},"end":{"line":133,"column":183,"offset":5667}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"3c02\">\n<a href=\"https://github.com/Amchuz/My-Data-Structures-and-Algorithms-Resources/raw/master/Books/Data%20Structures%20and%20Algorithms%20-%20Narasimha%20Karumanchi.pdf\" class=\"markup--anchor markup--li-anchor\">Data Structures and Algorithms Made Easy</a> by Narasimha Karumanchi</span>","position":{"start":{"line":134,"column":5,"offset":5672},"end":{"line":135,"column":284,"offset":5972}}},{"type":"text","value":"\n"}],"position":{"start":{"line":134,"column":1,"offset":5668},"end":{"line":135,"column":284,"offset":5972}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"93ec\">\n<a href=\"https://github.com/Amchuz/My-Data-Structures-and-Algorithms-Resources/raw/master/Books/Learning%20Algorithms%20Through%20Programming%20and%20Puzzle%20Solving.pdf\" class=\"markup--anchor markup--li-anchor\">Learning Algorithms Through Programming and Puzzle Solving</a> by Alexander Kulikov and Pavel Pevzner</span>","position":{"start":{"line":136,"column":5,"offset":5977},"end":{"line":137,"column":322,"offset":6315}}},{"type":"text","value":"\n"}],"position":{"start":{"line":136,"column":1,"offset":5973},"end":{"line":137,"column":322,"offset":6315}}},{"type":"text","value":"\n"}],"position":{"start":{"line":128,"column":1,"offset":4977},"end":{"line":137,"column":322,"offset":6315}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Coding practice","position":{"start":{"line":139,"column":6,"offset":6322},"end":{"line":139,"column":21,"offset":6337}}}],"position":{"start":{"line":139,"column":1,"offset":6317},"end":{"line":139,"column":21,"offset":6337}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"824c\">\n<a href=\"https://leetcode.com/\" class=\"markup--anchor markup--li-anchor\">LeetCode</a>\n</span>","position":{"start":{"line":141,"column":5,"offset":6343},"end":{"line":143,"column":8,"offset":6453}}},{"type":"text","value":"\n"}],"position":{"start":{"line":141,"column":1,"offset":6339},"end":{"line":143,"column":8,"offset":6453}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"a528\">\n<a href=\"https://www.interviewbit.com/\" class=\"markup--anchor markup--li-anchor\">InterviewBit</a>\n</span>","position":{"start":{"line":144,"column":5,"offset":6458},"end":{"line":146,"column":8,"offset":6580}}},{"type":"text","value":"\n"}],"position":{"start":{"line":144,"column":1,"offset":6454},"end":{"line":146,"column":8,"offset":6580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"fa41\">\n<a href=\"https://codility.com/\" class=\"markup--anchor markup--li-anchor\">Codility</a>\n</span>","position":{"start":{"line":147,"column":5,"offset":6585},"end":{"line":149,"column":8,"offset":6695}}},{"type":"text","value":"\n"}],"position":{"start":{"line":147,"column":1,"offset":6581},"end":{"line":149,"column":8,"offset":6695}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"6c61\">\n<a href=\"https://www.hackerrank.com/\" class=\"markup--anchor markup--li-anchor\">HackerRank</a>\n</span>","position":{"start":{"line":150,"column":5,"offset":6700},"end":{"line":152,"column":8,"offset":6818}}},{"type":"text","value":"\n"}],"position":{"start":{"line":150,"column":1,"offset":6696},"end":{"line":152,"column":8,"offset":6818}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"dff6\">\n<a href=\"https://projecteuler.net/\" class=\"markup--anchor markup--li-anchor\">Project Euler</a>\n</span>","position":{"start":{"line":153,"column":5,"offset":6823},"end":{"line":155,"column":8,"offset":6942}}},{"type":"text","value":"\n"}],"position":{"start":{"line":153,"column":1,"offset":6819},"end":{"line":155,"column":8,"offset":6942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"b2dd\">\n<a href=\"https://spoj.com/\" class=\"markup--anchor markup--li-anchor\">Spoj</a>\n</span>","position":{"start":{"line":156,"column":5,"offset":6947},"end":{"line":158,"column":8,"offset":7049}}},{"type":"text","value":"\n"}],"position":{"start":{"line":156,"column":1,"offset":6943},"end":{"line":158,"column":8,"offset":7049}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"c8e8\">\n<a href=\"https://code.google.com/codejam/contests.html\" class=\"markup--anchor markup--li-anchor\">Google Code Jam practice problems</a>\n</span>","position":{"start":{"line":159,"column":5,"offset":7054},"end":{"line":161,"column":8,"offset":7213}}},{"type":"text","value":"\n"}],"position":{"start":{"line":159,"column":1,"offset":7050},"end":{"line":161,"column":8,"offset":7213}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"e8bb\">\n<a href=\"https://www.hackerearth.com/\" class=\"markup--anchor markup--li-anchor\">HackerEarth</a>\n</span>","position":{"start":{"line":162,"column":5,"offset":7218},"end":{"line":164,"column":8,"offset":7338}}},{"type":"text","value":"\n"}],"position":{"start":{"line":162,"column":1,"offset":7214},"end":{"line":164,"column":8,"offset":7338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"e803\">\n<a href=\"https://www.topcoder.com/\" class=\"markup--anchor markup--li-anchor\">Top Coder</a>\n</span>","position":{"start":{"line":165,"column":5,"offset":7343},"end":{"line":167,"column":8,"offset":7458}}},{"type":"text","value":"\n"}],"position":{"start":{"line":165,"column":1,"offset":7339},"end":{"line":167,"column":8,"offset":7458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"294e\">\n<a href=\"https://www.codechef.com/\" class=\"markup--anchor markup--li-anchor\">CodeChef</a>\n</span>","position":{"start":{"line":168,"column":5,"offset":7463},"end":{"line":170,"column":8,"offset":7577}}},{"type":"text","value":"\n"}],"position":{"start":{"line":168,"column":1,"offset":7459},"end":{"line":170,"column":8,"offset":7577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"9c05\">\n<a href=\"https://www.codewars.com/\" class=\"markup--anchor markup--li-anchor\">Codewars</a>\n</span>","position":{"start":{"line":171,"column":5,"offset":7582},"end":{"line":173,"column":8,"offset":7696}}},{"type":"text","value":"\n"}],"position":{"start":{"line":171,"column":1,"offset":7578},"end":{"line":173,"column":8,"offset":7696}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"356e\">\n<a href=\"https://codesignal.com/\" class=\"markup--anchor markup--li-anchor\">CodeSignal</a>\n</span>","position":{"start":{"line":174,"column":5,"offset":7701},"end":{"line":176,"column":8,"offset":7815}}},{"type":"text","value":"\n"}],"position":{"start":{"line":174,"column":1,"offset":7697},"end":{"line":176,"column":8,"offset":7815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"2d20\">\n<a href=\"http://codekata.com/\" class=\"markup--anchor markup--li-anchor\">CodeKata</a>\n</span>","position":{"start":{"line":177,"column":5,"offset":7820},"end":{"line":179,"column":8,"offset":7929}}},{"type":"text","value":"\n"}],"position":{"start":{"line":177,"column":1,"offset":7816},"end":{"line":179,"column":8,"offset":7929}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"d3bf\">\n<a href=\"https://www.firecode.io/\" class=\"markup--anchor markup--li-anchor\">Firecode</a>\n</span>","position":{"start":{"line":180,"column":5,"offset":7934},"end":{"line":182,"column":8,"offset":8047}}},{"type":"text","value":"\n"}],"position":{"start":{"line":180,"column":1,"offset":7930},"end":{"line":182,"column":8,"offset":8047}}},{"type":"text","value":"\n"}],"position":{"start":{"line":141,"column":1,"offset":6339},"end":{"line":182,"column":8,"offset":8047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Courses","position":{"start":{"line":184,"column":6,"offset":8054},"end":{"line":184,"column":13,"offset":8061}}}],"position":{"start":{"line":184,"column":1,"offset":8049},"end":{"line":184,"column":13,"offset":8061}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"eac2\">\n<a href=\"https://academy.zerotomastery.io/p/master-the-coding-interview-faang-interview-prep\" class=\"markup--anchor markup--li-anchor\">Master the Coding Interview: Big Tech (FAANG) Interviews</a> Course by Andrei and his team.</span>","position":{"start":{"line":186,"column":5,"offset":8067},"end":{"line":187,"column":234,"offset":8317}}},{"type":"text","value":"\n"}],"position":{"start":{"line":186,"column":1,"offset":8063},"end":{"line":187,"column":234,"offset":8317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"36ca\">\n<a href=\"https://realpython.com/python-data-structures\" class=\"markup--anchor markup--li-anchor\">Common Python Data Structures</a> Data structures are the fundamental constructs around which you build your programs. Each data structure provides a particular way of organizing data so it can be accessed efficiently, depending on your use case. Python ships with an extensive set of data structures in its standard library.</span>","position":{"start":{"line":188,"column":5,"offset":8322},"end":{"line":189,"column":430,"offset":8768}}},{"type":"text","value":"\n"}],"position":{"start":{"line":188,"column":1,"offset":8318},"end":{"line":189,"column":430,"offset":8768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"cdc9\">\n<a href=\"https://www.geeksforgeeks.org/fork-cpp-course-structure\" class=\"markup--anchor markup--li-anchor\">Fork CPP</a> A good course for beginners.</span>","position":{"start":{"line":190,"column":5,"offset":8773},"end":{"line":191,"column":156,"offset":8945}}},{"type":"text","value":"\n"}],"position":{"start":{"line":190,"column":1,"offset":8769},"end":{"line":191,"column":156,"offset":8945}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"6d47\">\n<a href=\"https://codeforces.com/edu/course/2\" class=\"markup--anchor markup--li-anchor\">EDU</a> Advanced course.</span>","position":{"start":{"line":192,"column":5,"offset":8950},"end":{"line":193,"column":119,"offset":9085}}},{"type":"text","value":"\n"}],"position":{"start":{"line":192,"column":1,"offset":8946},"end":{"line":193,"column":119,"offset":9085}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"8bb5\">\n<a href=\"https://www.udacity.com/course/c-for-programmers--ud210\" class=\"markup--anchor markup--li-anchor\">C++ For Programmers</a> Learn features and constructs for C++.</span>","position":{"start":{"line":194,"column":5,"offset":9090},"end":{"line":195,"column":177,"offset":9283}}},{"type":"text","value":"\n"}],"position":{"start":{"line":194,"column":1,"offset":9086},"end":{"line":195,"column":177,"offset":9283}}},{"type":"text","value":"\n"}],"position":{"start":{"line":186,"column":1,"offset":8063},"end":{"line":195,"column":177,"offset":9283}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Guides","position":{"start":{"line":197,"column":6,"offset":9290},"end":{"line":197,"column":12,"offset":9296}}}],"position":{"start":{"line":197,"column":1,"offset":9285},"end":{"line":197,"column":12,"offset":9296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"e9e9\">\n<a href=\"http://www.geeksforgeeks.org/\" class=\"markup--anchor markup--li-anchor\">GeeksForGeeks — A CS portal for geeks</a>\n</span>","position":{"start":{"line":199,"column":5,"offset":9302},"end":{"line":201,"column":8,"offset":9449}}},{"type":"text","value":"\n"}],"position":{"start":{"line":199,"column":1,"offset":9298},"end":{"line":201,"column":8,"offset":9449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"a228\">\n<a href=\"https://www.learneroo.com/subjects/8\" class=\"markup--anchor markup--li-anchor\">Learneroo — Algorithms</a>\n</span>","position":{"start":{"line":202,"column":5,"offset":9454},"end":{"line":204,"column":8,"offset":9593}}},{"type":"text","value":"\n"}],"position":{"start":{"line":202,"column":1,"offset":9450},"end":{"line":204,"column":8,"offset":9593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"a2f0\">\n<a href=\"http://www.topcoder.com/tc?d1=tutorials&amp;d2=alg_index&amp;module=Static\" class=\"markup--anchor markup--li-anchor\">Top Coder tutorials</a>\n</span>","position":{"start":{"line":205,"column":5,"offset":9598},"end":{"line":207,"column":8,"offset":9772}}},{"type":"text","value":"\n"}],"position":{"start":{"line":205,"column":1,"offset":9594},"end":{"line":207,"column":8,"offset":9772}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"f3ec\">\n<a href=\"http://www.infoarena.ro/training-path\" class=\"markup--anchor markup--li-anchor\">Infoarena training path</a> (RO)</span>","position":{"start":{"line":208,"column":5,"offset":9777},"end":{"line":209,"column":129,"offset":9922}}},{"type":"text","value":"\n"}],"position":{"start":{"line":208,"column":1,"offset":9773},"end":{"line":209,"column":129,"offset":9922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"ec93\">","position":{"start":{"line":210,"column":5,"offset":9927},"end":{"line":210,"column":21,"offset":9943}}},{"type":"text","value":"Steven & Felix Halim — ","position":{"start":{"line":210,"column":21,"offset":9943},"end":{"line":210,"column":44,"offset":9966}}},{"type":"raw","value":"<a href=\"https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=118\" class=\"markup--anchor markup--li-anchor\">","position":{"start":{"line":210,"column":44,"offset":9966},"end":{"line":210,"column":186,"offset":10108}}},{"type":"text","value":"Increasing the Lower Bound of Programming Contests","position":{"start":{"line":210,"column":186,"offset":10108},"end":{"line":210,"column":236,"offset":10158}}},{"type":"raw","value":"</a>","position":{"start":{"line":210,"column":236,"offset":10158},"end":{"line":210,"column":240,"offset":10162}}},{"type":"text","value":" (UVA Online Judge)","position":{"start":{"line":210,"column":240,"offset":10162},"end":{"line":210,"column":259,"offset":10181}}},{"type":"raw","value":"</span>","position":{"start":{"line":210,"column":259,"offset":10181},"end":{"line":210,"column":266,"offset":10188}}}],"position":{"start":{"line":210,"column":1,"offset":9923},"end":{"line":210,"column":266,"offset":10188}}},{"type":"text","value":"\n"}],"position":{"start":{"line":199,"column":1,"offset":9298},"end":{"line":210,"column":266,"offset":10188}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"space","position":{"start":{"line":212,"column":8,"offset":10197},"end":{"line":212,"column":13,"offset":10202}}}],"position":{"start":{"line":212,"column":7,"offset":10196},"end":{"line":212,"column":14,"offset":10203}}}],"position":{"start":{"line":212,"column":5,"offset":10194},"end":{"line":212,"column":16,"offset":10205}}}],"position":{"start":{"line":212,"column":1,"offset":10190},"end":{"line":212,"column":16,"offset":10205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The space complexity represents the memory consumption of a data structure. As for most of the things in life, you can't have it all, so it is with the data structures. You will generally need to trade some time for space or the other way around.","position":{"start":{"line":214,"column":4,"offset":10210},"end":{"line":214,"column":250,"offset":10456}}}],"position":{"start":{"line":214,"column":3,"offset":10209},"end":{"line":214,"column":251,"offset":10457}}}],"position":{"start":{"line":214,"column":3,"offset":10209},"end":{"line":214,"column":251,"offset":10457}}},{"type":"text","value":"\n"}],"position":{"start":{"line":214,"column":1,"offset":10207},"end":{"line":214,"column":251,"offset":10457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"time","position":{"start":{"line":216,"column":6,"offset":10464},"end":{"line":216,"column":10,"offset":10468}}}],"position":{"start":{"line":216,"column":5,"offset":10463},"end":{"line":216,"column":11,"offset":10469}}}],"position":{"start":{"line":216,"column":1,"offset":10459},"end":{"line":216,"column":11,"offset":10469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The time complexity for a data structure is in general more diverse than its space complexity.","position":{"start":{"line":218,"column":4,"offset":10474},"end":{"line":218,"column":98,"offset":10568}}}],"position":{"start":{"line":218,"column":3,"offset":10473},"end":{"line":218,"column":99,"offset":10569}}}],"position":{"start":{"line":218,"column":3,"offset":10473},"end":{"line":218,"column":99,"offset":10569}}},{"type":"text","value":"\n"}],"position":{"start":{"line":218,"column":1,"offset":10471},"end":{"line":218,"column":99,"offset":10569}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Several operations","position":{"start":{"line":220,"column":6,"offset":10576},"end":{"line":220,"column":24,"offset":10594}}}],"position":{"start":{"line":220,"column":5,"offset":10575},"end":{"line":220,"column":25,"offset":10595}}}],"position":{"start":{"line":220,"column":1,"offset":10571},"end":{"line":220,"column":25,"offset":10595}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"In contrary to algorithms, when you look at the time complexity for data structures you need to express it for several operations that you can do with data structures. It can be adding elements, deleting elements, accessing an element or even searching for an element.","position":{"start":{"line":222,"column":4,"offset":10600},"end":{"line":222,"column":272,"offset":10868}}}],"position":{"start":{"line":222,"column":3,"offset":10599},"end":{"line":222,"column":273,"offset":10869}}}],"position":{"start":{"line":222,"column":3,"offset":10599},"end":{"line":222,"column":273,"offset":10869}}},{"type":"text","value":"\n"}],"position":{"start":{"line":222,"column":1,"offset":10597},"end":{"line":222,"column":273,"offset":10869}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Dependent on data","position":{"start":{"line":224,"column":6,"offset":10876},"end":{"line":224,"column":23,"offset":10893}}}],"position":{"start":{"line":224,"column":5,"offset":10875},"end":{"line":224,"column":24,"offset":10894}}}],"position":{"start":{"line":224,"column":1,"offset":10871},"end":{"line":224,"column":24,"offset":10894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Something that data structure and algorithms have in common when talking about time complexity is that they are both dealing with data. When you deal with data you become dependent on them and as a result the time complexity is also dependent of the data that you received. To solve this problem we talk about 3 different time complexity.","position":{"start":{"line":226,"column":4,"offset":10899},"end":{"line":226,"column":342,"offset":11237}}}],"position":{"start":{"line":226,"column":3,"offset":10898},"end":{"line":226,"column":343,"offset":11238}}}],"position":{"start":{"line":226,"column":3,"offset":10898},"end":{"line":226,"column":343,"offset":11238}}},{"type":"text","value":"\n"}],"position":{"start":{"line":226,"column":1,"offset":10896},"end":{"line":226,"column":343,"offset":11238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"bc8d\">","position":{"start":{"line":228,"column":5,"offset":11244},"end":{"line":228,"column":21,"offset":11260}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The best-case complexity: when the data looks the best","position":{"start":{"line":228,"column":23,"offset":11262},"end":{"line":228,"column":77,"offset":11316}}}],"position":{"start":{"line":228,"column":21,"offset":11260},"end":{"line":228,"column":79,"offset":11318}}},{"type":"raw","value":"</span>","position":{"start":{"line":228,"column":79,"offset":11318},"end":{"line":228,"column":86,"offset":11325}}}],"position":{"start":{"line":228,"column":1,"offset":11240},"end":{"line":228,"column":86,"offset":11325}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"8b06\">","position":{"start":{"line":229,"column":5,"offset":11330},"end":{"line":229,"column":21,"offset":11346}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The worst-case complexity: when the data looks the worst","position":{"start":{"line":229,"column":23,"offset":11348},"end":{"line":229,"column":79,"offset":11404}}}],"position":{"start":{"line":229,"column":21,"offset":11346},"end":{"line":229,"column":81,"offset":11406}}},{"type":"raw","value":"</span>","position":{"start":{"line":229,"column":81,"offset":11406},"end":{"line":229,"column":88,"offset":11413}}}],"position":{"start":{"line":229,"column":1,"offset":11326},"end":{"line":229,"column":88,"offset":11413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"881c\">","position":{"start":{"line":230,"column":5,"offset":11418},"end":{"line":230,"column":21,"offset":11434}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The average-case complexity: when the data looks average","position":{"start":{"line":230,"column":23,"offset":11436},"end":{"line":230,"column":79,"offset":11492}}}],"position":{"start":{"line":230,"column":21,"offset":11434},"end":{"line":230,"column":81,"offset":11494}}},{"type":"raw","value":"</span>","position":{"start":{"line":230,"column":81,"offset":11494},"end":{"line":230,"column":88,"offset":11501}}}],"position":{"start":{"line":230,"column":1,"offset":11414},"end":{"line":230,"column":88,"offset":11501}}},{"type":"text","value":"\n"}],"position":{"start":{"line":228,"column":1,"offset":11240},"end":{"line":230,"column":88,"offset":11501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Big O notation","position":{"start":{"line":232,"column":5,"offset":11507},"end":{"line":232,"column":19,"offset":11521}}}],"position":{"start":{"line":232,"column":1,"offset":11503},"end":{"line":232,"column":19,"offset":11521}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The complexity is usually expressed with the Big O notation. The wikipedia page about this subject is pretty complex but you can find here a good summary of the different complexity for the most famous data structures and sorting algorithms.","position":{"start":{"line":234,"column":1,"offset":11523},"end":{"line":234,"column":242,"offset":11764}}}],"position":{"start":{"line":234,"column":1,"offset":11523},"end":{"line":234,"column":242,"offset":11764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Array data structure","position":{"start":{"line":236,"column":5,"offset":11770},"end":{"line":236,"column":29,"offset":11794}}}],"position":{"start":{"line":236,"column":1,"offset":11766},"end":{"line":236,"column":29,"offset":11794}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*Qk3UYgeqXamRrFLR.gif\" class=\"graf-image\" />\n</figure>### Definition","position":{"start":{"line":238,"column":1,"offset":11796},"end":{"line":240,"column":24,"offset":11924}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An Array data structure, or simply an Array, is a data structure consisting of a collection of elements (values or variables), each identified by at least one array index or key. The simplest type of data structure is a linear array, also called one-dimensional array. From Wikipedia","position":{"start":{"line":242,"column":1,"offset":11926},"end":{"line":242,"column":284,"offset":12209}}}],"position":{"start":{"line":242,"column":1,"offset":11926},"end":{"line":242,"column":284,"offset":12209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Arrays are among the oldest and most important data structures and are used by every program. They are also used to implement many other data structures.","position":{"start":{"line":244,"column":1,"offset":12211},"end":{"line":244,"column":154,"offset":12364}}}],"position":{"start":{"line":244,"column":1,"offset":12211},"end":{"line":244,"column":154,"offset":12364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Complexity","position":{"start":{"line":246,"column":2,"offset":12367},"end":{"line":246,"column":12,"offset":12377}}}],"position":{"start":{"line":246,"column":1,"offset":12366},"end":{"line":246,"column":13,"offset":12378}}},{"type":"text","value":"\n","position":{"start":{"line":246,"column":13,"offset":12378},"end":{"line":247,"column":1,"offset":12379}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Average","position":{"start":{"line":247,"column":2,"offset":12380},"end":{"line":247,"column":9,"offset":12387}}}],"position":{"start":{"line":247,"column":1,"offset":12379},"end":{"line":247,"column":10,"offset":12388}}},{"type":"text","value":"\n","position":{"start":{"line":247,"column":10,"offset":12388},"end":{"line":248,"column":1,"offset":12389}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Access Search Insertion Deletion","position":{"start":{"line":248,"column":2,"offset":12390},"end":{"line":248,"column":34,"offset":12422}}}],"position":{"start":{"line":248,"column":1,"offset":12389},"end":{"line":248,"column":35,"offset":12423}}}],"position":{"start":{"line":246,"column":1,"offset":12366},"end":{"line":248,"column":35,"offset":12423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"O(1) O(n) O(1) O(n)","position":{"start":{"line":250,"column":1,"offset":12425},"end":{"line":250,"column":20,"offset":12444}}}],"position":{"start":{"line":250,"column":1,"offset":12425},"end":{"line":250,"column":20,"offset":12444}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/1*-BJ2hU-CZO2kuzu4x5a53g.png\" class=\"graf-image\" />\n</figure>indexvalue0 … this is the first value, stored at zero position","position":{"start":{"line":252,"column":1,"offset":12446},"end":{"line":254,"column":72,"offset":12628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"b953\">","position":{"start":{"line":256,"column":5,"offset":12634},"end":{"line":256,"column":21,"offset":12650}}},{"type":"text","value":"The index of an array ","position":{"start":{"line":256,"column":21,"offset":12650},"end":{"line":256,"column":43,"offset":12672}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"runs in sequence","position":{"start":{"line":256,"column":45,"offset":12674},"end":{"line":256,"column":61,"offset":12690}}}],"position":{"start":{"line":256,"column":43,"offset":12672},"end":{"line":256,"column":63,"offset":12692}}},{"type":"raw","value":"</span>","position":{"start":{"line":256,"column":63,"offset":12692},"end":{"line":256,"column":70,"offset":12699}}}],"position":{"start":{"line":256,"column":1,"offset":12630},"end":{"line":257,"column":1,"offset":12700}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"This could be useful for storing data that are required to be ordered, such as rankings or queues","position":{"start":{"line":258,"column":5,"offset":12705},"end":{"line":258,"column":102,"offset":12802}}}],"position":{"start":{"line":258,"column":1,"offset":12701},"end":{"line":259,"column":1,"offset":12803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"In JavaScript, array's value could be mixed; meaning value of each index could be of different data, be it String, Number or even Objects","position":{"start":{"line":260,"column":5,"offset":12808},"end":{"line":260,"column":142,"offset":12945}}}],"position":{"start":{"line":260,"column":1,"offset":12804},"end":{"line":260,"column":142,"offset":12945}}},{"type":"text","value":"\n"}],"position":{"start":{"line":256,"column":1,"offset":12630},"end":{"line":260,"column":142,"offset":12945}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"2. Objects","position":{"start":{"line":262,"column":5,"offset":12951},"end":{"line":262,"column":15,"offset":12961}}}],"position":{"start":{"line":262,"column":1,"offset":12947},"end":{"line":262,"column":15,"offset":12961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Think of objects as a logical grouping of a bunch of properties.","position":{"start":{"line":264,"column":1,"offset":12963},"end":{"line":264,"column":65,"offset":13027}}}],"position":{"start":{"line":264,"column":1,"offset":12963},"end":{"line":264,"column":65,"offset":13027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Properties could be some variable that it's storing or some methods that it's using.","position":{"start":{"line":266,"column":1,"offset":13029},"end":{"line":266,"column":85,"offset":13113}}}],"position":{"start":{"line":266,"column":1,"offset":13029},"end":{"line":266,"column":85,"offset":13113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I also visualize an object as a table.","position":{"start":{"line":268,"column":1,"offset":13115},"end":{"line":268,"column":39,"offset":13153}}}],"position":{"start":{"line":268,"column":1,"offset":13115},"end":{"line":268,"column":39,"offset":13153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The main difference is that object's \"index\" need not be numbers and is not necessarily sequenced.","position":{"start":{"line":270,"column":1,"offset":13155},"end":{"line":270,"column":99,"offset":13253}}}],"position":{"start":{"line":270,"column":1,"offset":13155},"end":{"line":270,"column":99,"offset":13253}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/1200/1*KVZkD2zrgEa_47igW8Hq8g.png\" class=\"graf-image\" />\n</figure>","position":{"start":{"line":272,"column":1,"offset":13255},"end":{"line":274,"column":10,"offset":13376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Hash Table","position":{"start":{"line":276,"column":5,"offset":13382},"end":{"line":276,"column":19,"offset":13396}}}],"position":{"start":{"line":276,"column":1,"offset":13378},"end":{"line":276,"column":19,"offset":13396}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*avbxLAFocSV6vsl5.gif\" class=\"graf-image\" />\n</figure>\n<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*3GJiRoLyEoZ_aIlO\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":278,"column":1,"offset":13398},"end":{"line":283,"column":26,"offset":13639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Hash Table (Hash Map) is a data structure used to implement an associative array, a structure that can map keys to values. A Hash Table uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found. From Wikipedia","position":{"start":{"line":285,"column":4,"offset":13644},"end":{"line":285,"column":275,"offset":13915}}}],"position":{"start":{"line":285,"column":3,"offset":13643},"end":{"line":285,"column":276,"offset":13916}}}],"position":{"start":{"line":285,"column":3,"offset":13643},"end":{"line":285,"column":276,"offset":13916}}},{"type":"text","value":"\n"}],"position":{"start":{"line":285,"column":1,"offset":13641},"end":{"line":285,"column":276,"offset":13916}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hash Tables are considered the more efficient data structure for lookup and for this reason, they are widely used.","position":{"start":{"line":287,"column":1,"offset":13918},"end":{"line":287,"column":115,"offset":14032}}}],"position":{"start":{"line":287,"column":1,"offset":13918},"end":{"line":287,"column":115,"offset":14032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion","position":{"start":{"line":289,"column":1,"offset":14034},"end":{"line":291,"column":33,"offset":14085}}}],"position":{"start":{"line":289,"column":1,"offset":14034},"end":{"line":291,"column":33,"offset":14085}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"f63f\">","position":{"start":{"line":293,"column":5,"offset":14091},"end":{"line":293,"column":21,"offset":14107}}},{"type":"text","value":"O(1) O(1) O(1)","position":{"start":{"line":293,"column":21,"offset":14107},"end":{"line":293,"column":35,"offset":14121}}},{"type":"raw","value":"</span>","position":{"start":{"line":293,"column":35,"offset":14121},"end":{"line":293,"column":42,"offset":14128}}}],"position":{"start":{"line":293,"column":1,"offset":14087},"end":{"line":293,"column":42,"offset":14128}}},{"type":"text","value":"\n"}],"position":{"start":{"line":293,"column":1,"offset":14087},"end":{"line":293,"column":42,"offset":14128}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":295,"column":4,"offset":14133},"end":{"line":295,"column":12,"offset":14141}}}],"position":{"start":{"line":295,"column":3,"offset":14132},"end":{"line":295,"column":13,"offset":14142}}}],"position":{"start":{"line":295,"column":3,"offset":14132},"end":{"line":295,"column":13,"offset":14142}}},{"type":"text","value":"\n"}],"position":{"start":{"line":295,"column":1,"offset":14130},"end":{"line":295,"column":13,"offset":14142}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note, here I am storing another object for every hash in my Hash Table.","position":{"start":{"line":297,"column":1,"offset":14144},"end":{"line":297,"column":72,"offset":14215}}}],"position":{"start":{"line":297,"column":1,"offset":14144},"end":{"line":297,"column":72,"offset":14215}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Set","position":{"start":{"line":299,"column":5,"offset":14221},"end":{"line":299,"column":12,"offset":14228}}}],"position":{"start":{"line":299,"column":1,"offset":14217},"end":{"line":299,"column":12,"offset":14228}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Sets","position":{"start":{"line":301,"column":5,"offset":14234},"end":{"line":301,"column":9,"offset":14238}}}],"position":{"start":{"line":301,"column":1,"offset":14230},"end":{"line":301,"column":9,"offset":14238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sets are pretty much what it sounds like. It's the same intuition as Set in Mathematics. I visualize Sets as Venn Diagrams.","position":{"start":{"line":303,"column":1,"offset":14240},"end":{"line":303,"column":124,"offset":14363}}}],"position":{"start":{"line":303,"column":1,"offset":14240},"end":{"line":303,"column":124,"offset":14363}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*AIQljh9p8Baw9TnE.png\" class=\"graf-image\" />\n</figure>\n<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*gOE33ANZP2ujbjIG\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":305,"column":1,"offset":14365},"end":{"line":310,"column":26,"offset":14606}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Set is an abstract data type that can store certain values, without any particular order, and no repeated values. It is a computer implementation of the mathematical concept of a finite Set. From Wikipedia","position":{"start":{"line":312,"column":4,"offset":14611},"end":{"line":312,"column":211,"offset":14818}}}],"position":{"start":{"line":312,"column":3,"offset":14610},"end":{"line":312,"column":212,"offset":14819}}}],"position":{"start":{"line":312,"column":3,"offset":14610},"end":{"line":312,"column":212,"offset":14819}}},{"type":"text","value":"\n"}],"position":{"start":{"line":312,"column":1,"offset":14608},"end":{"line":312,"column":212,"offset":14819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Set data structure is usually used to test whether elements belong to set of values. Rather then only containing elements, Sets are more used to perform operations on multiple values at once with methods such as union, intersect, etc…","position":{"start":{"line":314,"column":1,"offset":14821},"end":{"line":314,"column":239,"offset":15059}}}],"position":{"start":{"line":314,"column":1,"offset":14821},"end":{"line":314,"column":239,"offset":15059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion","position":{"start":{"line":316,"column":1,"offset":15061},"end":{"line":318,"column":33,"offset":15112}}}],"position":{"start":{"line":316,"column":1,"offset":15061},"end":{"line":318,"column":33,"offset":15112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"daa6\">","position":{"start":{"line":320,"column":5,"offset":15118},"end":{"line":320,"column":21,"offset":15134}}},{"type":"text","value":"O(n) O(n) O(n)","position":{"start":{"line":320,"column":21,"offset":15134},"end":{"line":320,"column":35,"offset":15148}}},{"type":"raw","value":"</span>","position":{"start":{"line":320,"column":35,"offset":15148},"end":{"line":320,"column":42,"offset":15155}}}],"position":{"start":{"line":320,"column":1,"offset":15114},"end":{"line":320,"column":42,"offset":15155}}},{"type":"text","value":"\n"}],"position":{"start":{"line":320,"column":1,"offset":15114},"end":{"line":320,"column":42,"offset":15155}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":322,"column":4,"offset":15160},"end":{"line":322,"column":12,"offset":15168}}}],"position":{"start":{"line":322,"column":3,"offset":15159},"end":{"line":322,"column":13,"offset":15169}}}],"position":{"start":{"line":322,"column":3,"offset":15159},"end":{"line":322,"column":13,"offset":15169}}},{"type":"text","value":"\n"}],"position":{"start":{"line":322,"column":1,"offset":15157},"end":{"line":322,"column":13,"offset":15169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Singly Linked List","position":{"start":{"line":324,"column":5,"offset":15175},"end":{"line":324,"column":27,"offset":15197}}}],"position":{"start":{"line":324,"column":1,"offset":15171},"end":{"line":324,"column":27,"offset":15197}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*fLs64rV-Xq19aVCA.gif\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":326,"column":1,"offset":15199},"end":{"line":328,"column":26,"offset":15329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Singly Linked List is a linear collection of data elements, called nodes pointing to the next node by means of pointer. It is a data structure consisting of a group of nodes which together represent a sequence. Under the simplest form, each node is composed of data and a reference (in other words, a link) to the next node in the sequence.","position":{"start":{"line":330,"column":4,"offset":15334},"end":{"line":330,"column":346,"offset":15676}}}],"position":{"start":{"line":330,"column":3,"offset":15333},"end":{"line":330,"column":347,"offset":15677}}}],"position":{"start":{"line":330,"column":3,"offset":15333},"end":{"line":330,"column":347,"offset":15677}}},{"type":"text","value":"\n"}],"position":{"start":{"line":330,"column":1,"offset":15331},"end":{"line":330,"column":347,"offset":15677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Linked Lists are among the simplest and most common data structures because it allows for efficient insertion or removal of elements from any position in the sequence.","position":{"start":{"line":332,"column":1,"offset":15679},"end":{"line":332,"column":168,"offset":15846}}}],"position":{"start":{"line":332,"column":1,"offset":15679},"end":{"line":332,"column":168,"offset":15846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion\nO(n) O(n) O(1) O(1)","position":{"start":{"line":334,"column":1,"offset":15848},"end":{"line":337,"column":20,"offset":15919}}}],"position":{"start":{"line":334,"column":1,"offset":15848},"end":{"line":337,"column":20,"offset":15919}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":339,"column":4,"offset":15924},"end":{"line":339,"column":12,"offset":15932}}}],"position":{"start":{"line":339,"column":3,"offset":15923},"end":{"line":339,"column":13,"offset":15933}}}],"position":{"start":{"line":339,"column":3,"offset":15923},"end":{"line":339,"column":13,"offset":15933}}},{"type":"text","value":"\n"}],"position":{"start":{"line":339,"column":1,"offset":15921},"end":{"line":339,"column":13,"offset":15933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":341,"column":1,"offset":15935},"end":{"line":341,"column":4,"offset":15938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Doubly Linked List","position":{"start":{"line":343,"column":5,"offset":15944},"end":{"line":343,"column":27,"offset":15966}}}],"position":{"start":{"line":343,"column":1,"offset":15940},"end":{"line":343,"column":27,"offset":15966}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*TQXiR-L_itiG3WP-.gif\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":345,"column":1,"offset":15968},"end":{"line":347,"column":26,"offset":16098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Doubly Linked List is a linked data structure that consists of a set of sequentially linked records called nodes. Each node contains two fields, called links, that are references to the previous and to the next node in the sequence of nodes. From Wikipedia","position":{"start":{"line":349,"column":4,"offset":16103},"end":{"line":349,"column":262,"offset":16361}}}],"position":{"start":{"line":349,"column":3,"offset":16102},"end":{"line":349,"column":263,"offset":16362}}}],"position":{"start":{"line":349,"column":3,"offset":16102},"end":{"line":349,"column":263,"offset":16362}}},{"type":"text","value":"\n"}],"position":{"start":{"line":349,"column":1,"offset":16100},"end":{"line":349,"column":263,"offset":16362}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Having two node links allow traversal in either direction but adding or removing a node in a doubly linked list requires changing more links than the same operations on a Singly Linked List.","position":{"start":{"line":351,"column":1,"offset":16364},"end":{"line":351,"column":191,"offset":16554}}}],"position":{"start":{"line":351,"column":1,"offset":16364},"end":{"line":351,"column":191,"offset":16554}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion\nO(n) O(n) O(1) O(1)","position":{"start":{"line":353,"column":1,"offset":16556},"end":{"line":356,"column":20,"offset":16627}}}],"position":{"start":{"line":353,"column":1,"offset":16556},"end":{"line":356,"column":20,"offset":16627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":358,"column":4,"offset":16632},"end":{"line":358,"column":12,"offset":16640}}}],"position":{"start":{"line":358,"column":3,"offset":16631},"end":{"line":358,"column":13,"offset":16641}}}],"position":{"start":{"line":358,"column":3,"offset":16631},"end":{"line":358,"column":13,"offset":16641}}},{"type":"text","value":"\n"}],"position":{"start":{"line":358,"column":1,"offset":16629},"end":{"line":358,"column":13,"offset":16641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Stack","position":{"start":{"line":360,"column":5,"offset":16647},"end":{"line":360,"column":14,"offset":16656}}}],"position":{"start":{"line":360,"column":1,"offset":16643},"end":{"line":360,"column":14,"offset":16656}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/1200/0*qsjYW-Lvfo22ecLE.gif\" class=\"graf-image\" />\n</figure>","position":{"start":{"line":362,"column":1,"offset":16658},"end":{"line":364,"column":10,"offset":16773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Definition","position":{"start":{"line":366,"column":6,"offset":16780},"end":{"line":366,"column":16,"offset":16790}}}],"position":{"start":{"line":366,"column":5,"offset":16779},"end":{"line":366,"column":17,"offset":16791}}}],"position":{"start":{"line":366,"column":1,"offset":16775},"end":{"line":366,"column":17,"offset":16791}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Stack is an abstract data type that serves as a collection of elements, with two principal operations: push, which adds an element to the collection, and pop, which removes the most recently added element that was not yet removed. The order in which elements come off a Stack gives rise to its alternative name, LIFO (for last in, first out). From Wikipedia","position":{"start":{"line":368,"column":4,"offset":16796},"end":{"line":368,"column":363,"offset":17155}}}],"position":{"start":{"line":368,"column":3,"offset":16795},"end":{"line":368,"column":364,"offset":17156}}}],"position":{"start":{"line":368,"column":3,"offset":16795},"end":{"line":368,"column":364,"offset":17156}}},{"type":"text","value":"\n"}],"position":{"start":{"line":368,"column":1,"offset":16793},"end":{"line":368,"column":364,"offset":17156}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A Stack often has a third method peek which allows to check the last pushed element without popping it.","position":{"start":{"line":370,"column":1,"offset":17158},"end":{"line":370,"column":104,"offset":17261}}}],"position":{"start":{"line":370,"column":1,"offset":17158},"end":{"line":370,"column":104,"offset":17261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion\nO(n) O(n) O(1) O(1)","position":{"start":{"line":372,"column":1,"offset":17263},"end":{"line":375,"column":20,"offset":17334}}}],"position":{"start":{"line":372,"column":1,"offset":17263},"end":{"line":375,"column":20,"offset":17334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":377,"column":4,"offset":17339},"end":{"line":377,"column":12,"offset":17347}}}],"position":{"start":{"line":377,"column":3,"offset":17338},"end":{"line":377,"column":13,"offset":17348}}}],"position":{"start":{"line":377,"column":3,"offset":17338},"end":{"line":377,"column":13,"offset":17348}}},{"type":"text","value":"\n"}],"position":{"start":{"line":377,"column":1,"offset":17336},"end":{"line":377,"column":13,"offset":17348}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Queue","position":{"start":{"line":379,"column":5,"offset":17354},"end":{"line":379,"column":14,"offset":17363}}}],"position":{"start":{"line":379,"column":1,"offset":17350},"end":{"line":379,"column":14,"offset":17363}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*YvfuX5tKP7-V0p7v.gif\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":381,"column":1,"offset":17365},"end":{"line":383,"column":26,"offset":17495}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Queue is a particular kind of abstract data type or collection in which the entities in the collection are kept in order and the principal operations are the addition of entities to the rear terminal position, known as enqueue, and removal of entities from the front terminal position, known as dequeue. This makes the Queue a First-In-First-Out (FIFO) data structure. In a FIFO data structure, the first element added to the Queue will be the first one to be removed.","position":{"start":{"line":385,"column":4,"offset":17500},"end":{"line":385,"column":474,"offset":17970}}}],"position":{"start":{"line":385,"column":3,"offset":17499},"end":{"line":385,"column":475,"offset":17971}}}],"position":{"start":{"line":385,"column":3,"offset":17499},"end":{"line":385,"column":475,"offset":17971}}},{"type":"text","value":"\n"}],"position":{"start":{"line":385,"column":1,"offset":17497},"end":{"line":385,"column":475,"offset":17971}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As for the Stack data structure, a peek operation is often added to the Queue data structure. It returns the value of the front element without dequeuing it.","position":{"start":{"line":387,"column":1,"offset":17973},"end":{"line":387,"column":158,"offset":18130}}}],"position":{"start":{"line":387,"column":1,"offset":17973},"end":{"line":387,"column":158,"offset":18130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion\nO(n) O(n) O(1) O(n)","position":{"start":{"line":389,"column":1,"offset":18132},"end":{"line":392,"column":20,"offset":18203}}}],"position":{"start":{"line":389,"column":1,"offset":18132},"end":{"line":392,"column":20,"offset":18203}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":394,"column":4,"offset":18208},"end":{"line":394,"column":12,"offset":18216}}}],"position":{"start":{"line":394,"column":3,"offset":18207},"end":{"line":394,"column":13,"offset":18217}}}],"position":{"start":{"line":394,"column":3,"offset":18207},"end":{"line":394,"column":13,"offset":18217}}},{"type":"text","value":"\n"}],"position":{"start":{"line":394,"column":1,"offset":18205},"end":{"line":394,"column":13,"offset":18217}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Tree","position":{"start":{"line":396,"column":5,"offset":18223},"end":{"line":396,"column":13,"offset":18231}}}],"position":{"start":{"line":396,"column":1,"offset":18219},"end":{"line":396,"column":13,"offset":18231}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*yUiQ-NaPKeLQnN7n\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":398,"column":1,"offset":18233},"end":{"line":400,"column":26,"offset":18359}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Tree is a widely used data structure that simulates a hierarchical tree structure, with a root value and subtrees of children with a parent node. A tree data structure can be defined recursively as a collection of nodes (starting at a root node), where each node is a data structure consisting of a value, together with a list of references to nodes (the \"children\"), with the constraints that no reference is duplicated, and none points to the root node. From Wikipedia","position":{"start":{"line":402,"column":4,"offset":18364},"end":{"line":402,"column":476,"offset":18836}}}],"position":{"start":{"line":402,"column":3,"offset":18363},"end":{"line":402,"column":477,"offset":18837}}}],"position":{"start":{"line":402,"column":3,"offset":18363},"end":{"line":402,"column":477,"offset":18837}}},{"type":"text","value":"\n"}],"position":{"start":{"line":402,"column":1,"offset":18361},"end":{"line":402,"column":477,"offset":18837}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion\nO(n) O(n) O(n) O(n)\nTo get a full overview of the time and space complexity of the Tree data structure, have a look to this excellent Big O cheat sheet.","position":{"start":{"line":404,"column":1,"offset":18839},"end":{"line":408,"column":133,"offset":19043}}}],"position":{"start":{"line":404,"column":1,"offset":18839},"end":{"line":408,"column":133,"offset":19043}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/1*DCdQiB6XqBJCrFRz12BwqA.png\" class=\"graf-image\" />\n</figure>*The code*","position":{"start":{"line":410,"column":1,"offset":19045},"end":{"line":412,"column":20,"offset":19175}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Graph","position":{"start":{"line":414,"column":5,"offset":19181},"end":{"line":414,"column":14,"offset":19190}}}],"position":{"start":{"line":414,"column":1,"offset":19177},"end":{"line":414,"column":14,"offset":19190}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*q31mL1kjFWlIzw3l.gif\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":416,"column":1,"offset":19192},"end":{"line":418,"column":26,"offset":19322}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Graph data structure consists of a finite (and possibly mutable) set of vertices or nodes or points, together with a set of unordered pairs of these vertices for an undirected Graph or a set of ordered pairs for a directed Graph. These pairs are known as edges, arcs, or lines for an undirected Graph and as arrows, directed edges, directed arcs, or directed lines for a directed Graph. The vertices may be part of the Graph structure, or may be external entities represented by integer indices or references.","position":{"start":{"line":420,"column":4,"offset":19327},"end":{"line":420,"column":515,"offset":19838}}}],"position":{"start":{"line":420,"column":3,"offset":19326},"end":{"line":420,"column":516,"offset":19839}}}],"position":{"start":{"line":420,"column":3,"offset":19326},"end":{"line":420,"column":516,"offset":19839}}},{"type":"text","value":"\n"}],"position":{"start":{"line":420,"column":1,"offset":19324},"end":{"line":420,"column":516,"offset":19839}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"f896\">","position":{"start":{"line":422,"column":5,"offset":19845},"end":{"line":422,"column":21,"offset":19861}}},{"type":"text","value":"A graph is ","position":{"start":{"line":422,"column":21,"offset":19861},"end":{"line":422,"column":32,"offset":19872}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"any","position":{"start":{"line":422,"column":34,"offset":19874},"end":{"line":422,"column":37,"offset":19877}}}],"position":{"start":{"line":422,"column":32,"offset":19872},"end":{"line":422,"column":39,"offset":19879}}},{"type":"text","value":" collection of nodes and edges.","position":{"start":{"line":422,"column":39,"offset":19879},"end":{"line":422,"column":70,"offset":19910}}},{"type":"raw","value":"</span>","position":{"start":{"line":422,"column":70,"offset":19910},"end":{"line":422,"column":77,"offset":19917}}}],"position":{"start":{"line":422,"column":1,"offset":19841},"end":{"line":422,"column":77,"offset":19917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"fbda\">","position":{"start":{"line":423,"column":5,"offset":19922},"end":{"line":423,"column":21,"offset":19938}}},{"type":"text","value":"Much more relaxed in structure than a tree.","position":{"start":{"line":423,"column":21,"offset":19938},"end":{"line":423,"column":64,"offset":19981}}},{"type":"raw","value":"</span>","position":{"start":{"line":423,"column":64,"offset":19981},"end":{"line":423,"column":71,"offset":19988}}}],"position":{"start":{"line":423,"column":1,"offset":19918},"end":{"line":423,"column":71,"offset":19988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"5281\">","position":{"start":{"line":424,"column":5,"offset":19993},"end":{"line":424,"column":21,"offset":20009}}},{"type":"text","value":"It doesn't need to have a root node (not every node needs to be accessible from a single node)","position":{"start":{"line":424,"column":21,"offset":20009},"end":{"line":424,"column":115,"offset":20103}}},{"type":"raw","value":"</span>","position":{"start":{"line":424,"column":115,"offset":20103},"end":{"line":424,"column":122,"offset":20110}}}],"position":{"start":{"line":424,"column":1,"offset":19989},"end":{"line":424,"column":122,"offset":20110}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"0c79\">","position":{"start":{"line":425,"column":5,"offset":20115},"end":{"line":425,"column":21,"offset":20131}}},{"type":"text","value":"It can have cycles (a group of nodes whose paths begin and end at the same node)","position":{"start":{"line":425,"column":21,"offset":20131},"end":{"line":425,"column":101,"offset":20211}}},{"type":"raw","value":"</span>","position":{"start":{"line":425,"column":101,"offset":20211},"end":{"line":425,"column":108,"offset":20218}}}],"position":{"start":{"line":425,"column":1,"offset":20111},"end":{"line":425,"column":108,"offset":20218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"4afc\">","position":{"start":{"line":426,"column":5,"offset":20223},"end":{"line":426,"column":21,"offset":20239}}},{"type":"text","value":"Cycles are not always \"isolated\", they can be one part of a larger graph. You can detect them by starting your search on a specific node and finding a path that takes you back to that same node.","position":{"start":{"line":426,"column":21,"offset":20239},"end":{"line":426,"column":215,"offset":20433}}},{"type":"raw","value":"</span>","position":{"start":{"line":426,"column":215,"offset":20433},"end":{"line":426,"column":222,"offset":20440}}}],"position":{"start":{"line":426,"column":1,"offset":20219},"end":{"line":426,"column":222,"offset":20440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"8f45\">","position":{"start":{"line":427,"column":5,"offset":20445},"end":{"line":427,"column":21,"offset":20461}}},{"type":"text","value":"Any number of edges may leave a given node","position":{"start":{"line":427,"column":21,"offset":20461},"end":{"line":427,"column":63,"offset":20503}}},{"type":"raw","value":"</span>","position":{"start":{"line":427,"column":63,"offset":20503},"end":{"line":427,"column":70,"offset":20510}}}],"position":{"start":{"line":427,"column":1,"offset":20441},"end":{"line":427,"column":70,"offset":20510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"51cf\">","position":{"start":{"line":428,"column":5,"offset":20515},"end":{"line":428,"column":21,"offset":20531}}},{"type":"text","value":"A Path is a sequence of nodes on a graph","position":{"start":{"line":428,"column":21,"offset":20531},"end":{"line":428,"column":61,"offset":20571}}},{"type":"raw","value":"</span>","position":{"start":{"line":428,"column":61,"offset":20571},"end":{"line":428,"column":68,"offset":20578}}}],"position":{"start":{"line":428,"column":1,"offset":20511},"end":{"line":428,"column":68,"offset":20578}}},{"type":"text","value":"\n"}],"position":{"start":{"line":422,"column":1,"offset":19841},"end":{"line":428,"column":68,"offset":20578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Cycle Visual","position":{"start":{"line":430,"column":5,"offset":20584},"end":{"line":430,"column":17,"offset":20596}}}],"position":{"start":{"line":430,"column":1,"offset":20580},"end":{"line":430,"column":17,"offset":20596}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/1*dn1BqCdXdFg4FCVSz6uArA.png\" class=\"graf-image\" />\n</figure>A Graph data structure may also associate to each edge some edge value, such as a symbolic label or a numeric attribute (cost, capacity, length, etc.).","position":{"start":{"line":432,"column":1,"offset":20598},"end":{"line":434,"column":161,"offset":20869}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Representation\nThere are different ways of representing a graph, each of them with its own advantages and disadvantages. Here are the main 2:","position":{"start":{"line":436,"column":1,"offset":20871},"end":{"line":437,"column":127,"offset":21012}}}],"position":{"start":{"line":436,"column":1,"offset":20871},"end":{"line":437,"column":127,"offset":21012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Adjacency list: For every vertex a list of adjacent vertices is stored. This can be viewed as storing the list of edges. This data structure allows the storage of additional data on the vertices and edges.\nAdjacency matrix: Data are stored in a two-dimensional matrix, in which the rows represent source vertices and columns represent destination vertices. The data on the edges and vertices must be stored externally.","position":{"start":{"line":439,"column":1,"offset":21014},"end":{"line":440,"column":213,"offset":21432}}}],"position":{"start":{"line":439,"column":1,"offset":21014},"end":{"line":440,"column":213,"offset":21432}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Graph","position":{"start":{"line":442,"column":1,"offset":21434},"end":{"line":442,"column":6,"offset":21439}}}],"position":{"start":{"line":442,"column":1,"offset":21434},"end":{"line":442,"column":6,"offset":21439}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":444,"column":4,"offset":21444},"end":{"line":444,"column":12,"offset":21452}}}],"position":{"start":{"line":444,"column":3,"offset":21443},"end":{"line":444,"column":13,"offset":21453}}}],"position":{"start":{"line":444,"column":3,"offset":21443},"end":{"line":444,"column":13,"offset":21453}}},{"type":"text","value":"\n"}],"position":{"start":{"line":444,"column":1,"offset":21441},"end":{"line":444,"column":13,"offset":21453}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":446,"column":1,"offset":21455},"end":{"line":446,"column":4,"offset":21458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Leetcode","position":{"start":{"line":448,"column":3,"offset":21462},"end":{"line":448,"column":11,"offset":21470}}}],"position":{"start":{"line":448,"column":1,"offset":21460},"end":{"line":448,"column":11,"offset":21470}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":450,"column":4,"offset":21475},"end":{"line":450,"column":32,"offset":21503}}}],"position":{"start":{"line":450,"column":1,"offset":21472},"end":{"line":450,"column":32,"offset":21503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/bgoonz/Data-Structures-Algos-Codebase"},"children":[{"type":"text","value":"DS Algo Codebase","position":{"start":{"line":452,"column":2,"offset":21506},"end":{"line":452,"column":18,"offset":21522}}}],"position":{"start":{"line":452,"column":1,"offset":21505},"end":{"line":452,"column":77,"offset":21581}}}],"position":{"start":{"line":452,"column":1,"offset":21505},"end":{"line":452,"column":77,"offset":21581}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#115-distinct-subsequenceshttpsleetcodecomproblemsdistinct-subsequencesdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":454,"column":2,"offset":21584},"end":{"line":454,"column":142,"offset":21724}}}],"position":{"start":{"line":454,"column":1,"offset":21583},"end":{"line":454,"column":227,"offset":21809}}}],"position":{"start":{"line":454,"column":1,"offset":21583},"end":{"line":454,"column":227,"offset":21809}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":456,"column":4,"offset":21814},"end":{"line":456,"column":6,"offset":21816}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/distinct-subsequences/description/"},"children":[{"type":"text","value":"115. Distinct Subsequences","position":{"start":{"line":456,"column":7,"offset":21817},"end":{"line":456,"column":33,"offset":21843}}}],"position":{"start":{"line":456,"column":6,"offset":21816},"end":{"line":456,"column":100,"offset":21910}}}],"position":{"start":{"line":456,"column":1,"offset":21811},"end":{"line":456,"column":100,"offset":21910}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":458,"column":5,"offset":21916},"end":{"line":458,"column":13,"offset":21924}}}],"position":{"start":{"line":458,"column":1,"offset":21912},"end":{"line":458,"column":13,"offset":21924}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a string ","position":{"start":{"line":460,"column":1,"offset":21926},"end":{"line":460,"column":16,"offset":21941}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"S","position":{"start":{"line":460,"column":18,"offset":21943},"end":{"line":460,"column":19,"offset":21944}}}],"position":{"start":{"line":460,"column":16,"offset":21941},"end":{"line":460,"column":21,"offset":21946}}},{"type":"text","value":" and a string ","position":{"start":{"line":460,"column":21,"offset":21946},"end":{"line":460,"column":35,"offset":21960}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"T","position":{"start":{"line":460,"column":37,"offset":21962},"end":{"line":460,"column":38,"offset":21963}}}],"position":{"start":{"line":460,"column":35,"offset":21960},"end":{"line":460,"column":40,"offset":21965}}},{"type":"text","value":", count the number of distinct subsequences of ","position":{"start":{"line":460,"column":40,"offset":21965},"end":{"line":460,"column":87,"offset":22012}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"S","position":{"start":{"line":460,"column":89,"offset":22014},"end":{"line":460,"column":90,"offset":22015}}}],"position":{"start":{"line":460,"column":87,"offset":22012},"end":{"line":460,"column":92,"offset":22017}}},{"type":"text","value":" which equals ","position":{"start":{"line":460,"column":92,"offset":22017},"end":{"line":460,"column":106,"offset":22031}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"T","position":{"start":{"line":460,"column":108,"offset":22033},"end":{"line":460,"column":109,"offset":22034}}}],"position":{"start":{"line":460,"column":106,"offset":22031},"end":{"line":460,"column":111,"offset":22036}}},{"type":"text","value":".","position":{"start":{"line":460,"column":111,"offset":22036},"end":{"line":460,"column":112,"offset":22037}}}],"position":{"start":{"line":460,"column":1,"offset":21926},"end":{"line":460,"column":112,"offset":22037}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, ","position":{"start":{"line":462,"column":1,"offset":22039},"end":{"line":462,"column":209,"offset":22247}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"ACE\""}],"position":{"start":{"line":462,"column":209,"offset":22247},"end":{"line":462,"column":216,"offset":22254}}},{"type":"text","value":" is a subsequence of ","position":{"start":{"line":462,"column":216,"offset":22254},"end":{"line":462,"column":237,"offset":22275}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"ABCDE\""}],"position":{"start":{"line":462,"column":237,"offset":22275},"end":{"line":462,"column":246,"offset":22284}}},{"type":"text","value":" while ","position":{"start":{"line":462,"column":246,"offset":22284},"end":{"line":462,"column":253,"offset":22291}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"AEC\""}],"position":{"start":{"line":462,"column":253,"offset":22291},"end":{"line":462,"column":260,"offset":22298}}},{"type":"text","value":" is not).","position":{"start":{"line":462,"column":260,"offset":22298},"end":{"line":462,"column":269,"offset":22307}}}],"position":{"start":{"line":462,"column":1,"offset":22039},"end":{"line":462,"column":269,"offset":22307}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":464,"column":3,"offset":22311},"end":{"line":464,"column":13,"offset":22321}}}],"position":{"start":{"line":464,"column":1,"offset":22309},"end":{"line":464,"column":15,"offset":22323}}}],"position":{"start":{"line":464,"column":1,"offset":22309},"end":{"line":464,"column":15,"offset":22323}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: S = \"rabbbit\", T = \"rabbit\"\nOutput: 3\nExplanation:\n\nAs shown below, there are 3 ways you can generate \"rabbit\" from S.\n(The caret symbol ^ means the chosen letters)\n\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^\n"}],"position":{"start":{"line":466,"column":1,"offset":22325},"end":{"line":478,"column":12,"offset":22589}}}],"position":{"start":{"line":466,"column":1,"offset":22325},"end":{"line":478,"column":12,"offset":22589}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":480,"column":3,"offset":22593},"end":{"line":480,"column":13,"offset":22603}}}],"position":{"start":{"line":480,"column":1,"offset":22591},"end":{"line":480,"column":15,"offset":22605}}}],"position":{"start":{"line":480,"column":1,"offset":22591},"end":{"line":480,"column":15,"offset":22605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: S = \"babgbag\", T = \"bag\"\nOutput: 5\nExplanation:\n\nAs shown below, there are 5 ways you can generate \"bag\" from S.\n(The caret symbol ^ means the chosen letters)\n\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^\n"}],"position":{"start":{"line":482,"column":1,"offset":22607},"end":{"line":498,"column":12,"offset":22910}}}],"position":{"start":{"line":482,"column":1,"offset":22607},"end":{"line":498,"column":12,"offset":22910}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":500,"column":5,"offset":22916},"end":{"line":500,"column":14,"offset":22925}}}],"position":{"start":{"line":500,"column":1,"offset":22912},"end":{"line":500,"column":14,"offset":22925}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":502,"column":1,"offset":22927},"end":{"line":502,"column":8,"offset":22934}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(i, j)"}],"position":{"start":{"line":502,"column":8,"offset":22934},"end":{"line":502,"column":17,"offset":22943}}},{"type":"text","value":" to be the number of ways that generate ","position":{"start":{"line":502,"column":17,"offset":22943},"end":{"line":502,"column":57,"offset":22983}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"T[0...j)"}],"position":{"start":{"line":502,"column":57,"offset":22983},"end":{"line":502,"column":67,"offset":22993}}},{"type":"text","value":" from ","position":{"start":{"line":502,"column":67,"offset":22993},"end":{"line":502,"column":73,"offset":22999}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S[0...i)"}],"position":{"start":{"line":502,"column":73,"offset":22999},"end":{"line":502,"column":83,"offset":23009}}},{"type":"text","value":".","position":{"start":{"line":502,"column":83,"offset":23009},"end":{"line":502,"column":84,"offset":23010}}}],"position":{"start":{"line":502,"column":1,"offset":22927},"end":{"line":502,"column":84,"offset":23010}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For ","position":{"start":{"line":504,"column":1,"offset":23012},"end":{"line":504,"column":5,"offset":23016}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(i, j)"}],"position":{"start":{"line":504,"column":5,"offset":23016},"end":{"line":504,"column":14,"offset":23025}}},{"type":"text","value":" you can always skip ","position":{"start":{"line":504,"column":14,"offset":23025},"end":{"line":504,"column":35,"offset":23046}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S[i-1]"}],"position":{"start":{"line":504,"column":35,"offset":23046},"end":{"line":504,"column":43,"offset":23054}}},{"type":"text","value":", but can only take it when ","position":{"start":{"line":504,"column":43,"offset":23054},"end":{"line":504,"column":71,"offset":23082}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S[i-1] === T[j-1]"}],"position":{"start":{"line":504,"column":71,"offset":23082},"end":{"line":504,"column":90,"offset":23101}}},{"type":"text","value":".","position":{"start":{"line":504,"column":90,"offset":23101},"end":{"line":504,"column":91,"offset":23102}}}],"position":{"start":{"line":504,"column":1,"offset":23012},"end":{"line":504,"column":91,"offset":23102}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"f(0, j) = 0, j > 0 // nothing to delete\nf(i, 0) = 1 // delete all\nf(i, j) = f(i-1, j) + (S[i-1] === T[j-1] ? f(i-1, j-1) : 0)\n"}],"position":{"start":{"line":506,"column":1,"offset":23104},"end":{"line":510,"column":4,"offset":23239}}}],"position":{"start":{"line":506,"column":1,"offset":23104},"end":{"line":510,"column":4,"offset":23239}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":512,"column":1,"offset":23241},"end":{"line":512,"column":27,"offset":23267}}}],"position":{"start":{"line":512,"column":1,"offset":23241},"end":{"line":512,"column":27,"offset":23267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {string} s\n * @param {string} t\n * @return {number}\n */\nlet numDistinct = function (s, t) {\n    const lens = s.length;\n    const lent = t.length;\n    const dp = new Array(lent + 1).fill(0);\n    dp[0] = 1;\n    for (let i = 1; i <= lens; i++) {\n        for (let j = lent; j >= 1; j--) {\n            if (s[i - 1] === t[j - 1]) {\n                dp[j] += dp[j - 1];\n            }\n        }\n    }\n    return dp[lent];\n};\n"}],"position":{"start":{"line":514,"column":1,"offset":23269},"end":{"line":534,"column":4,"offset":23708}}}],"position":{"start":{"line":514,"column":1,"offset":23269},"end":{"line":534,"column":4,"offset":23708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":536,"column":1,"offset":23710},"end":{"line":536,"column":4,"offset":23713}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":538,"column":1,"offset":23715},"end":{"line":540,"column":9,"offset":23758}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/tree"},"children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":540,"column":9,"offset":23758},"end":{"line":540,"column":38,"offset":23787}}}],"position":{"start":{"line":540,"column":9,"offset":23758},"end":{"line":540,"column":38,"offset":23787}}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":540,"column":38,"offset":23787},"end":{"line":541,"column":23,"offset":23810}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":541,"column":23,"offset":23810},"end":{"line":541,"column":66,"offset":23853}}}],"position":{"start":{"line":541,"column":23,"offset":23810},"end":{"line":541,"column":66,"offset":23853}}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node II\": ","position":{"start":{"line":541,"column":66,"offset":23853},"end":{"line":543,"column":51,"offset":23923}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","position":{"start":{"line":543,"column":51,"offset":23923},"end":{"line":543,"column":127,"offset":23999}}}],"position":{"start":{"line":543,"column":51,"offset":23923},"end":{"line":543,"column":127,"offset":23999}}},{"type":"text","value":"\n\"Binary Tree Right Side View\": ","position":{"start":{"line":543,"column":127,"offset":23999},"end":{"line":544,"column":32,"offset":24031}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/binary-tree-right-side-view"},"children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-right-side-view","position":{"start":{"line":544,"column":32,"offset":24031},"end":{"line":544,"column":89,"offset":24088}}}],"position":{"start":{"line":544,"column":32,"offset":24031},"end":{"line":544,"column":89,"offset":24088}}}],"position":{"start":{"line":538,"column":1,"offset":23715},"end":{"line":544,"column":89,"offset":24088}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":546,"column":1,"offset":24090},"end":{"line":546,"column":4,"offset":24093}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#116-populating-next-right-pointers-in-each-nodehttpsleetcodecomproblemspopulating-next-right-pointers-in-each-nodedescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":548,"column":2,"offset":24096},"end":{"line":548,"column":142,"offset":24236}}}],"position":{"start":{"line":548,"column":1,"offset":24095},"end":{"line":548,"column":271,"offset":24365}}}],"position":{"start":{"line":548,"column":1,"offset":24095},"end":{"line":548,"column":271,"offset":24365}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":550,"column":4,"offset":24370},"end":{"line":550,"column":6,"offset":24372}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/"},"children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":550,"column":7,"offset":24373},"end":{"line":550,"column":55,"offset":24421}}}],"position":{"start":{"line":550,"column":6,"offset":24372},"end":{"line":550,"column":144,"offset":24510}}}],"position":{"start":{"line":550,"column":1,"offset":24367},"end":{"line":550,"column":144,"offset":24510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":552,"column":5,"offset":24516},"end":{"line":552,"column":13,"offset":24524}}}],"position":{"start":{"line":552,"column":1,"offset":24512},"end":{"line":552,"column":13,"offset":24524}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":554,"column":1,"offset":24526},"end":{"line":554,"column":20,"offset":24545}}}],"position":{"start":{"line":554,"column":1,"offset":24526},"end":{"line":554,"column":20,"offset":24545}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}\n"}],"position":{"start":{"line":556,"column":1,"offset":24547},"end":{"line":563,"column":4,"offset":24646}}}],"position":{"start":{"line":556,"column":1,"offset":24547},"end":{"line":563,"column":4,"offset":24646}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":565,"column":1,"offset":24648},"end":{"line":565,"column":127,"offset":24774}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NULL"}],"position":{"start":{"line":565,"column":127,"offset":24774},"end":{"line":565,"column":133,"offset":24780}}},{"type":"text","value":".","position":{"start":{"line":565,"column":133,"offset":24780},"end":{"line":565,"column":134,"offset":24781}}}],"position":{"start":{"line":565,"column":1,"offset":24648},"end":{"line":565,"column":134,"offset":24781}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":567,"column":1,"offset":24783},"end":{"line":567,"column":41,"offset":24823}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NULL"}],"position":{"start":{"line":567,"column":41,"offset":24823},"end":{"line":567,"column":47,"offset":24829}}},{"type":"text","value":".","position":{"start":{"line":567,"column":47,"offset":24829},"end":{"line":567,"column":48,"offset":24830}}}],"position":{"start":{"line":567,"column":1,"offset":24783},"end":{"line":567,"column":48,"offset":24830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":569,"column":3,"offset":24834},"end":{"line":569,"column":8,"offset":24839}}}],"position":{"start":{"line":569,"column":1,"offset":24832},"end":{"line":569,"column":10,"offset":24841}}}],"position":{"start":{"line":569,"column":1,"offset":24832},"end":{"line":569,"column":10,"offset":24841}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":571,"column":5,"offset":24847},"end":{"line":571,"column":43,"offset":24885}}}],"position":{"start":{"line":571,"column":1,"offset":24843},"end":{"line":571,"column":43,"offset":24885}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":572,"column":5,"offset":24890},"end":{"line":572,"column":101,"offset":24986}}}],"position":{"start":{"line":572,"column":1,"offset":24886},"end":{"line":572,"column":101,"offset":24986}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).","position":{"start":{"line":573,"column":5,"offset":24991},"end":{"line":573,"column":127,"offset":25113}}}],"position":{"start":{"line":573,"column":1,"offset":24987},"end":{"line":573,"column":127,"offset":25113}}},{"type":"text","value":"\n"}],"position":{"start":{"line":571,"column":1,"offset":24843},"end":{"line":573,"column":127,"offset":25113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":575,"column":3,"offset":25117},"end":{"line":575,"column":11,"offset":25125}}}],"position":{"start":{"line":575,"column":1,"offset":25115},"end":{"line":575,"column":13,"offset":25127}}}],"position":{"start":{"line":575,"column":1,"offset":25115},"end":{"line":575,"column":13,"offset":25127}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given the following perfect binary tree,","position":{"start":{"line":577,"column":1,"offset":25129},"end":{"line":577,"column":41,"offset":25169}}}],"position":{"start":{"line":577,"column":1,"offset":25129},"end":{"line":577,"column":41,"offset":25169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"     1\n   /  \\\n  2    3\n / \\  / \\\n4  5  6  7\n"}],"position":{"start":{"line":579,"column":1,"offset":25171},"end":{"line":586,"column":4,"offset":25224}}}],"position":{"start":{"line":579,"column":1,"offset":25171},"end":{"line":586,"column":4,"offset":25224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":588,"column":1,"offset":25226},"end":{"line":588,"column":56,"offset":25281}}}],"position":{"start":{"line":588,"column":1,"offset":25226},"end":{"line":588,"column":56,"offset":25281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\  / \\\n4->5->6->7 -> NULL\n"}],"position":{"start":{"line":590,"column":1,"offset":25283},"end":{"line":597,"column":4,"offset":25360}}}],"position":{"start":{"line":590,"column":1,"offset":25283},"end":{"line":597,"column":4,"offset":25360}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":599,"column":5,"offset":25366},"end":{"line":599,"column":14,"offset":25375}}}],"position":{"start":{"line":599,"column":1,"offset":25362},"end":{"line":599,"column":14,"offset":25375}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"ONE","position":{"start":{"line":601,"column":6,"offset":25382},"end":{"line":601,"column":9,"offset":25385}}}],"position":{"start":{"line":601,"column":1,"offset":25377},"end":{"line":601,"column":9,"offset":25385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursive.","position":{"start":{"line":603,"column":1,"offset":25387},"end":{"line":603,"column":11,"offset":25397}}}],"position":{"start":{"line":603,"column":1,"offset":25387},"end":{"line":603,"column":11,"offset":25397}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For every ","position":{"start":{"line":605,"column":1,"offset":25399},"end":{"line":605,"column":11,"offset":25409}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node"}],"position":{"start":{"line":605,"column":11,"offset":25409},"end":{"line":605,"column":17,"offset":25415}}},{"type":"text","value":":","position":{"start":{"line":605,"column":17,"offset":25415},"end":{"line":605,"column":18,"offset":25416}}}],"position":{"start":{"line":605,"column":1,"offset":25399},"end":{"line":605,"column":18,"offset":25416}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Left child: points to ","position":{"start":{"line":607,"column":5,"offset":25422},"end":{"line":607,"column":27,"offset":25444}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.right"}],"position":{"start":{"line":607,"column":27,"offset":25444},"end":{"line":607,"column":39,"offset":25456}}},{"type":"text","value":".","position":{"start":{"line":607,"column":39,"offset":25456},"end":{"line":607,"column":40,"offset":25457}}}],"position":{"start":{"line":607,"column":1,"offset":25418},"end":{"line":607,"column":40,"offset":25457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Right child: points to ","position":{"start":{"line":608,"column":5,"offset":25462},"end":{"line":608,"column":28,"offset":25485}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.next.left"}],"position":{"start":{"line":608,"column":28,"offset":25485},"end":{"line":608,"column":44,"offset":25501}}},{"type":"text","value":" if ","position":{"start":{"line":608,"column":44,"offset":25501},"end":{"line":608,"column":48,"offset":25505}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.next"}],"position":{"start":{"line":608,"column":48,"offset":25505},"end":{"line":608,"column":59,"offset":25516}}},{"type":"text","value":" exists.","position":{"start":{"line":608,"column":59,"offset":25516},"end":{"line":608,"column":67,"offset":25524}}}],"position":{"start":{"line":608,"column":1,"offset":25458},"end":{"line":608,"column":67,"offset":25524}}},{"type":"text","value":"\n"}],"position":{"start":{"line":607,"column":1,"offset":25418},"end":{"line":608,"column":67,"offset":25524}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right;\n        connect(root.left);\n    }\n    if (root.right !== null) {\n        if (root.next !== null) {\n            root.right.next = root.next.left;\n        }\n        connect(root.right);\n    }\n};\n"}],"position":{"start":{"line":610,"column":1,"offset":25526},"end":{"line":638,"column":4,"offset":26144}}}],"position":{"start":{"line":610,"column":1,"offset":25526},"end":{"line":638,"column":4,"offset":26144}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"TWO","position":{"start":{"line":640,"column":6,"offset":26151},"end":{"line":640,"column":9,"offset":26154}}}],"position":{"start":{"line":640,"column":1,"offset":26146},"end":{"line":640,"column":9,"offset":26154}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level order traversal.","position":{"start":{"line":642,"column":1,"offset":26156},"end":{"line":642,"column":23,"offset":26178}}}],"position":{"start":{"line":642,"column":1,"offset":26156},"end":{"line":642,"column":23,"offset":26178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};\n"}],"position":{"start":{"line":644,"column":1,"offset":26180},"end":{"line":680,"column":4,"offset":27036}}}],"position":{"start":{"line":644,"column":1,"offset":26180},"end":{"line":680,"column":4,"offset":27036}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":682,"column":1,"offset":27038},"end":{"line":682,"column":4,"offset":27041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":684,"column":1,"offset":27043},"end":{"line":686,"column":9,"offset":27086}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/tree"},"children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":686,"column":9,"offset":27086},"end":{"line":686,"column":38,"offset":27115}}}],"position":{"start":{"line":686,"column":9,"offset":27086},"end":{"line":686,"column":38,"offset":27115}}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":686,"column":38,"offset":27115},"end":{"line":687,"column":23,"offset":27138}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":687,"column":23,"offset":27138},"end":{"line":687,"column":66,"offset":27181}}}],"position":{"start":{"line":687,"column":23,"offset":27138},"end":{"line":687,"column":66,"offset":27181}}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node\": ","position":{"start":{"line":687,"column":66,"offset":27181},"end":{"line":689,"column":48,"offset":27248}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node"},"children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","position":{"start":{"line":689,"column":48,"offset":27248},"end":{"line":689,"column":121,"offset":27321}}}],"position":{"start":{"line":689,"column":48,"offset":27248},"end":{"line":689,"column":121,"offset":27321}}}],"position":{"start":{"line":684,"column":1,"offset":27043},"end":{"line":689,"column":121,"offset":27321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":691,"column":1,"offset":27323},"end":{"line":691,"column":4,"offset":27326}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#117-populating-next-right-pointers-in-each-node-iihttpsleetcodecomproblemspopulating-next-right-pointers-in-each-node-iidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":693,"column":2,"offset":27329},"end":{"line":693,"column":142,"offset":27469}}}],"position":{"start":{"line":693,"column":1,"offset":27328},"end":{"line":693,"column":277,"offset":27604}}}],"position":{"start":{"line":693,"column":1,"offset":27328},"end":{"line":693,"column":277,"offset":27604}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":695,"column":4,"offset":27609},"end":{"line":695,"column":6,"offset":27611}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description/"},"children":[{"type":"text","value":"117. Populating Next Right Pointers in Each Node II","position":{"start":{"line":695,"column":7,"offset":27612},"end":{"line":695,"column":58,"offset":27663}}}],"position":{"start":{"line":695,"column":6,"offset":27611},"end":{"line":695,"column":150,"offset":27755}}}],"position":{"start":{"line":695,"column":1,"offset":27606},"end":{"line":695,"column":150,"offset":27755}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":697,"column":5,"offset":27761},"end":{"line":697,"column":13,"offset":27769}}}],"position":{"start":{"line":697,"column":1,"offset":27757},"end":{"line":697,"column":13,"offset":27769}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":699,"column":1,"offset":27771},"end":{"line":699,"column":20,"offset":27790}}}],"position":{"start":{"line":699,"column":1,"offset":27771},"end":{"line":699,"column":20,"offset":27790}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}\n"}],"position":{"start":{"line":701,"column":1,"offset":27792},"end":{"line":708,"column":4,"offset":27891}}}],"position":{"start":{"line":701,"column":1,"offset":27792},"end":{"line":708,"column":4,"offset":27891}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":710,"column":1,"offset":27893},"end":{"line":710,"column":127,"offset":28019}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NULL"}],"position":{"start":{"line":710,"column":127,"offset":28019},"end":{"line":710,"column":133,"offset":28025}}},{"type":"text","value":".","position":{"start":{"line":710,"column":133,"offset":28025},"end":{"line":710,"column":134,"offset":28026}}}],"position":{"start":{"line":710,"column":1,"offset":27893},"end":{"line":710,"column":134,"offset":28026}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":712,"column":1,"offset":28028},"end":{"line":712,"column":41,"offset":28068}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NULL"}],"position":{"start":{"line":712,"column":41,"offset":28068},"end":{"line":712,"column":47,"offset":28074}}},{"type":"text","value":".","position":{"start":{"line":712,"column":47,"offset":28074},"end":{"line":712,"column":48,"offset":28075}}}],"position":{"start":{"line":712,"column":1,"offset":28028},"end":{"line":712,"column":48,"offset":28075}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":714,"column":3,"offset":28079},"end":{"line":714,"column":8,"offset":28084}}}],"position":{"start":{"line":714,"column":1,"offset":28077},"end":{"line":714,"column":10,"offset":28086}}}],"position":{"start":{"line":714,"column":1,"offset":28077},"end":{"line":714,"column":10,"offset":28086}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":716,"column":5,"offset":28092},"end":{"line":716,"column":43,"offset":28130}}}],"position":{"start":{"line":716,"column":1,"offset":28088},"end":{"line":716,"column":43,"offset":28130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":717,"column":5,"offset":28135},"end":{"line":717,"column":101,"offset":28231}}}],"position":{"start":{"line":717,"column":1,"offset":28131},"end":{"line":717,"column":101,"offset":28231}}},{"type":"text","value":"\n"}],"position":{"start":{"line":716,"column":1,"offset":28088},"end":{"line":717,"column":101,"offset":28231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":719,"column":3,"offset":28235},"end":{"line":719,"column":11,"offset":28243}}}],"position":{"start":{"line":719,"column":1,"offset":28233},"end":{"line":719,"column":13,"offset":28245}}}],"position":{"start":{"line":719,"column":1,"offset":28233},"end":{"line":719,"column":13,"offset":28245}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given the following binary tree,","position":{"start":{"line":721,"column":1,"offset":28247},"end":{"line":721,"column":33,"offset":28279}}}],"position":{"start":{"line":721,"column":1,"offset":28247},"end":{"line":721,"column":33,"offset":28279}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"     1\n   /  \\\n  2    3\n / \\    \\\n4   5    7\n"}],"position":{"start":{"line":723,"column":1,"offset":28281},"end":{"line":730,"column":4,"offset":28334}}}],"position":{"start":{"line":723,"column":1,"offset":28281},"end":{"line":730,"column":4,"offset":28334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":732,"column":1,"offset":28336},"end":{"line":732,"column":56,"offset":28391}}}],"position":{"start":{"line":732,"column":1,"offset":28336},"end":{"line":732,"column":56,"offset":28391}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\    \\\n4-> 5 -> 7 -> NULL\n"}],"position":{"start":{"line":734,"column":1,"offset":28393},"end":{"line":741,"column":4,"offset":28470}}}],"position":{"start":{"line":734,"column":1,"offset":28393},"end":{"line":741,"column":4,"offset":28470}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":743,"column":5,"offset":28476},"end":{"line":743,"column":14,"offset":28485}}}],"position":{"start":{"line":743,"column":1,"offset":28472},"end":{"line":743,"column":14,"offset":28485}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"ONE","position":{"start":{"line":745,"column":6,"offset":28492},"end":{"line":745,"column":9,"offset":28495}}}],"position":{"start":{"line":745,"column":1,"offset":28487},"end":{"line":745,"column":9,"offset":28495}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursive. See ","position":{"start":{"line":747,"column":1,"offset":28497},"end":{"line":747,"column":16,"offset":28512}}},{"type":"element","tagName":"a","properties":{"href":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md"},"children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":747,"column":17,"offset":28513},"end":{"line":747,"column":65,"offset":28561}}}],"position":{"start":{"line":747,"column":16,"offset":28512},"end":{"line":747,"column":135,"offset":28631}}},{"type":"text","value":".","position":{"start":{"line":747,"column":135,"offset":28631},"end":{"line":747,"column":136,"offset":28632}}}],"position":{"start":{"line":747,"column":1,"offset":28497},"end":{"line":747,"column":136,"offset":28632}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The tree may not be perfect now. So keep finding ","position":{"start":{"line":749,"column":1,"offset":28634},"end":{"line":749,"column":50,"offset":28683}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"next"}],"position":{"start":{"line":749,"column":50,"offset":28683},"end":{"line":749,"column":56,"offset":28689}}},{"type":"text","value":" until there is a node with children, or ","position":{"start":{"line":749,"column":56,"offset":28689},"end":{"line":749,"column":97,"offset":28730}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"null"}],"position":{"start":{"line":749,"column":97,"offset":28730},"end":{"line":749,"column":103,"offset":28736}}},{"type":"text","value":".","position":{"start":{"line":749,"column":103,"offset":28736},"end":{"line":749,"column":104,"offset":28737}}}],"position":{"start":{"line":749,"column":1,"offset":28634},"end":{"line":749,"column":104,"offset":28737}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This also means post-order traversal is required.","position":{"start":{"line":751,"column":1,"offset":28739},"end":{"line":751,"column":50,"offset":28788}}}],"position":{"start":{"line":751,"column":1,"offset":28739},"end":{"line":751,"column":50,"offset":28788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    let next = null;\n    for (let node = root.next; node !== null; node = node.next) {\n        if (node.left !== null) {\n            next = node.left;\n            break;\n        }\n        if (node.right !== null) {\n            next = node.right;\n            break;\n        }\n    }\n    if (root.right !== null) {\n        root.right.next = next;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right || next;\n    }\n    connect(root.right);\n    connect(root.left);\n};\n"}],"position":{"start":{"line":753,"column":1,"offset":28790},"end":{"line":790,"column":4,"offset":29631}}}],"position":{"start":{"line":753,"column":1,"offset":28790},"end":{"line":790,"column":4,"offset":29631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"TWO","position":{"start":{"line":792,"column":6,"offset":29638},"end":{"line":792,"column":9,"offset":29641}}}],"position":{"start":{"line":792,"column":1,"offset":29633},"end":{"line":792,"column":9,"offset":29641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level order traversal. Exact same as ","position":{"start":{"line":794,"column":1,"offset":29643},"end":{"line":794,"column":38,"offset":29680}}},{"type":"element","tagName":"a","properties":{"href":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md"},"children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":794,"column":39,"offset":29681},"end":{"line":794,"column":87,"offset":29729}}}],"position":{"start":{"line":794,"column":38,"offset":29680},"end":{"line":794,"column":157,"offset":29799}}},{"type":"text","value":".","position":{"start":{"line":794,"column":157,"offset":29799},"end":{"line":794,"column":158,"offset":29800}}}],"position":{"start":{"line":794,"column":1,"offset":29643},"end":{"line":794,"column":158,"offset":29800}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};\n"}],"position":{"start":{"line":796,"column":1,"offset":29802},"end":{"line":832,"column":4,"offset":30658}}}],"position":{"start":{"line":796,"column":1,"offset":29802},"end":{"line":832,"column":4,"offset":30658}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":834,"column":1,"offset":30660},"end":{"line":834,"column":4,"offset":30663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":836,"column":1,"offset":30665},"end":{"line":838,"column":10,"offset":30707}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":838,"column":10,"offset":30707},"end":{"line":838,"column":40,"offset":30737}}}],"position":{"start":{"line":838,"column":10,"offset":30707},"end":{"line":838,"column":40,"offset":30737}}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle II\": ","position":{"start":{"line":838,"column":40,"offset":30737},"end":{"line":840,"column":25,"offset":30781}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/pascals-triangle-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle-ii","position":{"start":{"line":840,"column":25,"offset":30781},"end":{"line":840,"column":74,"offset":30830}}}],"position":{"start":{"line":840,"column":25,"offset":30781},"end":{"line":840,"column":74,"offset":30830}}}],"position":{"start":{"line":836,"column":1,"offset":30665},"end":{"line":840,"column":74,"offset":30830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":842,"column":1,"offset":30832},"end":{"line":842,"column":4,"offset":30835}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#118-pascals-trianglehttpsleetcodecomproblemspascals-triangledescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":844,"column":2,"offset":30838},"end":{"line":844,"column":142,"offset":30978}}}],"position":{"start":{"line":844,"column":1,"offset":30837},"end":{"line":844,"column":217,"offset":31053}}}],"position":{"start":{"line":844,"column":1,"offset":30837},"end":{"line":844,"column":217,"offset":31053}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":846,"column":4,"offset":31058},"end":{"line":846,"column":6,"offset":31060}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/pascals-triangle/description/"},"children":[{"type":"text","value":"118. Pascal's Triangle","position":{"start":{"line":846,"column":7,"offset":31061},"end":{"line":846,"column":29,"offset":31083}}}],"position":{"start":{"line":846,"column":6,"offset":31060},"end":{"line":846,"column":91,"offset":31145}}}],"position":{"start":{"line":846,"column":1,"offset":31055},"end":{"line":846,"column":91,"offset":31145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":848,"column":5,"offset":31151},"end":{"line":848,"column":13,"offset":31159}}}],"position":{"start":{"line":848,"column":1,"offset":31147},"end":{"line":848,"column":13,"offset":31159}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a non-negative integer ","position":{"start":{"line":850,"column":1,"offset":31161},"end":{"line":850,"column":30,"offset":31190}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"numRows","position":{"start":{"line":850,"column":31,"offset":31191},"end":{"line":850,"column":38,"offset":31198}}}],"position":{"start":{"line":850,"column":30,"offset":31190},"end":{"line":850,"column":39,"offset":31199}}},{"type":"text","value":", generate the first ","position":{"start":{"line":850,"column":39,"offset":31199},"end":{"line":850,"column":60,"offset":31220}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"numRows","position":{"start":{"line":850,"column":61,"offset":31221},"end":{"line":850,"column":68,"offset":31228}}}],"position":{"start":{"line":850,"column":60,"offset":31220},"end":{"line":850,"column":69,"offset":31229}}},{"type":"text","value":" of Pascal's triangle.","position":{"start":{"line":850,"column":69,"offset":31229},"end":{"line":850,"column":91,"offset":31251}}}],"position":{"start":{"line":850,"column":1,"offset":31161},"end":{"line":850,"column":91,"offset":31251}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif"},"children":[],"position":{"start":{"line":852,"column":1,"offset":31253},"end":{"line":852,"column":112,"offset":31364}}}],"position":{"start":{"line":852,"column":1,"offset":31253},"end":{"line":852,"column":112,"offset":31364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":854,"column":1,"offset":31366},"end":{"line":854,"column":83,"offset":31448}}}],"position":{"start":{"line":854,"column":1,"offset":31366},"end":{"line":854,"column":83,"offset":31448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":856,"column":3,"offset":31452},"end":{"line":856,"column":11,"offset":31460}}}],"position":{"start":{"line":856,"column":1,"offset":31450},"end":{"line":856,"column":13,"offset":31462}}}],"position":{"start":{"line":856,"column":1,"offset":31450},"end":{"line":856,"column":13,"offset":31462}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: 5\nOutput:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n"}],"position":{"start":{"line":858,"column":1,"offset":31464},"end":{"line":869,"column":4,"offset":31552}}}],"position":{"start":{"line":858,"column":1,"offset":31464},"end":{"line":869,"column":4,"offset":31552}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":871,"column":5,"offset":31558},"end":{"line":871,"column":14,"offset":31567}}}],"position":{"start":{"line":871,"column":1,"offset":31554},"end":{"line":871,"column":14,"offset":31567}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dynamic Programming 101.","position":{"start":{"line":873,"column":1,"offset":31569},"end":{"line":873,"column":25,"offset":31593}}}],"position":{"start":{"line":873,"column":1,"offset":31569},"end":{"line":873,"column":25,"offset":31593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {number} numRows\n * @return {number[][]}\n */\nlet generate = function (numRows) {\n    if (numRows <= 0) {\n        return [];\n    }\n\n    const result = [[1]];\n    for (let i = 1; i < numRows; i++) {\n        const lastRow = result[i - 1];\n        const row = [1];\n        for (let j = 1; j < i; j++) {\n            row[j] = lastRow[j] + lastRow[j - 1];\n        }\n        row.push(1);\n        result.push(row);\n    }\n\n    return result;\n};\n"}],"position":{"start":{"line":875,"column":1,"offset":31595},"end":{"line":898,"column":4,"offset":32053}}}],"position":{"start":{"line":875,"column":1,"offset":31595},"end":{"line":898,"column":4,"offset":32053}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":900,"column":1,"offset":32055},"end":{"line":900,"column":4,"offset":32058}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":902,"column":1,"offset":32060},"end":{"line":904,"column":10,"offset":32102}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":904,"column":10,"offset":32102},"end":{"line":904,"column":40,"offset":32132}}}],"position":{"start":{"line":904,"column":10,"offset":32102},"end":{"line":904,"column":40,"offset":32132}}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle\": ","position":{"start":{"line":904,"column":40,"offset":32132},"end":{"line":906,"column":22,"offset":32173}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/pascals-triangle"},"children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle","position":{"start":{"line":906,"column":22,"offset":32173},"end":{"line":906,"column":68,"offset":32219}}}],"position":{"start":{"line":906,"column":22,"offset":32173},"end":{"line":906,"column":68,"offset":32219}}}],"position":{"start":{"line":902,"column":1,"offset":32060},"end":{"line":906,"column":68,"offset":32219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":908,"column":1,"offset":32221},"end":{"line":908,"column":4,"offset":32224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#119-pascals-triangle-iihttpsleetcodecomproblemspascals-triangle-iidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":910,"column":2,"offset":32227},"end":{"line":910,"column":142,"offset":32367}}}],"position":{"start":{"line":910,"column":1,"offset":32226},"end":{"line":910,"column":223,"offset":32448}}}],"position":{"start":{"line":910,"column":1,"offset":32226},"end":{"line":910,"column":223,"offset":32448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":912,"column":4,"offset":32453},"end":{"line":912,"column":6,"offset":32455}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/pascals-triangle-ii/description/"},"children":[{"type":"text","value":"119. Pascal's Triangle II","position":{"start":{"line":912,"column":7,"offset":32456},"end":{"line":912,"column":32,"offset":32481}}}],"position":{"start":{"line":912,"column":6,"offset":32455},"end":{"line":912,"column":97,"offset":32546}}}],"position":{"start":{"line":912,"column":1,"offset":32450},"end":{"line":912,"column":97,"offset":32546}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":914,"column":5,"offset":32552},"end":{"line":914,"column":13,"offset":32560}}}],"position":{"start":{"line":914,"column":1,"offset":32548},"end":{"line":914,"column":13,"offset":32560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a non-negative index ","position":{"start":{"line":916,"column":1,"offset":32562},"end":{"line":916,"column":28,"offset":32589}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"k","position":{"start":{"line":916,"column":29,"offset":32590},"end":{"line":916,"column":30,"offset":32591}}}],"position":{"start":{"line":916,"column":28,"offset":32589},"end":{"line":916,"column":31,"offset":32592}}},{"type":"text","value":" where ","position":{"start":{"line":916,"column":31,"offset":32592},"end":{"line":916,"column":38,"offset":32599}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"k","position":{"start":{"line":916,"column":39,"offset":32600},"end":{"line":916,"column":40,"offset":32601}}}],"position":{"start":{"line":916,"column":38,"offset":32599},"end":{"line":916,"column":41,"offset":32602}}},{"type":"text","value":" ≤ 33, return the ","position":{"start":{"line":916,"column":41,"offset":32602},"end":{"line":916,"column":59,"offset":32620}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"k","position":{"start":{"line":916,"column":60,"offset":32621},"end":{"line":916,"column":61,"offset":32622}}}],"position":{"start":{"line":916,"column":59,"offset":32620},"end":{"line":916,"column":62,"offset":32623}}},{"type":"text","value":"th index row of the Pascal's triangle.","position":{"start":{"line":916,"column":62,"offset":32623},"end":{"line":916,"column":100,"offset":32661}}}],"position":{"start":{"line":916,"column":1,"offset":32562},"end":{"line":916,"column":100,"offset":32661}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that the row index starts from 0.","position":{"start":{"line":918,"column":1,"offset":32663},"end":{"line":918,"column":39,"offset":32701}}}],"position":{"start":{"line":918,"column":1,"offset":32663},"end":{"line":918,"column":39,"offset":32701}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif"},"children":[],"position":{"start":{"line":920,"column":1,"offset":32703},"end":{"line":920,"column":112,"offset":32814}}}],"position":{"start":{"line":920,"column":1,"offset":32703},"end":{"line":920,"column":112,"offset":32814}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":922,"column":1,"offset":32816},"end":{"line":922,"column":83,"offset":32898}}}],"position":{"start":{"line":922,"column":1,"offset":32816},"end":{"line":922,"column":83,"offset":32898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":924,"column":3,"offset":32902},"end":{"line":924,"column":11,"offset":32910}}}],"position":{"start":{"line":924,"column":1,"offset":32900},"end":{"line":924,"column":13,"offset":32912}}}],"position":{"start":{"line":924,"column":1,"offset":32900},"end":{"line":924,"column":13,"offset":32912}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: 3\nOutput: [1,3,3,1]\n"}],"position":{"start":{"line":926,"column":1,"offset":32914},"end":{"line":930,"column":4,"offset":32949}}}],"position":{"start":{"line":926,"column":1,"offset":32914},"end":{"line":930,"column":4,"offset":32949}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Follow up:","position":{"start":{"line":932,"column":3,"offset":32953},"end":{"line":932,"column":13,"offset":32963}}}],"position":{"start":{"line":932,"column":1,"offset":32951},"end":{"line":932,"column":15,"offset":32965}}}],"position":{"start":{"line":932,"column":1,"offset":32951},"end":{"line":932,"column":15,"offset":32965}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Could you optimize your algorithm to use only ","position":{"start":{"line":934,"column":1,"offset":32967},"end":{"line":934,"column":47,"offset":33013}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"O","position":{"start":{"line":934,"column":48,"offset":33014},"end":{"line":934,"column":49,"offset":33015}}}],"position":{"start":{"line":934,"column":47,"offset":33013},"end":{"line":934,"column":50,"offset":33016}}},{"type":"text","value":"(","position":{"start":{"line":934,"column":50,"offset":33016},"end":{"line":934,"column":51,"offset":33017}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"k","position":{"start":{"line":934,"column":52,"offset":33018},"end":{"line":934,"column":53,"offset":33019}}}],"position":{"start":{"line":934,"column":51,"offset":33017},"end":{"line":934,"column":54,"offset":33020}}},{"type":"text","value":") extra space?","position":{"start":{"line":934,"column":54,"offset":33020},"end":{"line":934,"column":68,"offset":33034}}}],"position":{"start":{"line":934,"column":1,"offset":32967},"end":{"line":934,"column":68,"offset":33034}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":936,"column":5,"offset":33040},"end":{"line":936,"column":14,"offset":33049}}}],"position":{"start":{"line":936,"column":1,"offset":33036},"end":{"line":936,"column":14,"offset":33049}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dynamic Programming 101 with dynamic array.","position":{"start":{"line":938,"column":1,"offset":33051},"end":{"line":938,"column":44,"offset":33094}}}],"position":{"start":{"line":938,"column":1,"offset":33051},"end":{"line":938,"column":44,"offset":33094}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"State ","position":{"start":{"line":940,"column":1,"offset":33096},"end":{"line":940,"column":7,"offset":33102}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(i, j)"}],"position":{"start":{"line":940,"column":7,"offset":33102},"end":{"line":940,"column":15,"offset":33110}}},{"type":"text","value":" depends on ","position":{"start":{"line":940,"column":15,"offset":33110},"end":{"line":940,"column":27,"offset":33122}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(i-1, j)"}],"position":{"start":{"line":940,"column":27,"offset":33122},"end":{"line":940,"column":37,"offset":33132}}},{"type":"text","value":" and ","position":{"start":{"line":940,"column":37,"offset":33132},"end":{"line":940,"column":42,"offset":33137}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(i-1, j-1)"}],"position":{"start":{"line":940,"column":42,"offset":33137},"end":{"line":940,"column":54,"offset":33149}}},{"type":"text","value":". So to access ","position":{"start":{"line":940,"column":54,"offset":33149},"end":{"line":940,"column":69,"offset":33164}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(i-1, j-1)"}],"position":{"start":{"line":940,"column":69,"offset":33164},"end":{"line":940,"column":81,"offset":33176}}},{"type":"text","value":" iteration must be from right to left.","position":{"start":{"line":940,"column":81,"offset":33176},"end":{"line":940,"column":119,"offset":33214}}}],"position":{"start":{"line":940,"column":1,"offset":33096},"end":{"line":940,"column":119,"offset":33214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {number} rowIndex\n * @return {number[]}\n */\nlet getRow = function (rowIndex) {\n    if (rowIndex < 0) {\n        return [];\n    }\n\n    const row = [1];\n    for (let i = 1; i <= rowIndex; i++) {\n        for (let j = i - 1; j > 0; j--) {\n            row[j] += row[j - 1];\n        }\n        row.push(1);\n    }\n\n    return row;\n};\n"}],"position":{"start":{"line":942,"column":1,"offset":33216},"end":{"line":962,"column":4,"offset":33564}}}],"position":{"start":{"line":942,"column":1,"offset":33216},"end":{"line":962,"column":4,"offset":33564}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":964,"column":1,"offset":33566},"end":{"line":964,"column":4,"offset":33569}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Array\": ","position":{"start":{"line":966,"column":1,"offset":33571},"end":{"line":968,"column":10,"offset":33615}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":968,"column":10,"offset":33615},"end":{"line":968,"column":40,"offset":33645}}}],"position":{"start":{"line":968,"column":10,"offset":33615},"end":{"line":968,"column":40,"offset":33645}}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":968,"column":40,"offset":33645},"end":{"line":969,"column":24,"offset":33669}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/dynamic-programming"},"children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":969,"column":24,"offset":33669},"end":{"line":969,"column":68,"offset":33713}}}],"position":{"start":{"line":969,"column":24,"offset":33669},"end":{"line":969,"column":68,"offset":33713}}}],"position":{"start":{"line":966,"column":1,"offset":33571},"end":{"line":969,"column":68,"offset":33713}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":971,"column":1,"offset":33715},"end":{"line":971,"column":4,"offset":33718}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#120-trianglehttpsleetcodecomproblemstriangledescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":973,"column":2,"offset":33721},"end":{"line":973,"column":142,"offset":33861}}}],"position":{"start":{"line":973,"column":1,"offset":33720},"end":{"line":973,"column":201,"offset":33920}}}],"position":{"start":{"line":973,"column":1,"offset":33720},"end":{"line":973,"column":201,"offset":33920}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":975,"column":4,"offset":33925},"end":{"line":975,"column":6,"offset":33927}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/triangle/description/"},"children":[{"type":"text","value":"120. Triangle","position":{"start":{"line":975,"column":7,"offset":33928},"end":{"line":975,"column":20,"offset":33941}}}],"position":{"start":{"line":975,"column":6,"offset":33927},"end":{"line":975,"column":74,"offset":33995}}}],"position":{"start":{"line":975,"column":1,"offset":33922},"end":{"line":975,"column":74,"offset":33995}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":977,"column":5,"offset":34001},"end":{"line":977,"column":13,"offset":34009}}}],"position":{"start":{"line":977,"column":1,"offset":33997},"end":{"line":977,"column":13,"offset":34009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.","position":{"start":{"line":979,"column":1,"offset":34011},"end":{"line":979,"column":125,"offset":34135}}}],"position":{"start":{"line":979,"column":1,"offset":34011},"end":{"line":979,"column":125,"offset":34135}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, given the following triangle","position":{"start":{"line":981,"column":1,"offset":34137},"end":{"line":981,"column":42,"offset":34178}}}],"position":{"start":{"line":981,"column":1,"offset":34137},"end":{"line":981,"column":42,"offset":34178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]\n"}],"position":{"start":{"line":983,"column":1,"offset":34180},"end":{"line":991,"column":4,"offset":34237}}}],"position":{"start":{"line":983,"column":1,"offset":34180},"end":{"line":991,"column":4,"offset":34237}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The minimum path sum from top to bottom is ","position":{"start":{"line":993,"column":1,"offset":34239},"end":{"line":993,"column":44,"offset":34282}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"11"}],"position":{"start":{"line":993,"column":44,"offset":34282},"end":{"line":993,"column":48,"offset":34286}}},{"type":"text","value":" (i.e., ","position":{"start":{"line":993,"column":48,"offset":34286},"end":{"line":993,"column":56,"offset":34294}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"2","position":{"start":{"line":993,"column":58,"offset":34296},"end":{"line":993,"column":59,"offset":34297}}}],"position":{"start":{"line":993,"column":56,"offset":34294},"end":{"line":993,"column":61,"offset":34299}}},{"type":"text","value":" + ","position":{"start":{"line":993,"column":61,"offset":34299},"end":{"line":993,"column":64,"offset":34302}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"3","position":{"start":{"line":993,"column":66,"offset":34304},"end":{"line":993,"column":67,"offset":34305}}}],"position":{"start":{"line":993,"column":64,"offset":34302},"end":{"line":993,"column":69,"offset":34307}}},{"type":"text","value":" + ","position":{"start":{"line":993,"column":69,"offset":34307},"end":{"line":993,"column":72,"offset":34310}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5","position":{"start":{"line":993,"column":74,"offset":34312},"end":{"line":993,"column":75,"offset":34313}}}],"position":{"start":{"line":993,"column":72,"offset":34310},"end":{"line":993,"column":77,"offset":34315}}},{"type":"text","value":" + ","position":{"start":{"line":993,"column":77,"offset":34315},"end":{"line":993,"column":80,"offset":34318}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1","position":{"start":{"line":993,"column":82,"offset":34320},"end":{"line":993,"column":83,"offset":34321}}}],"position":{"start":{"line":993,"column":80,"offset":34318},"end":{"line":993,"column":85,"offset":34323}}},{"type":"text","value":" = 11).","position":{"start":{"line":993,"column":85,"offset":34323},"end":{"line":993,"column":92,"offset":34330}}}],"position":{"start":{"line":993,"column":1,"offset":34239},"end":{"line":993,"column":92,"offset":34330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":995,"column":3,"offset":34334},"end":{"line":995,"column":8,"offset":34339}}}],"position":{"start":{"line":995,"column":1,"offset":34332},"end":{"line":995,"column":10,"offset":34341}}}],"position":{"start":{"line":995,"column":1,"offset":34332},"end":{"line":995,"column":10,"offset":34341}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Bonus point if you are able to do this using only ","position":{"start":{"line":997,"column":1,"offset":34343},"end":{"line":997,"column":51,"offset":34393}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"O","position":{"start":{"line":997,"column":52,"offset":34394},"end":{"line":997,"column":53,"offset":34395}}}],"position":{"start":{"line":997,"column":51,"offset":34393},"end":{"line":997,"column":54,"offset":34396}}},{"type":"text","value":"(","position":{"start":{"line":997,"column":54,"offset":34396},"end":{"line":997,"column":55,"offset":34397}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"n","position":{"start":{"line":997,"column":56,"offset":34398},"end":{"line":997,"column":57,"offset":34399}}}],"position":{"start":{"line":997,"column":55,"offset":34397},"end":{"line":997,"column":58,"offset":34400}}},{"type":"text","value":") extra space, where ","position":{"start":{"line":997,"column":58,"offset":34400},"end":{"line":997,"column":79,"offset":34421}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"n","position":{"start":{"line":997,"column":80,"offset":34422},"end":{"line":997,"column":81,"offset":34423}}}],"position":{"start":{"line":997,"column":79,"offset":34421},"end":{"line":997,"column":82,"offset":34424}}},{"type":"text","value":" is the total number of rows in the triangle.","position":{"start":{"line":997,"column":82,"offset":34424},"end":{"line":997,"column":127,"offset":34469}}}],"position":{"start":{"line":997,"column":1,"offset":34343},"end":{"line":997,"column":127,"offset":34469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":999,"column":5,"offset":34475},"end":{"line":999,"column":14,"offset":34484}}}],"position":{"start":{"line":999,"column":1,"offset":34471},"end":{"line":999,"column":14,"offset":34484}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":1001,"column":1,"offset":34486},"end":{"line":1001,"column":8,"offset":34493}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(i, j)"}],"position":{"start":{"line":1001,"column":8,"offset":34493},"end":{"line":1001,"column":17,"offset":34502}}},{"type":"text","value":" to be the minimum path sum from ","position":{"start":{"line":1001,"column":17,"offset":34502},"end":{"line":1001,"column":50,"offset":34535}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"triangle[0][0]"}],"position":{"start":{"line":1001,"column":50,"offset":34535},"end":{"line":1001,"column":66,"offset":34551}}},{"type":"text","value":" to ","position":{"start":{"line":1001,"column":66,"offset":34551},"end":{"line":1001,"column":70,"offset":34555}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"triangle[i][j]"}],"position":{"start":{"line":1001,"column":70,"offset":34555},"end":{"line":1001,"column":86,"offset":34571}}},{"type":"text","value":".","position":{"start":{"line":1001,"column":86,"offset":34571},"end":{"line":1001,"column":87,"offset":34572}}}],"position":{"start":{"line":1001,"column":1,"offset":34486},"end":{"line":1001,"column":87,"offset":34572}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(i, 0) = f(i-1, j) + triangle[i][0]\nf(i, j) = min( f(i-1, j-1), f(i-1, j) ) + triangle[i][j], 0 < j < i\nf(i, i) = f(i-1, i-1) + triangle[i][i], i > 0\n"}],"position":{"start":{"line":1003,"column":1,"offset":34574},"end":{"line":1005,"column":50,"offset":34736}}}],"position":{"start":{"line":1003,"column":1,"offset":34574},"end":{"line":1005,"column":50,"offset":34736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":1007,"column":1,"offset":34738},"end":{"line":1007,"column":27,"offset":34764}}}],"position":{"start":{"line":1007,"column":1,"offset":34738},"end":{"line":1007,"column":27,"offset":34764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {number[][]} triangle\n * @return {number}\n */\nlet minimumTotal = function (triangle) {\n    if (triangle.length <= 0) {\n        return 0;\n    }\n\n    const dp = [triangle[0][0]];\n    for (let i = 1; i < triangle.length; i++) {\n        dp[i] = dp[i - 1] + triangle[i][i];\n        for (let j = i - 1; j >= 1; j--) {\n            dp[j] = Math.min(dp[j], dp[j - 1]) + triangle[i][j];\n        }\n        dp[0] += triangle[i][0];\n    }\n    return Math.min(...dp);\n};\n"}],"position":{"start":{"line":1009,"column":1,"offset":34766},"end":{"line":1029,"column":4,"offset":35246}}}],"position":{"start":{"line":1009,"column":1,"offset":34766},"end":{"line":1029,"column":4,"offset":35246}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1031,"column":1,"offset":35248},"end":{"line":1031,"column":4,"offset":35251}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1033,"column":1,"offset":35253},"end":{"line":1035,"column":10,"offset":35295}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1035,"column":10,"offset":35295},"end":{"line":1035,"column":40,"offset":35325}}}],"position":{"start":{"line":1035,"column":10,"offset":35295},"end":{"line":1035,"column":40,"offset":35325}}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":1035,"column":40,"offset":35325},"end":{"line":1036,"column":24,"offset":35349}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/dynamic-programming"},"children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":1036,"column":24,"offset":35349},"end":{"line":1036,"column":68,"offset":35393}}}],"position":{"start":{"line":1036,"column":24,"offset":35349},"end":{"line":1036,"column":68,"offset":35393}}},{"type":"text","value":"\nSimilar Questions:\n\"Maximum Subarray\": ","position":{"start":{"line":1036,"column":68,"offset":35393},"end":{"line":1038,"column":21,"offset":35433}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/maximum-subarray"},"children":[{"type":"text","value":"https://leetcode.com/problems/maximum-subarray","position":{"start":{"line":1038,"column":21,"offset":35433},"end":{"line":1038,"column":67,"offset":35479}}}],"position":{"start":{"line":1038,"column":21,"offset":35433},"end":{"line":1038,"column":67,"offset":35479}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":1038,"column":67,"offset":35479},"end":{"line":1039,"column":39,"offset":35518}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":1039,"column":39,"offset":35518},"end":{"line":1039,"column":103,"offset":35582}}}],"position":{"start":{"line":1039,"column":39,"offset":35518},"end":{"line":1039,"column":103,"offset":35582}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":1039,"column":103,"offset":35582},"end":{"line":1040,"column":40,"offset":35622}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":1040,"column":40,"offset":35622},"end":{"line":1040,"column":105,"offset":35687}}}],"position":{"start":{"line":1040,"column":40,"offset":35622},"end":{"line":1040,"column":105,"offset":35687}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":1040,"column":105,"offset":35687},"end":{"line":1041,"column":39,"offset":35726}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":1041,"column":39,"offset":35726},"end":{"line":1041,"column":103,"offset":35790}}}],"position":{"start":{"line":1041,"column":39,"offset":35726},"end":{"line":1041,"column":103,"offset":35790}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":1041,"column":103,"offset":35790},"end":{"line":1042,"column":50,"offset":35840}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":1042,"column":50,"offset":35840},"end":{"line":1042,"column":125,"offset":35915}}}],"position":{"start":{"line":1042,"column":50,"offset":35840},"end":{"line":1042,"column":125,"offset":35915}}}],"position":{"start":{"line":1033,"column":1,"offset":35253},"end":{"line":1042,"column":125,"offset":35915}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1044,"column":1,"offset":35917},"end":{"line":1044,"column":4,"offset":35920}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#121-best-time-to-buy-and-sell-stockhttpsleetcodecomproblemsbest-time-to-buy-and-sell-stockdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1046,"column":2,"offset":35923},"end":{"line":1046,"column":142,"offset":36063}}}],"position":{"start":{"line":1046,"column":1,"offset":35922},"end":{"line":1046,"column":247,"offset":36168}}}],"position":{"start":{"line":1046,"column":1,"offset":35922},"end":{"line":1046,"column":247,"offset":36168}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1048,"column":4,"offset":36173},"end":{"line":1048,"column":6,"offset":36175}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/"},"children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":1048,"column":7,"offset":36176},"end":{"line":1048,"column":43,"offset":36212}}}],"position":{"start":{"line":1048,"column":6,"offset":36175},"end":{"line":1048,"column":120,"offset":36289}}}],"position":{"start":{"line":1048,"column":1,"offset":36170},"end":{"line":1048,"column":120,"offset":36289}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1050,"column":5,"offset":36295},"end":{"line":1050,"column":13,"offset":36303}}}],"position":{"start":{"line":1050,"column":1,"offset":36291},"end":{"line":1050,"column":13,"offset":36303}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":1052,"column":1,"offset":36305},"end":{"line":1052,"column":37,"offset":36341}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":1052,"column":38,"offset":36342},"end":{"line":1052,"column":39,"offset":36343}}}],"position":{"start":{"line":1052,"column":37,"offset":36341},"end":{"line":1052,"column":40,"offset":36344}}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":1052,"column":40,"offset":36344},"end":{"line":1052,"column":88,"offset":36392}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":1052,"column":89,"offset":36393},"end":{"line":1052,"column":90,"offset":36394}}}],"position":{"start":{"line":1052,"column":88,"offset":36392},"end":{"line":1052,"column":91,"offset":36395}}},{"type":"text","value":".","position":{"start":{"line":1052,"column":91,"offset":36395},"end":{"line":1052,"column":92,"offset":36396}}}],"position":{"start":{"line":1052,"column":1,"offset":36305},"end":{"line":1052,"column":92,"offset":36396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.","position":{"start":{"line":1054,"column":1,"offset":36398},"end":{"line":1054,"column":160,"offset":36557}}}],"position":{"start":{"line":1054,"column":1,"offset":36398},"end":{"line":1054,"column":160,"offset":36557}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that you cannot sell a stock before you buy one.","position":{"start":{"line":1056,"column":1,"offset":36559},"end":{"line":1056,"column":54,"offset":36612}}}],"position":{"start":{"line":1056,"column":1,"offset":36559},"end":{"line":1056,"column":54,"offset":36612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1058,"column":3,"offset":36616},"end":{"line":1058,"column":13,"offset":36626}}}],"position":{"start":{"line":1058,"column":1,"offset":36614},"end":{"line":1058,"column":15,"offset":36628}}}],"position":{"start":{"line":1058,"column":1,"offset":36614},"end":{"line":1058,"column":15,"offset":36628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n             Not 7-1 = 6, as selling price needs to be larger than buying price.\n"}],"position":{"start":{"line":1060,"column":1,"offset":36630},"end":{"line":1066,"column":4,"offset":36837}}}],"position":{"start":{"line":1060,"column":1,"offset":36630},"end":{"line":1066,"column":4,"offset":36837}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1068,"column":3,"offset":36841},"end":{"line":1068,"column":13,"offset":36851}}}],"position":{"start":{"line":1068,"column":1,"offset":36839},"end":{"line":1068,"column":15,"offset":36853}}}],"position":{"start":{"line":1068,"column":1,"offset":36839},"end":{"line":1068,"column":15,"offset":36853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n"}],"position":{"start":{"line":1070,"column":1,"offset":36855},"end":{"line":1075,"column":4,"offset":36964}}}],"position":{"start":{"line":1070,"column":1,"offset":36855},"end":{"line":1075,"column":4,"offset":36964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1077,"column":5,"offset":36970},"end":{"line":1077,"column":14,"offset":36979}}}],"position":{"start":{"line":1077,"column":1,"offset":36966},"end":{"line":1077,"column":14,"offset":36979}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Only care about positive profits. Take the frist item as base and scan to the right. If we encounter an item ","position":{"start":{"line":1079,"column":1,"offset":36981},"end":{"line":1079,"column":110,"offset":37090}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"j"}],"position":{"start":{"line":1079,"column":110,"offset":37090},"end":{"line":1079,"column":113,"offset":37093}}},{"type":"text","value":" whose price ","position":{"start":{"line":1079,"column":113,"offset":37093},"end":{"line":1079,"column":126,"offset":37106}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"price[j]"}],"position":{"start":{"line":1079,"column":126,"offset":37106},"end":{"line":1079,"column":136,"offset":37116}}},{"type":"text","value":" is lower than the base (which means if we sell now the profit would be negative), we sell ","position":{"start":{"line":1079,"column":136,"offset":37116},"end":{"line":1079,"column":227,"offset":37207}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"j-1"}],"position":{"start":{"line":1079,"column":227,"offset":37207},"end":{"line":1079,"column":232,"offset":37212}}},{"type":"text","value":" instead and make ","position":{"start":{"line":1079,"column":232,"offset":37212},"end":{"line":1079,"column":250,"offset":37230}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"j"}],"position":{"start":{"line":1079,"column":250,"offset":37230},"end":{"line":1079,"column":253,"offset":37233}}},{"type":"text","value":" the new base.","position":{"start":{"line":1079,"column":253,"offset":37233},"end":{"line":1079,"column":267,"offset":37247}}}],"position":{"start":{"line":1079,"column":1,"offset":36981},"end":{"line":1079,"column":267,"offset":37247}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Because ","position":{"start":{"line":1081,"column":1,"offset":37249},"end":{"line":1081,"column":9,"offset":37257}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"price[j]"}],"position":{"start":{"line":1081,"column":9,"offset":37257},"end":{"line":1081,"column":19,"offset":37267}}},{"type":"text","value":" is lower that the base, using ","position":{"start":{"line":1081,"column":19,"offset":37267},"end":{"line":1081,"column":50,"offset":37298}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"j"}],"position":{"start":{"line":1081,"column":50,"offset":37298},"end":{"line":1081,"column":53,"offset":37301}}},{"type":"text","value":" as new base is guaranteed to gain more profit comparing to the old one.","position":{"start":{"line":1081,"column":53,"offset":37301},"end":{"line":1081,"column":125,"offset":37373}}}],"position":{"start":{"line":1081,"column":1,"offset":37249},"end":{"line":1081,"column":125,"offset":37373}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    let base = prices[0];\n    for (let i = 1; i < prices.length; i++) {\n        const profit = prices[i] - base;\n        if (profit > max) {\n            max = profit;\n        } else if (profit < 0) {\n            base = prices[i];\n        }\n    }\n    return max;\n};\n"}],"position":{"start":{"line":1083,"column":1,"offset":37375},"end":{"line":1101,"column":4,"offset":37758}}}],"position":{"start":{"line":1083,"column":1,"offset":37375},"end":{"line":1101,"column":4,"offset":37758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1103,"column":1,"offset":37760},"end":{"line":1103,"column":4,"offset":37763}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1105,"column":1,"offset":37765},"end":{"line":1107,"column":10,"offset":37807}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1107,"column":10,"offset":37807},"end":{"line":1107,"column":40,"offset":37837}}}],"position":{"start":{"line":1107,"column":10,"offset":37807},"end":{"line":1107,"column":40,"offset":37837}}},{"type":"text","value":"\n\"Greedy\": ","position":{"start":{"line":1107,"column":40,"offset":37837},"end":{"line":1108,"column":11,"offset":37848}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/greedy"},"children":[{"type":"text","value":"https://leetcode.com/tag/greedy","position":{"start":{"line":1108,"column":11,"offset":37848},"end":{"line":1108,"column":42,"offset":37879}}}],"position":{"start":{"line":1108,"column":11,"offset":37848},"end":{"line":1108,"column":42,"offset":37879}}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":1108,"column":42,"offset":37879},"end":{"line":1110,"column":36,"offset":37934}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":1110,"column":36,"offset":37934},"end":{"line":1110,"column":97,"offset":37995}}}],"position":{"start":{"line":1110,"column":36,"offset":37934},"end":{"line":1110,"column":97,"offset":37995}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":1110,"column":97,"offset":37995},"end":{"line":1111,"column":40,"offset":38035}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":1111,"column":40,"offset":38035},"end":{"line":1111,"column":105,"offset":38100}}}],"position":{"start":{"line":1111,"column":40,"offset":38035},"end":{"line":1111,"column":105,"offset":38100}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":1111,"column":105,"offset":38100},"end":{"line":1112,"column":39,"offset":38139}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":1112,"column":39,"offset":38139},"end":{"line":1112,"column":103,"offset":38203}}}],"position":{"start":{"line":1112,"column":39,"offset":38139},"end":{"line":1112,"column":103,"offset":38203}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":1112,"column":103,"offset":38203},"end":{"line":1113,"column":50,"offset":38253}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":1113,"column":50,"offset":38253},"end":{"line":1113,"column":125,"offset":38328}}}],"position":{"start":{"line":1113,"column":50,"offset":38253},"end":{"line":1113,"column":125,"offset":38328}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Transaction Fee\": ","position":{"start":{"line":1113,"column":125,"offset":38328},"end":{"line":1114,"column":57,"offset":38385}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","position":{"start":{"line":1114,"column":57,"offset":38385},"end":{"line":1114,"column":139,"offset":38467}}}],"position":{"start":{"line":1114,"column":57,"offset":38385},"end":{"line":1114,"column":139,"offset":38467}}}],"position":{"start":{"line":1105,"column":1,"offset":37765},"end":{"line":1114,"column":139,"offset":38467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1116,"column":1,"offset":38469},"end":{"line":1116,"column":4,"offset":38472}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#122-best-time-to-buy-and-sell-stock-iihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1118,"column":2,"offset":38475},"end":{"line":1118,"column":142,"offset":38615}}}],"position":{"start":{"line":1118,"column":1,"offset":38474},"end":{"line":1118,"column":253,"offset":38726}}}],"position":{"start":{"line":1118,"column":1,"offset":38474},"end":{"line":1118,"column":253,"offset":38726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1120,"column":4,"offset":38731},"end":{"line":1120,"column":6,"offset":38733}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/"},"children":[{"type":"text","value":"122. Best Time to Buy and Sell Stock II","position":{"start":{"line":1120,"column":7,"offset":38734},"end":{"line":1120,"column":46,"offset":38773}}}],"position":{"start":{"line":1120,"column":6,"offset":38733},"end":{"line":1120,"column":126,"offset":38853}}}],"position":{"start":{"line":1120,"column":1,"offset":38728},"end":{"line":1120,"column":126,"offset":38853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1122,"column":5,"offset":38859},"end":{"line":1122,"column":13,"offset":38867}}}],"position":{"start":{"line":1122,"column":1,"offset":38855},"end":{"line":1122,"column":13,"offset":38867}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":1124,"column":1,"offset":38869},"end":{"line":1124,"column":37,"offset":38905}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":1124,"column":38,"offset":38906},"end":{"line":1124,"column":39,"offset":38907}}}],"position":{"start":{"line":1124,"column":37,"offset":38905},"end":{"line":1124,"column":40,"offset":38908}}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":1124,"column":40,"offset":38908},"end":{"line":1124,"column":88,"offset":38956}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":1124,"column":89,"offset":38957},"end":{"line":1124,"column":90,"offset":38958}}}],"position":{"start":{"line":1124,"column":88,"offset":38956},"end":{"line":1124,"column":91,"offset":38959}}},{"type":"text","value":".","position":{"start":{"line":1124,"column":91,"offset":38959},"end":{"line":1124,"column":92,"offset":38960}}}],"position":{"start":{"line":1124,"column":1,"offset":38869},"end":{"line":1124,"column":92,"offset":38960}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).","position":{"start":{"line":1126,"column":1,"offset":38962},"end":{"line":1126,"column":162,"offset":39123}}}],"position":{"start":{"line":1126,"column":1,"offset":38962},"end":{"line":1126,"column":162,"offset":39123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1128,"column":3,"offset":39127},"end":{"line":1128,"column":8,"offset":39132}}}],"position":{"start":{"line":1128,"column":1,"offset":39125},"end":{"line":1128,"column":10,"offset":39134}}},{"type":"text","value":" You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":1128,"column":10,"offset":39134},"end":{"line":1128,"column":125,"offset":39249}}}],"position":{"start":{"line":1128,"column":1,"offset":39125},"end":{"line":1128,"column":125,"offset":39249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1130,"column":3,"offset":39253},"end":{"line":1130,"column":13,"offset":39263}}}],"position":{"start":{"line":1130,"column":1,"offset":39251},"end":{"line":1130,"column":15,"offset":39265}}}],"position":{"start":{"line":1130,"column":1,"offset":39251},"end":{"line":1130,"column":15,"offset":39265}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\n"}],"position":{"start":{"line":1132,"column":1,"offset":39267},"end":{"line":1138,"column":4,"offset":39485}}}],"position":{"start":{"line":1132,"column":1,"offset":39267},"end":{"line":1138,"column":4,"offset":39485}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1140,"column":3,"offset":39489},"end":{"line":1140,"column":13,"offset":39499}}}],"position":{"start":{"line":1140,"column":1,"offset":39487},"end":{"line":1140,"column":15,"offset":39501}}}],"position":{"start":{"line":1140,"column":1,"offset":39487},"end":{"line":1140,"column":15,"offset":39501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.\n"}],"position":{"start":{"line":1142,"column":1,"offset":39503},"end":{"line":1149,"column":4,"offset":39817}}}],"position":{"start":{"line":1142,"column":1,"offset":39503},"end":{"line":1149,"column":4,"offset":39817}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1151,"column":3,"offset":39821},"end":{"line":1151,"column":13,"offset":39831}}}],"position":{"start":{"line":1151,"column":1,"offset":39819},"end":{"line":1151,"column":15,"offset":39833}}}],"position":{"start":{"line":1151,"column":1,"offset":39819},"end":{"line":1151,"column":15,"offset":39833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n"}],"position":{"start":{"line":1153,"column":1,"offset":39835},"end":{"line":1155,"column":76,"offset":39947}}}],"position":{"start":{"line":1153,"column":1,"offset":39835},"end":{"line":1155,"column":76,"offset":39947}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1157,"column":5,"offset":39953},"end":{"line":1157,"column":14,"offset":39962}}}],"position":{"start":{"line":1157,"column":1,"offset":39949},"end":{"line":1157,"column":14,"offset":39962}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sell immediately after the price drops. Or in other perspective, it is the sum of all the incremental pairs (buy in then immediately sell out).","position":{"start":{"line":1159,"column":1,"offset":39964},"end":{"line":1159,"column":144,"offset":40107}}}],"position":{"start":{"line":1159,"column":1,"offset":39964},"end":{"line":1159,"column":144,"offset":40107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    for (let i = 1; i < prices.length; i++) {\n        if (prices[i] > prices[i - 1]) {\n            max += prices[i] - prices[i - 1];\n        }\n    }\n    return max;\n};\n"}],"position":{"start":{"line":1161,"column":1,"offset":40109},"end":{"line":1175,"column":4,"offset":40395}}}],"position":{"start":{"line":1161,"column":1,"offset":40109},"end":{"line":1175,"column":4,"offset":40395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1177,"column":1,"offset":40397},"end":{"line":1177,"column":4,"offset":40400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1179,"column":1,"offset":40402},"end":{"line":1181,"column":10,"offset":40444}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1181,"column":10,"offset":40444},"end":{"line":1181,"column":40,"offset":40474}}}],"position":{"start":{"line":1181,"column":10,"offset":40444},"end":{"line":1181,"column":40,"offset":40474}}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":1181,"column":40,"offset":40474},"end":{"line":1182,"column":24,"offset":40498}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/dynamic-programming"},"children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":1182,"column":24,"offset":40498},"end":{"line":1182,"column":68,"offset":40542}}}],"position":{"start":{"line":1182,"column":24,"offset":40498},"end":{"line":1182,"column":68,"offset":40542}}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":1182,"column":68,"offset":40542},"end":{"line":1184,"column":36,"offset":40597}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":1184,"column":36,"offset":40597},"end":{"line":1184,"column":97,"offset":40658}}}],"position":{"start":{"line":1184,"column":36,"offset":40597},"end":{"line":1184,"column":97,"offset":40658}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":1184,"column":97,"offset":40658},"end":{"line":1185,"column":39,"offset":40697}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":1185,"column":39,"offset":40697},"end":{"line":1185,"column":103,"offset":40761}}}],"position":{"start":{"line":1185,"column":39,"offset":40697},"end":{"line":1185,"column":103,"offset":40761}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":1185,"column":103,"offset":40761},"end":{"line":1186,"column":39,"offset":40800}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":1186,"column":39,"offset":40800},"end":{"line":1186,"column":103,"offset":40864}}}],"position":{"start":{"line":1186,"column":39,"offset":40800},"end":{"line":1186,"column":103,"offset":40864}}},{"type":"text","value":"\n\"Maximum Sum of 3 Non-Overlapping Subarrays\": ","position":{"start":{"line":1186,"column":103,"offset":40864},"end":{"line":1187,"column":47,"offset":40911}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays"},"children":[{"type":"text","value":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","position":{"start":{"line":1187,"column":47,"offset":40911},"end":{"line":1187,"column":119,"offset":40983}}}],"position":{"start":{"line":1187,"column":47,"offset":40911},"end":{"line":1187,"column":119,"offset":40983}}}],"position":{"start":{"line":1179,"column":1,"offset":40402},"end":{"line":1187,"column":119,"offset":40983}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1189,"column":1,"offset":40985},"end":{"line":1189,"column":4,"offset":40988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#123-best-time-to-buy-and-sell-stock-iiihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iiidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1191,"column":2,"offset":40991},"end":{"line":1191,"column":142,"offset":41131}}}],"position":{"start":{"line":1191,"column":1,"offset":40990},"end":{"line":1191,"column":255,"offset":41244}}}],"position":{"start":{"line":1191,"column":1,"offset":40990},"end":{"line":1191,"column":255,"offset":41244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1193,"column":4,"offset":41249},"end":{"line":1193,"column":6,"offset":41251}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/"},"children":[{"type":"text","value":"123. Best Time to Buy and Sell Stock III","position":{"start":{"line":1193,"column":7,"offset":41252},"end":{"line":1193,"column":47,"offset":41292}}}],"position":{"start":{"line":1193,"column":6,"offset":41251},"end":{"line":1193,"column":128,"offset":41373}}}],"position":{"start":{"line":1193,"column":1,"offset":41246},"end":{"line":1193,"column":128,"offset":41373}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1195,"column":5,"offset":41379},"end":{"line":1195,"column":13,"offset":41387}}}],"position":{"start":{"line":1195,"column":1,"offset":41375},"end":{"line":1195,"column":13,"offset":41387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":1197,"column":1,"offset":41389},"end":{"line":1197,"column":37,"offset":41425}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":1197,"column":38,"offset":41426},"end":{"line":1197,"column":39,"offset":41427}}}],"position":{"start":{"line":1197,"column":37,"offset":41425},"end":{"line":1197,"column":40,"offset":41428}}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":1197,"column":40,"offset":41428},"end":{"line":1197,"column":88,"offset":41476}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":1197,"column":89,"offset":41477},"end":{"line":1197,"column":90,"offset":41478}}}],"position":{"start":{"line":1197,"column":88,"offset":41476},"end":{"line":1197,"column":91,"offset":41479}}},{"type":"text","value":".","position":{"start":{"line":1197,"column":91,"offset":41479},"end":{"line":1197,"column":92,"offset":41480}}}],"position":{"start":{"line":1197,"column":1,"offset":41389},"end":{"line":1197,"column":92,"offset":41480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete at most ","position":{"start":{"line":1199,"column":1,"offset":41482},"end":{"line":1199,"column":74,"offset":41555}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"two","position":{"start":{"line":1199,"column":75,"offset":41556},"end":{"line":1199,"column":78,"offset":41559}}}],"position":{"start":{"line":1199,"column":74,"offset":41555},"end":{"line":1199,"column":79,"offset":41560}}},{"type":"text","value":" transactions.","position":{"start":{"line":1199,"column":79,"offset":41560},"end":{"line":1199,"column":93,"offset":41574}}}],"position":{"start":{"line":1199,"column":1,"offset":41482},"end":{"line":1199,"column":93,"offset":41574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*","position":{"start":{"line":1201,"column":1,"offset":41576},"end":{"line":1201,"column":3,"offset":41578}}},{"type":"text","value":"*","position":{"start":{"line":1201,"column":3,"offset":41578},"end":{"line":1201,"column":5,"offset":41580}}},{"type":"text","value":"Note:","position":{"start":{"line":1201,"column":5,"offset":41580},"end":{"line":1201,"column":10,"offset":41585}}},{"type":"text","value":"*","position":{"start":{"line":1201,"column":10,"offset":41585},"end":{"line":1201,"column":12,"offset":41587}}},{"type":"text","value":"*","position":{"start":{"line":1201,"column":12,"offset":41587},"end":{"line":1201,"column":14,"offset":41589}}},{"type":"text","value":"You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":1201,"column":14,"offset":41589},"end":{"line":1201,"column":128,"offset":41703}}}],"position":{"start":{"line":1201,"column":1,"offset":41576},"end":{"line":1201,"column":128,"offset":41703}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1203,"column":3,"offset":41707},"end":{"line":1203,"column":13,"offset":41717}}}],"position":{"start":{"line":1203,"column":1,"offset":41705},"end":{"line":1203,"column":15,"offset":41719}}}],"position":{"start":{"line":1203,"column":1,"offset":41705},"end":{"line":1203,"column":15,"offset":41719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n             Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.\n"}],"position":{"start":{"line":1205,"column":1,"offset":41721},"end":{"line":1208,"column":96,"offset":41950}}}],"position":{"start":{"line":1205,"column":1,"offset":41721},"end":{"line":1208,"column":96,"offset":41950}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1210,"column":3,"offset":41954},"end":{"line":1210,"column":13,"offset":41964}}}],"position":{"start":{"line":1210,"column":1,"offset":41952},"end":{"line":1210,"column":15,"offset":41966}}}],"position":{"start":{"line":1210,"column":1,"offset":41952},"end":{"line":1210,"column":15,"offset":41966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.\n"}],"position":{"start":{"line":1212,"column":1,"offset":41968},"end":{"line":1219,"column":4,"offset":42282}}}],"position":{"start":{"line":1212,"column":1,"offset":41968},"end":{"line":1219,"column":4,"offset":42282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1221,"column":3,"offset":42286},"end":{"line":1221,"column":13,"offset":42296}}}],"position":{"start":{"line":1221,"column":1,"offset":42284},"end":{"line":1221,"column":15,"offset":42298}}}],"position":{"start":{"line":1221,"column":1,"offset":42284},"end":{"line":1221,"column":15,"offset":42298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n"}],"position":{"start":{"line":1223,"column":1,"offset":42300},"end":{"line":1225,"column":76,"offset":42412}}}],"position":{"start":{"line":1223,"column":1,"offset":42300},"end":{"line":1225,"column":76,"offset":42412}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1227,"column":5,"offset":42418},"end":{"line":1227,"column":14,"offset":42427}}}],"position":{"start":{"line":1227,"column":1,"offset":42414},"end":{"line":1227,"column":14,"offset":42427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Multiple transactions may not be engaged in at the same time. That means if we view the days that involed in the same transaction as a group, there won't be any intersection. We may complete at most ","position":{"start":{"line":1229,"column":1,"offset":42429},"end":{"line":1229,"column":200,"offset":42628}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"two","position":{"start":{"line":1229,"column":201,"offset":42629},"end":{"line":1229,"column":204,"offset":42632}}}],"position":{"start":{"line":1229,"column":200,"offset":42628},"end":{"line":1229,"column":205,"offset":42633}}},{"type":"text","value":" transactions, so divide the days into two groups, ","position":{"start":{"line":1229,"column":205,"offset":42633},"end":{"line":1229,"column":256,"offset":42684}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[0...k]"}],"position":{"start":{"line":1229,"column":256,"offset":42684},"end":{"line":1229,"column":265,"offset":42693}}},{"type":"text","value":" and ","position":{"start":{"line":1229,"column":265,"offset":42693},"end":{"line":1229,"column":270,"offset":42698}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[k...n-1]"}],"position":{"start":{"line":1229,"column":270,"offset":42698},"end":{"line":1229,"column":281,"offset":42709}}},{"type":"text","value":". Notice ","position":{"start":{"line":1229,"column":281,"offset":42709},"end":{"line":1229,"column":290,"offset":42718}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"k"}],"position":{"start":{"line":1229,"column":290,"offset":42718},"end":{"line":1229,"column":293,"offset":42721}}},{"type":"text","value":" exists in both groups because technically we can sell out then immediately buy in at the same day.","position":{"start":{"line":1229,"column":293,"offset":42721},"end":{"line":1229,"column":392,"offset":42820}}}],"position":{"start":{"line":1229,"column":1,"offset":42429},"end":{"line":1229,"column":392,"offset":42820}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":1231,"column":1,"offset":42822},"end":{"line":1231,"column":8,"offset":42829}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p1(i)"}],"position":{"start":{"line":1231,"column":8,"offset":42829},"end":{"line":1231,"column":15,"offset":42836}}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":1231,"column":15,"offset":42836},"end":{"line":1231,"column":44,"offset":42865}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[0...i]"}],"position":{"start":{"line":1231,"column":44,"offset":42865},"end":{"line":1231,"column":53,"offset":42874}}},{"type":"text","value":". This is just like the problem of ","position":{"start":{"line":1231,"column":53,"offset":42874},"end":{"line":1231,"column":88,"offset":42909}}},{"type":"element","tagName":"a","properties":{"href":"./121.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock.md"},"children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":1231,"column":89,"offset":42910},"end":{"line":1231,"column":125,"offset":42946}}}],"position":{"start":{"line":1231,"column":88,"offset":42909},"end":{"line":1231,"column":183,"offset":43004}}},{"type":"text","value":".","position":{"start":{"line":1231,"column":183,"offset":43004},"end":{"line":1231,"column":184,"offset":43005}}}],"position":{"start":{"line":1231,"column":1,"offset":42822},"end":{"line":1231,"column":184,"offset":43005}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p1(0) = 0\np1(i) = max( p1(i-1), prices[i] - min(prices[0], ..., prices[i-1]) ), 0 < i <= n-1\n"}],"position":{"start":{"line":1233,"column":1,"offset":43007},"end":{"line":1234,"column":87,"offset":43107}}}],"position":{"start":{"line":1233,"column":1,"offset":43007},"end":{"line":1234,"column":87,"offset":43107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":1236,"column":1,"offset":43109},"end":{"line":1236,"column":8,"offset":43116}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p2(i)"}],"position":{"start":{"line":1236,"column":8,"offset":43116},"end":{"line":1236,"column":15,"offset":43123}}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":1236,"column":15,"offset":43123},"end":{"line":1236,"column":44,"offset":43152}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[i...n-1]"}],"position":{"start":{"line":1236,"column":44,"offset":43152},"end":{"line":1236,"column":55,"offset":43163}}},{"type":"text","value":". This is the mirror of ","position":{"start":{"line":1236,"column":55,"offset":43163},"end":{"line":1236,"column":79,"offset":43187}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p1"}],"position":{"start":{"line":1236,"column":79,"offset":43187},"end":{"line":1236,"column":83,"offset":43191}}},{"type":"text","value":".","position":{"start":{"line":1236,"column":83,"offset":43191},"end":{"line":1236,"column":84,"offset":43192}}}],"position":{"start":{"line":1236,"column":1,"offset":43109},"end":{"line":1236,"column":84,"offset":43192}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p2(n-1) = 0\np2(i) = max( p2(i+1), max(prices[i], ..., prices[n-1]) - prices[i] ), n-1 > i >= 0\n"}],"position":{"start":{"line":1238,"column":1,"offset":43194},"end":{"line":1239,"column":87,"offset":43296}}}],"position":{"start":{"line":1238,"column":1,"offset":43194},"end":{"line":1239,"column":87,"offset":43296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":1241,"column":1,"offset":43298},"end":{"line":1241,"column":8,"offset":43305}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(k)"}],"position":{"start":{"line":1241,"column":8,"offset":43305},"end":{"line":1241,"column":14,"offset":43311}}},{"type":"text","value":" to be ","position":{"start":{"line":1241,"column":14,"offset":43311},"end":{"line":1241,"column":21,"offset":43318}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p1(k) + p2(k)"}],"position":{"start":{"line":1241,"column":21,"offset":43318},"end":{"line":1241,"column":36,"offset":43333}}},{"type":"text","value":". We need to get ","position":{"start":{"line":1241,"column":36,"offset":43333},"end":{"line":1241,"column":53,"offset":43350}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"max( f(0), ..., f(n-1) )"}],"position":{"start":{"line":1241,"column":53,"offset":43350},"end":{"line":1241,"column":79,"offset":43376}}},{"type":"text","value":".","position":{"start":{"line":1241,"column":79,"offset":43376},"end":{"line":1241,"column":80,"offset":43377}}}],"position":{"start":{"line":1241,"column":1,"offset":43298},"end":{"line":1241,"column":80,"offset":43377}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    const len = prices.length;\n    if (len <= 1) {\n        return 0;\n    }\n\n    const dp = [0];\n\n    let min = prices[0];\n    for (let i = 1; i < len; i++) {\n        dp[i] = Math.max(dp[i - 1], prices[i] - min);\n        min = Math.min(prices[i], min);\n    }\n\n    let p2 = 0;\n    let max = prices[len - 1];\n    for (let i = len - 2; i >= 0; i--) {\n        max = Math.max(prices[i], max);\n        p2 = Math.max(p2, max - prices[i]);\n        dp[i] += p2;\n    }\n\n    return Math.max(...dp);\n};\n"}],"position":{"start":{"line":1243,"column":1,"offset":43379},"end":{"line":1272,"column":4,"offset":43970}}}],"position":{"start":{"line":1243,"column":1,"offset":43379},"end":{"line":1272,"column":4,"offset":43970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1274,"column":1,"offset":43972},"end":{"line":1274,"column":4,"offset":43975}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":1276,"column":1,"offset":43977},"end":{"line":1278,"column":9,"offset":44018}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/tree"},"children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":1278,"column":9,"offset":44018},"end":{"line":1278,"column":38,"offset":44047}}}],"position":{"start":{"line":1278,"column":9,"offset":44018},"end":{"line":1278,"column":38,"offset":44047}}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":1278,"column":38,"offset":44047},"end":{"line":1279,"column":23,"offset":44070}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1279,"column":23,"offset":44070},"end":{"line":1279,"column":66,"offset":44113}}}],"position":{"start":{"line":1279,"column":23,"offset":44070},"end":{"line":1279,"column":66,"offset":44113}}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":1279,"column":66,"offset":44113},"end":{"line":1281,"column":13,"offset":44145}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/path-sum"},"children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":1281,"column":13,"offset":44145},"end":{"line":1281,"column":51,"offset":44183}}}],"position":{"start":{"line":1281,"column":13,"offset":44145},"end":{"line":1281,"column":51,"offset":44183}}},{"type":"text","value":"\n\"Sum Root to Leaf Numbers\": ","position":{"start":{"line":1281,"column":51,"offset":44183},"end":{"line":1282,"column":29,"offset":44212}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/sum-root-to-leaf-numbers"},"children":[{"type":"text","value":"https://leetcode.com/problems/sum-root-to-leaf-numbers","position":{"start":{"line":1282,"column":29,"offset":44212},"end":{"line":1282,"column":83,"offset":44266}}}],"position":{"start":{"line":1282,"column":29,"offset":44212},"end":{"line":1282,"column":83,"offset":44266}}},{"type":"text","value":"\n\"Path Sum IV\": ","position":{"start":{"line":1282,"column":83,"offset":44266},"end":{"line":1283,"column":16,"offset":44282}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/path-sum-iv"},"children":[{"type":"text","value":"https://leetcode.com/problems/path-sum-iv","position":{"start":{"line":1283,"column":16,"offset":44282},"end":{"line":1283,"column":57,"offset":44323}}}],"position":{"start":{"line":1283,"column":16,"offset":44282},"end":{"line":1283,"column":57,"offset":44323}}},{"type":"text","value":"\n\"Longest Univalue Path\": ","position":{"start":{"line":1283,"column":57,"offset":44323},"end":{"line":1284,"column":26,"offset":44349}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/longest-univalue-path"},"children":[{"type":"text","value":"https://leetcode.com/problems/longest-univalue-path","position":{"start":{"line":1284,"column":26,"offset":44349},"end":{"line":1284,"column":77,"offset":44400}}}],"position":{"start":{"line":1284,"column":26,"offset":44349},"end":{"line":1284,"column":77,"offset":44400}}}],"position":{"start":{"line":1276,"column":1,"offset":43977},"end":{"line":1284,"column":77,"offset":44400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1286,"column":1,"offset":44402},"end":{"line":1286,"column":4,"offset":44405}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#124-binary-tree-maximum-path-sumhttpsleetcodecomproblemsbinary-tree-maximum-path-sumdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1288,"column":2,"offset":44408},"end":{"line":1288,"column":142,"offset":44548}}}],"position":{"start":{"line":1288,"column":1,"offset":44407},"end":{"line":1288,"column":241,"offset":44647}}}],"position":{"start":{"line":1288,"column":1,"offset":44407},"end":{"line":1288,"column":241,"offset":44647}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1290,"column":4,"offset":44652},"end":{"line":1290,"column":6,"offset":44654}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/binary-tree-maximum-path-sum/description/"},"children":[{"type":"text","value":"124. Binary Tree Maximum Path Sum","position":{"start":{"line":1290,"column":7,"offset":44655},"end":{"line":1290,"column":40,"offset":44688}}}],"position":{"start":{"line":1290,"column":6,"offset":44654},"end":{"line":1290,"column":114,"offset":44762}}}],"position":{"start":{"line":1290,"column":1,"offset":44649},"end":{"line":1290,"column":114,"offset":44762}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1292,"column":5,"offset":44768},"end":{"line":1292,"column":13,"offset":44776}}}],"position":{"start":{"line":1292,"column":1,"offset":44764},"end":{"line":1292,"column":13,"offset":44776}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a ","position":{"start":{"line":1294,"column":1,"offset":44778},"end":{"line":1294,"column":9,"offset":44786}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"non-empty","position":{"start":{"line":1294,"column":11,"offset":44788},"end":{"line":1294,"column":20,"offset":44797}}}],"position":{"start":{"line":1294,"column":9,"offset":44786},"end":{"line":1294,"column":22,"offset":44799}}},{"type":"text","value":" binary tree, find the maximum path sum.","position":{"start":{"line":1294,"column":22,"offset":44799},"end":{"line":1294,"column":62,"offset":44839}}}],"position":{"start":{"line":1294,"column":1,"offset":44778},"end":{"line":1294,"column":62,"offset":44839}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain ","position":{"start":{"line":1296,"column":1,"offset":44841},"end":{"line":1296,"column":168,"offset":45008}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"at least one node","position":{"start":{"line":1296,"column":170,"offset":45010},"end":{"line":1296,"column":187,"offset":45027}}}],"position":{"start":{"line":1296,"column":168,"offset":45008},"end":{"line":1296,"column":189,"offset":45029}}},{"type":"text","value":" and does not need to go through the root.","position":{"start":{"line":1296,"column":189,"offset":45029},"end":{"line":1296,"column":231,"offset":45071}}}],"position":{"start":{"line":1296,"column":1,"offset":44841},"end":{"line":1296,"column":231,"offset":45071}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1298,"column":3,"offset":45075},"end":{"line":1298,"column":13,"offset":45085}}}],"position":{"start":{"line":1298,"column":1,"offset":45073},"end":{"line":1298,"column":15,"offset":45087}}}],"position":{"start":{"line":1298,"column":1,"offset":45073},"end":{"line":1298,"column":15,"offset":45087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [1,2,3]\n\n       1\n      / \\\n     2   3\n\nOutput: 6\n"}],"position":{"start":{"line":1300,"column":1,"offset":45089},"end":{"line":1309,"column":4,"offset":45154}}}],"position":{"start":{"line":1300,"column":1,"offset":45089},"end":{"line":1309,"column":4,"offset":45154}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1311,"column":3,"offset":45158},"end":{"line":1311,"column":13,"offset":45168}}}],"position":{"start":{"line":1311,"column":1,"offset":45156},"end":{"line":1311,"column":15,"offset":45170}}}],"position":{"start":{"line":1311,"column":1,"offset":45156},"end":{"line":1311,"column":15,"offset":45170}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [-10,9,20,null,null,15,7]\n\n   -10\n   / \\\n  9  20\n    /  \\\n   15   7\n\nOutput: 42\n"}],"position":{"start":{"line":1313,"column":1,"offset":45172},"end":{"line":1324,"column":4,"offset":45267}}}],"position":{"start":{"line":1313,"column":1,"offset":45172},"end":{"line":1324,"column":4,"offset":45267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1326,"column":5,"offset":45273},"end":{"line":1326,"column":14,"offset":45282}}}],"position":{"start":{"line":1326,"column":1,"offset":45269},"end":{"line":1326,"column":14,"offset":45282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For every ","position":{"start":{"line":1328,"column":1,"offset":45284},"end":{"line":1328,"column":11,"offset":45294}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node"}],"position":{"start":{"line":1328,"column":11,"offset":45294},"end":{"line":1328,"column":17,"offset":45300}}},{"type":"text","value":", there are six possible ways to get the max path sum:","position":{"start":{"line":1328,"column":17,"offset":45300},"end":{"line":1328,"column":71,"offset":45354}}}],"position":{"start":{"line":1328,"column":1,"offset":45284},"end":{"line":1328,"column":71,"offset":45354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With ","position":{"start":{"line":1330,"column":5,"offset":45360},"end":{"line":1330,"column":10,"offset":45365}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":1330,"column":10,"offset":45365},"end":{"line":1330,"column":20,"offset":45375}}}],"position":{"start":{"line":1330,"column":5,"offset":45360},"end":{"line":1330,"column":20,"offset":45375}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":1331,"column":9,"offset":45384},"end":{"line":1331,"column":19,"offset":45394}}},{"type":"text","value":" plus the max sum of a path that ends with ","position":{"start":{"line":1331,"column":19,"offset":45394},"end":{"line":1331,"column":62,"offset":45437}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.left"}],"position":{"start":{"line":1331,"column":62,"offset":45437},"end":{"line":1331,"column":73,"offset":45448}}},{"type":"text","value":".","position":{"start":{"line":1331,"column":73,"offset":45448},"end":{"line":1331,"column":74,"offset":45449}}}],"position":{"start":{"line":1331,"column":5,"offset":45380},"end":{"line":1331,"column":74,"offset":45449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":1332,"column":9,"offset":45458},"end":{"line":1332,"column":19,"offset":45468}}},{"type":"text","value":" plus the max sum of a path that starts with ","position":{"start":{"line":1332,"column":19,"offset":45468},"end":{"line":1332,"column":64,"offset":45513}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.right"}],"position":{"start":{"line":1332,"column":64,"offset":45513},"end":{"line":1332,"column":76,"offset":45525}}},{"type":"text","value":".","position":{"start":{"line":1332,"column":76,"offset":45525},"end":{"line":1332,"column":77,"offset":45526}}}],"position":{"start":{"line":1332,"column":5,"offset":45454},"end":{"line":1332,"column":77,"offset":45526}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":1333,"column":9,"offset":45535},"end":{"line":1333,"column":19,"offset":45545}}},{"type":"text","value":" plus the max sum of both paths.","position":{"start":{"line":1333,"column":19,"offset":45545},"end":{"line":1333,"column":51,"offset":45577}}}],"position":{"start":{"line":1333,"column":5,"offset":45531},"end":{"line":1333,"column":51,"offset":45577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Just ","position":{"start":{"line":1334,"column":9,"offset":45586},"end":{"line":1334,"column":14,"offset":45591}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":1334,"column":14,"offset":45591},"end":{"line":1334,"column":24,"offset":45601}}},{"type":"text","value":" (the max sum of both paths are negative).","position":{"start":{"line":1334,"column":24,"offset":45601},"end":{"line":1334,"column":66,"offset":45643}}}],"position":{"start":{"line":1334,"column":5,"offset":45582},"end":{"line":1334,"column":66,"offset":45643}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1331,"column":5,"offset":45380},"end":{"line":1334,"column":66,"offset":45643}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1330,"column":1,"offset":45356},"end":{"line":1334,"column":66,"offset":45643}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without","position":{"start":{"line":1335,"column":5,"offset":45648},"end":{"line":1335,"column":12,"offset":45655}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":1335,"column":12,"offset":45655},"end":{"line":1335,"column":22,"offset":45665}}},{"type":"text","value":" (disconnected)","position":{"start":{"line":1335,"column":22,"offset":45665},"end":{"line":1335,"column":37,"offset":45680}}}],"position":{"start":{"line":1335,"column":5,"offset":45648},"end":{"line":1335,"column":37,"offset":45680}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":1336,"column":9,"offset":45689},"end":{"line":1336,"column":49,"offset":45729}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.left"}],"position":{"start":{"line":1336,"column":49,"offset":45729},"end":{"line":1336,"column":60,"offset":45740}}},{"type":"text","value":" subtree.","position":{"start":{"line":1336,"column":60,"offset":45740},"end":{"line":1336,"column":69,"offset":45749}}}],"position":{"start":{"line":1336,"column":5,"offset":45685},"end":{"line":1336,"column":69,"offset":45749}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":1337,"column":9,"offset":45758},"end":{"line":1337,"column":49,"offset":45798}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.right"}],"position":{"start":{"line":1337,"column":49,"offset":45798},"end":{"line":1337,"column":61,"offset":45810}}},{"type":"text","value":" subtree.","position":{"start":{"line":1337,"column":61,"offset":45810},"end":{"line":1337,"column":70,"offset":45819}}}],"position":{"start":{"line":1337,"column":5,"offset":45754},"end":{"line":1337,"column":70,"offset":45819}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1336,"column":5,"offset":45685},"end":{"line":1337,"column":70,"offset":45819}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1335,"column":1,"offset":45644},"end":{"line":1337,"column":70,"offset":45819}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1330,"column":1,"offset":45356},"end":{"line":1337,"column":70,"offset":45819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are two ways to implement this.","position":{"start":{"line":1339,"column":1,"offset":45821},"end":{"line":1339,"column":38,"offset":45858}}}],"position":{"start":{"line":1339,"column":1,"offset":45821},"end":{"line":1339,"column":38,"offset":45858}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"ONE","position":{"start":{"line":1341,"column":6,"offset":45865},"end":{"line":1341,"column":9,"offset":45868}}}],"position":{"start":{"line":1341,"column":1,"offset":45860},"end":{"line":1341,"column":9,"offset":45868}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define a function that returns two values. The max sum of a path that may or may not end with ","position":{"start":{"line":1343,"column":1,"offset":45870},"end":{"line":1343,"column":95,"offset":45964}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"root"}],"position":{"start":{"line":1343,"column":95,"offset":45964},"end":{"line":1343,"column":101,"offset":45970}}},{"type":"text","value":" node, and the max sum of the path that ends with ","position":{"start":{"line":1343,"column":101,"offset":45970},"end":{"line":1343,"column":151,"offset":46020}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"root"}],"position":{"start":{"line":1343,"column":151,"offset":46020},"end":{"line":1343,"column":157,"offset":46026}}},{"type":"text","value":" node.","position":{"start":{"line":1343,"column":157,"offset":46026},"end":{"line":1343,"column":163,"offset":46032}}}],"position":{"start":{"line":1343,"column":1,"offset":45870},"end":{"line":1343,"column":163,"offset":46032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    return Math.max(..._maxPathSum(root));\n};\n\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nfunction _maxPathSum(root) {\n    if (!root) {\n        return [-Infinity, -Infinity];\n    }\n\n    const left = _maxPathSum(root.left);\n    const right = _maxPathSum(root.right);\n    return [Math.max(left[0], right[0], root.val + Math.max(0, left[1], right[1], left[1] + right[1])), Math.max(left[1], right[1], 0) + root.val];\n}\n"}],"position":{"start":{"line":1345,"column":1,"offset":46034},"end":{"line":1374,"column":4,"offset":46701}}}],"position":{"start":{"line":1345,"column":1,"offset":46034},"end":{"line":1374,"column":4,"offset":46701}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"TWO","position":{"start":{"line":1376,"column":6,"offset":46708},"end":{"line":1376,"column":9,"offset":46711}}}],"position":{"start":{"line":1376,"column":1,"offset":46703},"end":{"line":1376,"column":9,"offset":46711}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Just return the later (max sum of a path that ends with ","position":{"start":{"line":1378,"column":1,"offset":46713},"end":{"line":1378,"column":57,"offset":46769}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"root"}],"position":{"start":{"line":1378,"column":57,"offset":46769},"end":{"line":1378,"column":63,"offset":46775}}},{"type":"text","value":"). Maintain a global variable to store the disconnected max sum.","position":{"start":{"line":1378,"column":63,"offset":46775},"end":{"line":1378,"column":127,"offset":46839}}}],"position":{"start":{"line":1378,"column":1,"offset":46713},"end":{"line":1378,"column":127,"offset":46839}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    const global = { max: -Infinity };\n    _maxPathSum(root, global);\n    return global.max;\n};\n\n/**\n * @param {TreeNode} root\n * @param {object} global\n * @param {number} global.max\n * @return {number[]}\n */\nfunction _maxPathSum(root, global) {\n    if (!root) {\n        return -Infinity;\n    }\n\n    const left = _maxPathSum(root.left, global);\n    const right = _maxPathSum(root.right, global);\n    const localMax = Math.max(left, right, 0) + root.val;\n    global.max = Math.max(global.max, localMax, root.val + left + right);\n    return localMax;\n}\n"}],"position":{"start":{"line":1380,"column":1,"offset":46841},"end":{"line":1415,"column":4,"offset":47630}}}],"position":{"start":{"line":1380,"column":1,"offset":46841},"end":{"line":1415,"column":4,"offset":47630}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1417,"column":1,"offset":47632},"end":{"line":1417,"column":4,"offset":47635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Two Pointers\": ","position":{"start":{"line":1419,"column":1,"offset":47637},"end":{"line":1421,"column":17,"offset":47686}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/two-pointers"},"children":[{"type":"text","value":"https://leetcode.com/tag/two-pointers","position":{"start":{"line":1421,"column":17,"offset":47686},"end":{"line":1421,"column":54,"offset":47723}}}],"position":{"start":{"line":1421,"column":17,"offset":47686},"end":{"line":1421,"column":54,"offset":47723}}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":1421,"column":54,"offset":47723},"end":{"line":1422,"column":11,"offset":47734}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/string"},"children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":1422,"column":11,"offset":47734},"end":{"line":1422,"column":42,"offset":47765}}}],"position":{"start":{"line":1422,"column":11,"offset":47734},"end":{"line":1422,"column":42,"offset":47765}}},{"type":"text","value":"\nSimilar Questions:\n\"Palindrome Linked List\": ","position":{"start":{"line":1422,"column":42,"offset":47765},"end":{"line":1424,"column":27,"offset":47811}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/palindrome-linked-list"},"children":[{"type":"text","value":"https://leetcode.com/problems/palindrome-linked-list","position":{"start":{"line":1424,"column":27,"offset":47811},"end":{"line":1424,"column":79,"offset":47863}}}],"position":{"start":{"line":1424,"column":27,"offset":47811},"end":{"line":1424,"column":79,"offset":47863}}},{"type":"text","value":"\n\"Valid Palindrome II\": ","position":{"start":{"line":1424,"column":79,"offset":47863},"end":{"line":1425,"column":24,"offset":47887}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/valid-palindrome-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/valid-palindrome-ii","position":{"start":{"line":1425,"column":24,"offset":47887},"end":{"line":1425,"column":73,"offset":47936}}}],"position":{"start":{"line":1425,"column":24,"offset":47887},"end":{"line":1425,"column":73,"offset":47936}}}],"position":{"start":{"line":1419,"column":1,"offset":47637},"end":{"line":1425,"column":73,"offset":47936}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1427,"column":1,"offset":47938},"end":{"line":1427,"column":4,"offset":47941}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#125-valid-palindromehttpsleetcodecomproblemsvalid-palindromedescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1429,"column":2,"offset":47944},"end":{"line":1429,"column":142,"offset":48084}}}],"position":{"start":{"line":1429,"column":1,"offset":47943},"end":{"line":1429,"column":217,"offset":48159}}}],"position":{"start":{"line":1429,"column":1,"offset":47943},"end":{"line":1429,"column":217,"offset":48159}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1431,"column":4,"offset":48164},"end":{"line":1431,"column":6,"offset":48166}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/valid-palindrome/description/"},"children":[{"type":"text","value":"125. Valid Palindrome","position":{"start":{"line":1431,"column":7,"offset":48167},"end":{"line":1431,"column":28,"offset":48188}}}],"position":{"start":{"line":1431,"column":6,"offset":48166},"end":{"line":1431,"column":90,"offset":48250}}}],"position":{"start":{"line":1431,"column":1,"offset":48161},"end":{"line":1431,"column":90,"offset":48250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1433,"column":5,"offset":48256},"end":{"line":1433,"column":13,"offset":48264}}}],"position":{"start":{"line":1433,"column":1,"offset":48252},"end":{"line":1433,"column":13,"offset":48264}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.","position":{"start":{"line":1435,"column":1,"offset":48266},"end":{"line":1435,"column":110,"offset":48375}}}],"position":{"start":{"line":1435,"column":1,"offset":48266},"end":{"line":1435,"column":110,"offset":48375}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1437,"column":3,"offset":48379},"end":{"line":1437,"column":8,"offset":48384}}}],"position":{"start":{"line":1437,"column":1,"offset":48377},"end":{"line":1437,"column":10,"offset":48386}}},{"type":"text","value":" For the purpose of this problem, we define empty string as valid palindrome.","position":{"start":{"line":1437,"column":10,"offset":48386},"end":{"line":1437,"column":87,"offset":48463}}}],"position":{"start":{"line":1437,"column":1,"offset":48377},"end":{"line":1437,"column":87,"offset":48463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1439,"column":3,"offset":48467},"end":{"line":1439,"column":13,"offset":48477}}}],"position":{"start":{"line":1439,"column":1,"offset":48465},"end":{"line":1439,"column":15,"offset":48479}}}],"position":{"start":{"line":1439,"column":1,"offset":48465},"end":{"line":1439,"column":15,"offset":48479}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: \"A man, a plan, a canal: Panama\"\nOutput: true\n"}],"position":{"start":{"line":1441,"column":1,"offset":48481},"end":{"line":1445,"column":4,"offset":48542}}}],"position":{"start":{"line":1441,"column":1,"offset":48481},"end":{"line":1445,"column":4,"offset":48542}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1447,"column":3,"offset":48546},"end":{"line":1447,"column":13,"offset":48556}}}],"position":{"start":{"line":1447,"column":1,"offset":48544},"end":{"line":1447,"column":15,"offset":48558}}}],"position":{"start":{"line":1447,"column":1,"offset":48544},"end":{"line":1447,"column":15,"offset":48558}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: \"race a car\"\nOutput: false\n"}],"position":{"start":{"line":1449,"column":1,"offset":48560},"end":{"line":1453,"column":4,"offset":48602}}}],"position":{"start":{"line":1449,"column":1,"offset":48560},"end":{"line":1453,"column":4,"offset":48602}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1455,"column":5,"offset":48608},"end":{"line":1455,"column":14,"offset":48617}}}],"position":{"start":{"line":1455,"column":1,"offset":48604},"end":{"line":1455,"column":14,"offset":48617}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"ONE","position":{"start":{"line":1457,"column":6,"offset":48624},"end":{"line":1457,"column":9,"offset":48627}}}],"position":{"start":{"line":1457,"column":1,"offset":48619},"end":{"line":1457,"column":9,"offset":48627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.toLowerCase().split(/[^a-z0-9]*/);\n    return clean.join('') === clean.reverse().join('');\n};\n"}],"position":{"start":{"line":1459,"column":1,"offset":48629},"end":{"line":1468,"column":4,"offset":48836}}}],"position":{"start":{"line":1459,"column":1,"offset":48629},"end":{"line":1468,"column":4,"offset":48836}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"TWO","position":{"start":{"line":1470,"column":6,"offset":48843},"end":{"line":1470,"column":9,"offset":48846}}}],"position":{"start":{"line":1470,"column":1,"offset":48838},"end":{"line":1470,"column":9,"offset":48846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Remove non-alphanumeric characters then compare.","position":{"start":{"line":1472,"column":1,"offset":48848},"end":{"line":1472,"column":49,"offset":48896}}}],"position":{"start":{"line":1472,"column":1,"offset":48848},"end":{"line":1472,"column":49,"offset":48896}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    for (let i = 0, j = clean.length - 1; i < j; i++, j--) {\n        if (clean[i] !== clean[j]) {\n            return false;\n        }\n    }\n    return true;\n};\n"}],"position":{"start":{"line":1474,"column":1,"offset":48898},"end":{"line":1488,"column":4,"offset":49215}}}],"position":{"start":{"line":1474,"column":1,"offset":48898},"end":{"line":1488,"column":4,"offset":49215}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"THREE","position":{"start":{"line":1490,"column":6,"offset":49222},"end":{"line":1490,"column":11,"offset":49227}}}],"position":{"start":{"line":1490,"column":1,"offset":49217},"end":{"line":1490,"column":11,"offset":49227}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compare the char codes.","position":{"start":{"line":1492,"column":1,"offset":49229},"end":{"line":1492,"column":24,"offset":49252}}}],"position":{"start":{"line":1492,"column":1,"offset":49229},"end":{"line":1492,"column":24,"offset":49252}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    for (let i = 0, j = s.length - 1; i < j; i++, j--) {\n        let left = s.charCodeAt(i);\n        while (i < j && (left < 48 || (left > 57 && left < 65) || (left > 90 && left < 97) || left > 122)) {\n            left = s.charCodeAt(++i);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (left >= 65 && left <= 90) {\n            left += 32;\n        }\n\n        let right = s.charCodeAt(j);\n        while (i < j && (right < 48 || (right > 57 && right < 65) || (right > 90 && right < 97) || right > 122)) {\n            right = s.charCodeAt(--j);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (right >= 65 && right <= 90) {\n            right += 32;\n        }\n\n        if (left !== right) {\n            return false;\n        }\n    }\n\n    return true;\n};\n"}],"position":{"start":{"line":1494,"column":1,"offset":49254},"end":{"line":1530,"column":4,"offset":50158}}}],"position":{"start":{"line":1494,"column":1,"offset":49254},"end":{"line":1530,"column":4,"offset":50158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1532,"column":1,"offset":50160},"end":{"line":1532,"column":4,"offset":50163}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1534,"column":1,"offset":50165},"end":{"line":1536,"column":10,"offset":50207}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1536,"column":10,"offset":50207},"end":{"line":1536,"column":40,"offset":50237}}}],"position":{"start":{"line":1536,"column":10,"offset":50207},"end":{"line":1536,"column":40,"offset":50237}}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":1536,"column":40,"offset":50237},"end":{"line":1537,"column":11,"offset":50248}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/string"},"children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":1537,"column":11,"offset":50248},"end":{"line":1537,"column":42,"offset":50279}}}],"position":{"start":{"line":1537,"column":11,"offset":50248},"end":{"line":1537,"column":42,"offset":50279}}},{"type":"text","value":"\n\"Backtracking\": ","position":{"start":{"line":1537,"column":42,"offset":50279},"end":{"line":1538,"column":17,"offset":50296}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/backtracking"},"children":[{"type":"text","value":"https://leetcode.com/tag/backtracking","position":{"start":{"line":1538,"column":17,"offset":50296},"end":{"line":1538,"column":54,"offset":50333}}}],"position":{"start":{"line":1538,"column":17,"offset":50296},"end":{"line":1538,"column":54,"offset":50333}}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1538,"column":54,"offset":50333},"end":{"line":1539,"column":25,"offset":50358}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/breadth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1539,"column":25,"offset":50358},"end":{"line":1539,"column":70,"offset":50403}}}],"position":{"start":{"line":1539,"column":25,"offset":50358},"end":{"line":1539,"column":70,"offset":50403}}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder\": ","position":{"start":{"line":1539,"column":70,"offset":50403},"end":{"line":1541,"column":16,"offset":50438}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/word-ladder"},"children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder","position":{"start":{"line":1541,"column":16,"offset":50438},"end":{"line":1541,"column":57,"offset":50479}}}],"position":{"start":{"line":1541,"column":16,"offset":50438},"end":{"line":1541,"column":57,"offset":50479}}}],"position":{"start":{"line":1534,"column":1,"offset":50165},"end":{"line":1541,"column":57,"offset":50479}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1543,"column":1,"offset":50481},"end":{"line":1543,"column":4,"offset":50484}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#126-word-ladder-iihttpsleetcodecomproblemsword-ladder-iidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1545,"column":2,"offset":50487},"end":{"line":1545,"column":142,"offset":50627}}}],"position":{"start":{"line":1545,"column":1,"offset":50486},"end":{"line":1545,"column":213,"offset":50698}}}],"position":{"start":{"line":1545,"column":1,"offset":50486},"end":{"line":1545,"column":213,"offset":50698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1547,"column":4,"offset":50703},"end":{"line":1547,"column":6,"offset":50705}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/word-ladder-ii/description/"},"children":[{"type":"text","value":"126. Word Ladder II","position":{"start":{"line":1547,"column":7,"offset":50706},"end":{"line":1547,"column":26,"offset":50725}}}],"position":{"start":{"line":1547,"column":6,"offset":50705},"end":{"line":1547,"column":86,"offset":50785}}}],"position":{"start":{"line":1547,"column":1,"offset":50700},"end":{"line":1547,"column":86,"offset":50785}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1549,"column":5,"offset":50791},"end":{"line":1549,"column":13,"offset":50799}}}],"position":{"start":{"line":1549,"column":1,"offset":50787},"end":{"line":1549,"column":13,"offset":50799}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1551,"column":1,"offset":50801},"end":{"line":1551,"column":18,"offset":50818}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1551,"column":19,"offset":50819},"end":{"line":1551,"column":28,"offset":50828}}}],"position":{"start":{"line":1551,"column":18,"offset":50818},"end":{"line":1551,"column":29,"offset":50829}}},{"type":"text","value":" and ","position":{"start":{"line":1551,"column":29,"offset":50829},"end":{"line":1551,"column":34,"offset":50834}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1551,"column":35,"offset":50835},"end":{"line":1551,"column":42,"offset":50842}}}],"position":{"start":{"line":1551,"column":34,"offset":50834},"end":{"line":1551,"column":43,"offset":50843}}},{"type":"text","value":"), and a dictionary's word list, find all shortest transformation sequence(s) from ","position":{"start":{"line":1551,"column":43,"offset":50843},"end":{"line":1551,"column":126,"offset":50926}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1551,"column":127,"offset":50927},"end":{"line":1551,"column":136,"offset":50936}}}],"position":{"start":{"line":1551,"column":126,"offset":50926},"end":{"line":1551,"column":137,"offset":50937}}},{"type":"text","value":" to ","position":{"start":{"line":1551,"column":137,"offset":50937},"end":{"line":1551,"column":141,"offset":50941}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1551,"column":142,"offset":50942},"end":{"line":1551,"column":149,"offset":50949}}}],"position":{"start":{"line":1551,"column":141,"offset":50941},"end":{"line":1551,"column":150,"offset":50950}}},{"type":"text","value":", such that:","position":{"start":{"line":1551,"column":150,"offset":50950},"end":{"line":1551,"column":162,"offset":50962}}}],"position":{"start":{"line":1551,"column":1,"offset":50801},"end":{"line":1551,"column":162,"offset":50962}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Only one letter can be changed at a time","position":{"start":{"line":1553,"column":5,"offset":50968},"end":{"line":1553,"column":45,"offset":51008}}}],"position":{"start":{"line":1553,"column":1,"offset":50964},"end":{"line":1553,"column":45,"offset":51008}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1554,"column":5,"offset":51013},"end":{"line":1554,"column":66,"offset":51074}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1554,"column":67,"offset":51075},"end":{"line":1554,"column":76,"offset":51084}}}],"position":{"start":{"line":1554,"column":66,"offset":51074},"end":{"line":1554,"column":77,"offset":51085}}},{"type":"text","value":" is ","position":{"start":{"line":1554,"column":77,"offset":51085},"end":{"line":1554,"column":81,"offset":51089}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":1554,"column":82,"offset":51090},"end":{"line":1554,"column":85,"offset":51093}}}],"position":{"start":{"line":1554,"column":81,"offset":51089},"end":{"line":1554,"column":86,"offset":51094}}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1554,"column":86,"offset":51094},"end":{"line":1554,"column":106,"offset":51114}}}],"position":{"start":{"line":1554,"column":1,"offset":51009},"end":{"line":1554,"column":106,"offset":51114}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1553,"column":1,"offset":50964},"end":{"line":1554,"column":106,"offset":51114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1556,"column":3,"offset":51118},"end":{"line":1556,"column":8,"offset":51123}}}],"position":{"start":{"line":1556,"column":1,"offset":51116},"end":{"line":1556,"column":10,"offset":51125}}}],"position":{"start":{"line":1556,"column":1,"offset":51116},"end":{"line":1556,"column":10,"offset":51125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Return an empty list if there is no such transformation sequence.","position":{"start":{"line":1558,"column":5,"offset":51131},"end":{"line":1558,"column":70,"offset":51196}}}],"position":{"start":{"line":1558,"column":1,"offset":51127},"end":{"line":1558,"column":70,"offset":51196}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1559,"column":5,"offset":51201},"end":{"line":1559,"column":36,"offset":51232}}}],"position":{"start":{"line":1559,"column":1,"offset":51197},"end":{"line":1559,"column":36,"offset":51232}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1560,"column":5,"offset":51237},"end":{"line":1560,"column":60,"offset":51292}}}],"position":{"start":{"line":1560,"column":1,"offset":51233},"end":{"line":1560,"column":60,"offset":51292}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1561,"column":5,"offset":51297},"end":{"line":1561,"column":51,"offset":51343}}}],"position":{"start":{"line":1561,"column":1,"offset":51293},"end":{"line":1561,"column":51,"offset":51343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1562,"column":5,"offset":51348},"end":{"line":1562,"column":20,"offset":51363}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1562,"column":21,"offset":51364},"end":{"line":1562,"column":30,"offset":51373}}}],"position":{"start":{"line":1562,"column":20,"offset":51363},"end":{"line":1562,"column":31,"offset":51374}}},{"type":"text","value":" and ","position":{"start":{"line":1562,"column":31,"offset":51374},"end":{"line":1562,"column":36,"offset":51379}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1562,"column":37,"offset":51380},"end":{"line":1562,"column":44,"offset":51387}}}],"position":{"start":{"line":1562,"column":36,"offset":51379},"end":{"line":1562,"column":45,"offset":51388}}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1562,"column":45,"offset":51388},"end":{"line":1562,"column":81,"offset":51424}}}],"position":{"start":{"line":1562,"column":1,"offset":51344},"end":{"line":1562,"column":81,"offset":51424}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1558,"column":1,"offset":51127},"end":{"line":1562,"column":81,"offset":51424}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1564,"column":3,"offset":51428},"end":{"line":1564,"column":13,"offset":51438}}}],"position":{"start":{"line":1564,"column":1,"offset":51426},"end":{"line":1564,"column":15,"offset":51440}}}],"position":{"start":{"line":1564,"column":1,"offset":51426},"end":{"line":1564,"column":15,"offset":51440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput:\n[\n  [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\n  [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\n]\n"}],"position":{"start":{"line":1566,"column":1,"offset":51442},"end":{"line":1578,"column":4,"offset":51624}}}],"position":{"start":{"line":1566,"column":1,"offset":51442},"end":{"line":1578,"column":4,"offset":51624}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1580,"column":3,"offset":51628},"end":{"line":1580,"column":13,"offset":51638}}}],"position":{"start":{"line":1580,"column":1,"offset":51626},"end":{"line":1580,"column":15,"offset":51640}}}],"position":{"start":{"line":1580,"column":1,"offset":51626},"end":{"line":1580,"column":15,"offset":51640}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: []\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.\n"}],"position":{"start":{"line":1582,"column":1,"offset":51642},"end":{"line":1592,"column":4,"offset":51836}}}],"position":{"start":{"line":1582,"column":1,"offset":51642},"end":{"line":1592,"column":4,"offset":51836}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1594,"column":5,"offset":51842},"end":{"line":1594,"column":14,"offset":51851}}}],"position":{"start":{"line":1594,"column":1,"offset":51838},"end":{"line":1594,"column":14,"offset":51851}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is just like ","position":{"start":{"line":1596,"column":1,"offset":51853},"end":{"line":1596,"column":19,"offset":51871}}},{"type":"element","tagName":"a","properties":{"href":"./127.%20Word%20Ladder"},"children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1596,"column":20,"offset":51872},"end":{"line":1596,"column":36,"offset":51888}}}],"position":{"start":{"line":1596,"column":19,"offset":51871},"end":{"line":1596,"column":61,"offset":51913}}},{"type":"text","value":".","position":{"start":{"line":1596,"column":61,"offset":51913},"end":{"line":1596,"column":62,"offset":51914}}}],"position":{"start":{"line":1596,"column":1,"offset":51853},"end":{"line":1596,"column":62,"offset":51914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The constrain still works, but instead of deleting the words right away, collect them and delete them all when a level ends, so that we can reuse the words (matching different parents in the same level).","position":{"start":{"line":1598,"column":1,"offset":51916},"end":{"line":1598,"column":204,"offset":52119}}}],"position":{"start":{"line":1598,"column":1,"offset":51916},"end":{"line":1598,"column":204,"offset":52119}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The items in the queue are not just words now. Parent nodes are also kept so that we can backtrack the path from the end.","position":{"start":{"line":1600,"column":1,"offset":52121},"end":{"line":1600,"column":122,"offset":52242}}}],"position":{"start":{"line":1600,"column":1,"offset":52121},"end":{"line":1600,"column":122,"offset":52242}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {string[][]}\n */\nfunction findLadders(beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return [];\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    const result = [];\n    let isEndWordFound = false;\n    const levelWords = new Set();\n    const queue = [[beginWord, null], null];\n    while (queue.length > 1) {\n        const node = queue.shift();\n\n        if (node === null) {\n            if (isEndWordFound) {\n                break;\n            }\n            levelWords.forEach((word) => wordList.delete(word));\n            levelWords.clear();\n            queue.push(null);\n            continue;\n        }\n\n        const word = node[0];\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const w = head + ALPHABET[c] + tail;\n                    if (w === endWord) {\n                        const path = [endWord];\n                        for (let n = node; n !== null; n = n[1]) {\n                            path.unshift(n[0]);\n                        }\n                        result.push(path);\n                        isEndWordFound = true;\n                    }\n                    if (wordList.has(w)) {\n                        levelWords.add(w);\n                        queue.push([w, node]);\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}\n"}],"position":{"start":{"line":1602,"column":1,"offset":52244},"end":{"line":1662,"column":4,"offset":53918}}}],"position":{"start":{"line":1602,"column":1,"offset":52244},"end":{"line":1662,"column":4,"offset":53918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1664,"column":1,"offset":53920},"end":{"line":1664,"column":4,"offset":53923}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Breadth-first Search\": ","position":{"start":{"line":1666,"column":1,"offset":53925},"end":{"line":1668,"column":25,"offset":53984}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/breadth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1668,"column":25,"offset":53984},"end":{"line":1668,"column":70,"offset":54029}}}],"position":{"start":{"line":1668,"column":25,"offset":53984},"end":{"line":1668,"column":70,"offset":54029}}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder II\": ","position":{"start":{"line":1668,"column":70,"offset":54029},"end":{"line":1670,"column":19,"offset":54067}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/word-ladder-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder-ii","position":{"start":{"line":1670,"column":19,"offset":54067},"end":{"line":1670,"column":63,"offset":54111}}}],"position":{"start":{"line":1670,"column":19,"offset":54067},"end":{"line":1670,"column":63,"offset":54111}}},{"type":"text","value":"\n\"Minimum Genetic Mutation\": ","position":{"start":{"line":1670,"column":63,"offset":54111},"end":{"line":1671,"column":29,"offset":54140}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/minimum-genetic-mutation"},"children":[{"type":"text","value":"https://leetcode.com/problems/minimum-genetic-mutation","position":{"start":{"line":1671,"column":29,"offset":54140},"end":{"line":1671,"column":83,"offset":54194}}}],"position":{"start":{"line":1671,"column":29,"offset":54140},"end":{"line":1671,"column":83,"offset":54194}}}],"position":{"start":{"line":1666,"column":1,"offset":53925},"end":{"line":1671,"column":83,"offset":54194}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1673,"column":1,"offset":54196},"end":{"line":1673,"column":4,"offset":54199}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#127-word-ladderhttpsleetcodecomproblemsword-ladderdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1675,"column":2,"offset":54202},"end":{"line":1675,"column":142,"offset":54342}}}],"position":{"start":{"line":1675,"column":1,"offset":54201},"end":{"line":1675,"column":207,"offset":54407}}}],"position":{"start":{"line":1675,"column":1,"offset":54201},"end":{"line":1675,"column":207,"offset":54407}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1677,"column":4,"offset":54412},"end":{"line":1677,"column":6,"offset":54414}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/word-ladder/description/"},"children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1677,"column":7,"offset":54415},"end":{"line":1677,"column":23,"offset":54431}}}],"position":{"start":{"line":1677,"column":6,"offset":54414},"end":{"line":1677,"column":80,"offset":54488}}}],"position":{"start":{"line":1677,"column":1,"offset":54409},"end":{"line":1677,"column":80,"offset":54488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1679,"column":5,"offset":54494},"end":{"line":1679,"column":13,"offset":54502}}}],"position":{"start":{"line":1679,"column":1,"offset":54490},"end":{"line":1679,"column":13,"offset":54502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1681,"column":1,"offset":54504},"end":{"line":1681,"column":18,"offset":54521}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1681,"column":19,"offset":54522},"end":{"line":1681,"column":28,"offset":54531}}}],"position":{"start":{"line":1681,"column":18,"offset":54521},"end":{"line":1681,"column":29,"offset":54532}}},{"type":"text","value":" and ","position":{"start":{"line":1681,"column":29,"offset":54532},"end":{"line":1681,"column":34,"offset":54537}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1681,"column":35,"offset":54538},"end":{"line":1681,"column":42,"offset":54545}}}],"position":{"start":{"line":1681,"column":34,"offset":54537},"end":{"line":1681,"column":43,"offset":54546}}},{"type":"text","value":"), and a dictionary's word list, find the length of shortest transformation sequence from ","position":{"start":{"line":1681,"column":43,"offset":54546},"end":{"line":1681,"column":133,"offset":54636}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1681,"column":134,"offset":54637},"end":{"line":1681,"column":143,"offset":54646}}}],"position":{"start":{"line":1681,"column":133,"offset":54636},"end":{"line":1681,"column":144,"offset":54647}}},{"type":"text","value":" to ","position":{"start":{"line":1681,"column":144,"offset":54647},"end":{"line":1681,"column":148,"offset":54651}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1681,"column":149,"offset":54652},"end":{"line":1681,"column":156,"offset":54659}}}],"position":{"start":{"line":1681,"column":148,"offset":54651},"end":{"line":1681,"column":157,"offset":54660}}},{"type":"text","value":", such that:","position":{"start":{"line":1681,"column":157,"offset":54660},"end":{"line":1681,"column":169,"offset":54672}}}],"position":{"start":{"line":1681,"column":1,"offset":54504},"end":{"line":1681,"column":169,"offset":54672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Only one letter can be changed at a time.","position":{"start":{"line":1683,"column":5,"offset":54678},"end":{"line":1683,"column":46,"offset":54719}}}],"position":{"start":{"line":1683,"column":1,"offset":54674},"end":{"line":1683,"column":46,"offset":54719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1684,"column":5,"offset":54724},"end":{"line":1684,"column":66,"offset":54785}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1684,"column":67,"offset":54786},"end":{"line":1684,"column":76,"offset":54795}}}],"position":{"start":{"line":1684,"column":66,"offset":54785},"end":{"line":1684,"column":77,"offset":54796}}},{"type":"text","value":" is ","position":{"start":{"line":1684,"column":77,"offset":54796},"end":{"line":1684,"column":81,"offset":54800}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":1684,"column":82,"offset":54801},"end":{"line":1684,"column":85,"offset":54804}}}],"position":{"start":{"line":1684,"column":81,"offset":54800},"end":{"line":1684,"column":86,"offset":54805}}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1684,"column":86,"offset":54805},"end":{"line":1684,"column":106,"offset":54825}}}],"position":{"start":{"line":1684,"column":1,"offset":54720},"end":{"line":1684,"column":106,"offset":54825}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1683,"column":1,"offset":54674},"end":{"line":1684,"column":106,"offset":54825}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1686,"column":3,"offset":54829},"end":{"line":1686,"column":8,"offset":54834}}}],"position":{"start":{"line":1686,"column":1,"offset":54827},"end":{"line":1686,"column":10,"offset":54836}}}],"position":{"start":{"line":1686,"column":1,"offset":54827},"end":{"line":1686,"column":10,"offset":54836}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Return 0 if there is no such transformation sequence.","position":{"start":{"line":1688,"column":5,"offset":54842},"end":{"line":1688,"column":58,"offset":54895}}}],"position":{"start":{"line":1688,"column":1,"offset":54838},"end":{"line":1688,"column":58,"offset":54895}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1689,"column":5,"offset":54900},"end":{"line":1689,"column":36,"offset":54931}}}],"position":{"start":{"line":1689,"column":1,"offset":54896},"end":{"line":1689,"column":36,"offset":54931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1690,"column":5,"offset":54936},"end":{"line":1690,"column":60,"offset":54991}}}],"position":{"start":{"line":1690,"column":1,"offset":54932},"end":{"line":1690,"column":60,"offset":54991}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1691,"column":5,"offset":54996},"end":{"line":1691,"column":51,"offset":55042}}}],"position":{"start":{"line":1691,"column":1,"offset":54992},"end":{"line":1691,"column":51,"offset":55042}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1692,"column":5,"offset":55047},"end":{"line":1692,"column":20,"offset":55062}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1692,"column":21,"offset":55063},"end":{"line":1692,"column":30,"offset":55072}}}],"position":{"start":{"line":1692,"column":20,"offset":55062},"end":{"line":1692,"column":31,"offset":55073}}},{"type":"text","value":" and ","position":{"start":{"line":1692,"column":31,"offset":55073},"end":{"line":1692,"column":36,"offset":55078}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1692,"column":37,"offset":55079},"end":{"line":1692,"column":44,"offset":55086}}}],"position":{"start":{"line":1692,"column":36,"offset":55078},"end":{"line":1692,"column":45,"offset":55087}}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1692,"column":45,"offset":55087},"end":{"line":1692,"column":81,"offset":55123}}}],"position":{"start":{"line":1692,"column":1,"offset":55043},"end":{"line":1692,"column":81,"offset":55123}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1688,"column":1,"offset":54838},"end":{"line":1692,"column":81,"offset":55123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1694,"column":3,"offset":55127},"end":{"line":1694,"column":13,"offset":55137}}}],"position":{"start":{"line":1694,"column":1,"offset":55125},"end":{"line":1694,"column":15,"offset":55139}}}],"position":{"start":{"line":1694,"column":1,"offset":55125},"end":{"line":1694,"column":15,"offset":55139}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput: 5\n\nExplanation: As one shortest transformation is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\nreturn its length 5.\n"}],"position":{"start":{"line":1696,"column":1,"offset":55141},"end":{"line":1707,"column":4,"offset":55364}}}],"position":{"start":{"line":1696,"column":1,"offset":55141},"end":{"line":1707,"column":4,"offset":55364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1709,"column":3,"offset":55368},"end":{"line":1709,"column":13,"offset":55378}}}],"position":{"start":{"line":1709,"column":1,"offset":55366},"end":{"line":1709,"column":15,"offset":55380}}}],"position":{"start":{"line":1709,"column":1,"offset":55366},"end":{"line":1709,"column":15,"offset":55380}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: 0\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.\n"}],"position":{"start":{"line":1711,"column":1,"offset":55382},"end":{"line":1721,"column":4,"offset":55575}}}],"position":{"start":{"line":1711,"column":1,"offset":55382},"end":{"line":1721,"column":4,"offset":55575}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1723,"column":5,"offset":55581},"end":{"line":1723,"column":14,"offset":55590}}}],"position":{"start":{"line":1723,"column":1,"offset":55577},"end":{"line":1723,"column":14,"offset":55590}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Think of it as building a tree, with ","position":{"start":{"line":1725,"column":1,"offset":55592},"end":{"line":1725,"column":38,"offset":55629}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"begineWord"}],"position":{"start":{"line":1725,"column":38,"offset":55629},"end":{"line":1725,"column":50,"offset":55641}}},{"type":"text","value":" as root and ","position":{"start":{"line":1725,"column":50,"offset":55641},"end":{"line":1725,"column":63,"offset":55654}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"endWord"}],"position":{"start":{"line":1725,"column":63,"offset":55654},"end":{"line":1725,"column":72,"offset":55663}}},{"type":"text","value":" as leaves.","position":{"start":{"line":1725,"column":72,"offset":55663},"end":{"line":1725,"column":83,"offset":55674}}}],"position":{"start":{"line":1725,"column":1,"offset":55592},"end":{"line":1725,"column":83,"offset":55674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The best way control the depth (length of the shortest transformations) while building the tree is level-order traversal (BFS).","position":{"start":{"line":1727,"column":1,"offset":55676},"end":{"line":1727,"column":128,"offset":55803}}}],"position":{"start":{"line":1727,"column":1,"offset":55676},"end":{"line":1727,"column":128,"offset":55803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We do not actually build the tree because it is expensive (astronomical if the list is huge). In fact, we only need one shortest path. So just like Dijkstra's algorithm, we say that the first time (level ","position":{"start":{"line":1729,"column":1,"offset":55805},"end":{"line":1729,"column":205,"offset":56009}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i"}],"position":{"start":{"line":1729,"column":205,"offset":56009},"end":{"line":1729,"column":208,"offset":56012}}},{"type":"text","value":") we encounter a word that turns out to be in a shortest path, then level ","position":{"start":{"line":1729,"column":208,"offset":56012},"end":{"line":1729,"column":282,"offset":56086}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i"}],"position":{"start":{"line":1729,"column":282,"offset":56086},"end":{"line":1729,"column":285,"offset":56089}}},{"type":"text","value":" is the lowest level this word could ever get. We can safely remove it from the ","position":{"start":{"line":1729,"column":285,"offset":56089},"end":{"line":1729,"column":365,"offset":56169}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wordList"}],"position":{"start":{"line":1729,"column":365,"offset":56169},"end":{"line":1729,"column":375,"offset":56179}}},{"type":"text","value":".","position":{"start":{"line":1729,"column":375,"offset":56179},"end":{"line":1729,"column":376,"offset":56180}}}],"position":{"start":{"line":1729,"column":1,"offset":55805},"end":{"line":1729,"column":376,"offset":56180}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To find all the next words, instead of filtering the ","position":{"start":{"line":1731,"column":1,"offset":56182},"end":{"line":1731,"column":54,"offset":56235}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wordList"}],"position":{"start":{"line":1731,"column":54,"offset":56235},"end":{"line":1731,"column":64,"offset":56245}}},{"type":"text","value":", enumerate all 25 possible words and check if in ","position":{"start":{"line":1731,"column":64,"offset":56245},"end":{"line":1731,"column":114,"offset":56295}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wordList"}],"position":{"start":{"line":1731,"column":114,"offset":56295},"end":{"line":1731,"column":124,"offset":56305}}},{"type":"text","value":".","position":{"start":{"line":1731,"column":124,"offset":56305},"end":{"line":1731,"column":125,"offset":56306}}}],"position":{"start":{"line":1731,"column":1,"offset":56182},"end":{"line":1731,"column":125,"offset":56306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {number}\n */\nlet ladderLength = function (beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return 0;\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    let level = 1;\n    const queue = [beginWord, null];\n    while (queue.length > 1) {\n        const word = queue.shift();\n\n        if (word === null) {\n            level++;\n            queue.push(null);\n            continue;\n        }\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const word = head + ALPHABET[c] + tail;\n                    if (word === endWord) {\n                        return level + 1;\n                    }\n                    if (wordList.delete(word)) {\n                        queue.push(word);\n                    }\n                }\n            }\n        }\n    }\n\n    return 0;\n};\n"}],"position":{"start":{"line":1733,"column":1,"offset":56308},"end":{"line":1779,"column":4,"offset":57452}}}],"position":{"start":{"line":1733,"column":1,"offset":56308},"end":{"line":1779,"column":4,"offset":57452}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1781,"column":1,"offset":57454},"end":{"line":1781,"column":4,"offset":57457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1783,"column":1,"offset":57459},"end":{"line":1785,"column":10,"offset":57501}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1785,"column":10,"offset":57501},"end":{"line":1785,"column":40,"offset":57531}}}],"position":{"start":{"line":1785,"column":10,"offset":57501},"end":{"line":1785,"column":40,"offset":57531}}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1785,"column":40,"offset":57531},"end":{"line":1786,"column":15,"offset":57546}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/union-find"},"children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1786,"column":15,"offset":57546},"end":{"line":1786,"column":50,"offset":57581}}}],"position":{"start":{"line":1786,"column":15,"offset":57546},"end":{"line":1786,"column":50,"offset":57581}}},{"type":"text","value":"\nSimilar Questions:\n\"Binary Tree Longest Consecutive Sequence\": ","position":{"start":{"line":1786,"column":50,"offset":57581},"end":{"line":1788,"column":45,"offset":57645}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence"},"children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","position":{"start":{"line":1788,"column":45,"offset":57645},"end":{"line":1788,"column":115,"offset":57715}}}],"position":{"start":{"line":1788,"column":45,"offset":57645},"end":{"line":1788,"column":115,"offset":57715}}}],"position":{"start":{"line":1783,"column":1,"offset":57459},"end":{"line":1788,"column":115,"offset":57715}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1790,"column":1,"offset":57717},"end":{"line":1790,"column":4,"offset":57720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#128-longest-consecutive-sequencehttpsleetcodecomproblemslongest-consecutive-sequencedescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1792,"column":2,"offset":57723},"end":{"line":1792,"column":142,"offset":57863}}}],"position":{"start":{"line":1792,"column":1,"offset":57722},"end":{"line":1792,"column":241,"offset":57962}}}],"position":{"start":{"line":1792,"column":1,"offset":57722},"end":{"line":1792,"column":241,"offset":57962}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1794,"column":4,"offset":57967},"end":{"line":1794,"column":6,"offset":57969}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/longest-consecutive-sequence/description/"},"children":[{"type":"text","value":"128. Longest Consecutive Sequence","position":{"start":{"line":1794,"column":7,"offset":57970},"end":{"line":1794,"column":40,"offset":58003}}}],"position":{"start":{"line":1794,"column":6,"offset":57969},"end":{"line":1794,"column":114,"offset":58077}}}],"position":{"start":{"line":1794,"column":1,"offset":57964},"end":{"line":1794,"column":114,"offset":58077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1796,"column":5,"offset":58083},"end":{"line":1796,"column":13,"offset":58091}}}],"position":{"start":{"line":1796,"column":1,"offset":58079},"end":{"line":1796,"column":13,"offset":58091}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given an unsorted array of integers, find the length of the longest consecutive elements sequence.","position":{"start":{"line":1798,"column":1,"offset":58093},"end":{"line":1798,"column":99,"offset":58191}}}],"position":{"start":{"line":1798,"column":1,"offset":58093},"end":{"line":1798,"column":99,"offset":58191}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Your algorithm should run in O(","position":{"start":{"line":1800,"column":1,"offset":58193},"end":{"line":1800,"column":32,"offset":58224}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"n","position":{"start":{"line":1800,"column":33,"offset":58225},"end":{"line":1800,"column":34,"offset":58226}}}],"position":{"start":{"line":1800,"column":32,"offset":58224},"end":{"line":1800,"column":35,"offset":58227}}},{"type":"text","value":") complexity.","position":{"start":{"line":1800,"column":35,"offset":58227},"end":{"line":1800,"column":48,"offset":58240}}}],"position":{"start":{"line":1800,"column":1,"offset":58193},"end":{"line":1800,"column":48,"offset":58240}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1802,"column":3,"offset":58244},"end":{"line":1802,"column":11,"offset":58252}}}],"position":{"start":{"line":1802,"column":1,"offset":58242},"end":{"line":1802,"column":13,"offset":58254}}}],"position":{"start":{"line":1802,"column":1,"offset":58242},"end":{"line":1802,"column":13,"offset":58254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [100, 4, 200, 1, 3, 2]\nOutput: 4\nExplanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.\n"}],"position":{"start":{"line":1804,"column":1,"offset":58256},"end":{"line":1809,"column":4,"offset":58403}}}],"position":{"start":{"line":1804,"column":1,"offset":58256},"end":{"line":1809,"column":4,"offset":58403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1811,"column":5,"offset":58409},"end":{"line":1811,"column":14,"offset":58418}}}],"position":{"start":{"line":1811,"column":1,"offset":58405},"end":{"line":1811,"column":14,"offset":58418}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Build a Set from the list. Pick a number, find all it's adjacent numbers that are also in the Set. Count them and remove them all from the Set. Repeat until the Set is empty. Time complexity O(n + n) = O(n).","position":{"start":{"line":1813,"column":1,"offset":58420},"end":{"line":1813,"column":208,"offset":58627}}}],"position":{"start":{"line":1813,"column":1,"offset":58420},"end":{"line":1813,"column":208,"offset":58627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {number[]} nums\n * @return {number}\n */\nlet longestConsecutive = function (nums) {\n    const numSet = new Set(nums);\n    let maxCount = 0;\n    while (numSet.size > 0) {\n        const num = numSet.values().next().value;\n        numSet.delete(num);\n        let count = 1;\n        for (let n = num + 1; numSet.delete(n); n++) {\n            count++;\n        }\n        for (let n = num - 1; numSet.delete(n); n--) {\n            count++;\n        }\n        if (count > maxCount) {\n            maxCount = count;\n        }\n    }\n    return maxCount;\n};\n"}],"position":{"start":{"line":1815,"column":1,"offset":58629},"end":{"line":1839,"column":4,"offset":59196}}}],"position":{"start":{"line":1815,"column":1,"offset":58629},"end":{"line":1839,"column":4,"offset":59196}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1841,"column":1,"offset":59198},"end":{"line":1841,"column":4,"offset":59201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":1843,"column":1,"offset":59203},"end":{"line":1845,"column":9,"offset":59246}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/tree"},"children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":1845,"column":9,"offset":59246},"end":{"line":1845,"column":38,"offset":59275}}}],"position":{"start":{"line":1845,"column":9,"offset":59246},"end":{"line":1845,"column":38,"offset":59275}}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":1845,"column":38,"offset":59275},"end":{"line":1846,"column":23,"offset":59298}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1846,"column":23,"offset":59298},"end":{"line":1846,"column":66,"offset":59341}}}],"position":{"start":{"line":1846,"column":23,"offset":59298},"end":{"line":1846,"column":66,"offset":59341}}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":1846,"column":66,"offset":59341},"end":{"line":1848,"column":13,"offset":59373}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/path-sum"},"children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":1848,"column":13,"offset":59373},"end":{"line":1848,"column":51,"offset":59411}}}],"position":{"start":{"line":1848,"column":13,"offset":59373},"end":{"line":1848,"column":51,"offset":59411}}},{"type":"text","value":"\n\"Binary Tree Maximum Path Sum\": ","position":{"start":{"line":1848,"column":51,"offset":59411},"end":{"line":1849,"column":33,"offset":59444}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/binary-tree-maximum-path-sum"},"children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-maximum-path-sum","position":{"start":{"line":1849,"column":33,"offset":59444},"end":{"line":1849,"column":91,"offset":59502}}}],"position":{"start":{"line":1849,"column":33,"offset":59444},"end":{"line":1849,"column":91,"offset":59502}}}],"position":{"start":{"line":1843,"column":1,"offset":59203},"end":{"line":1849,"column":91,"offset":59502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1851,"column":1,"offset":59504},"end":{"line":1851,"column":4,"offset":59507}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#129-sum-root-to-leaf-numbershttpsleetcodecomproblemssum-root-to-leaf-numbersdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1853,"column":2,"offset":59510},"end":{"line":1853,"column":142,"offset":59650}}}],"position":{"start":{"line":1853,"column":1,"offset":59509},"end":{"line":1853,"column":233,"offset":59741}}}],"position":{"start":{"line":1853,"column":1,"offset":59509},"end":{"line":1853,"column":233,"offset":59741}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1855,"column":4,"offset":59746},"end":{"line":1855,"column":6,"offset":59748}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/sum-root-to-leaf-numbers/description/"},"children":[{"type":"text","value":"129. Sum Root to Leaf Numbers","position":{"start":{"line":1855,"column":7,"offset":59749},"end":{"line":1855,"column":36,"offset":59778}}}],"position":{"start":{"line":1855,"column":6,"offset":59748},"end":{"line":1855,"column":106,"offset":59848}}}],"position":{"start":{"line":1855,"column":1,"offset":59743},"end":{"line":1855,"column":106,"offset":59848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1857,"column":5,"offset":59854},"end":{"line":1857,"column":13,"offset":59862}}}],"position":{"start":{"line":1857,"column":1,"offset":59850},"end":{"line":1857,"column":13,"offset":59862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a binary tree containing digits from ","position":{"start":{"line":1859,"column":1,"offset":59864},"end":{"line":1859,"column":44,"offset":59907}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0-9"}],"position":{"start":{"line":1859,"column":44,"offset":59907},"end":{"line":1859,"column":49,"offset":59912}}},{"type":"text","value":" only, each root-to-leaf path could represent a number.","position":{"start":{"line":1859,"column":49,"offset":59912},"end":{"line":1859,"column":104,"offset":59967}}}],"position":{"start":{"line":1859,"column":1,"offset":59864},"end":{"line":1859,"column":104,"offset":59967}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An example is the root-to-leaf path ","position":{"start":{"line":1861,"column":1,"offset":59969},"end":{"line":1861,"column":37,"offset":60005}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1->2->3"}],"position":{"start":{"line":1861,"column":37,"offset":60005},"end":{"line":1861,"column":46,"offset":60014}}},{"type":"text","value":" which represents the number ","position":{"start":{"line":1861,"column":46,"offset":60014},"end":{"line":1861,"column":75,"offset":60043}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"123"}],"position":{"start":{"line":1861,"column":75,"offset":60043},"end":{"line":1861,"column":80,"offset":60048}}},{"type":"text","value":".","position":{"start":{"line":1861,"column":80,"offset":60048},"end":{"line":1861,"column":81,"offset":60049}}}],"position":{"start":{"line":1861,"column":1,"offset":59969},"end":{"line":1861,"column":81,"offset":60049}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Find the total sum of all root-to-leaf numbers.","position":{"start":{"line":1863,"column":1,"offset":60051},"end":{"line":1863,"column":48,"offset":60098}}}],"position":{"start":{"line":1863,"column":1,"offset":60051},"end":{"line":1863,"column":48,"offset":60098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1865,"column":3,"offset":60102},"end":{"line":1865,"column":8,"offset":60107}}}],"position":{"start":{"line":1865,"column":1,"offset":60100},"end":{"line":1865,"column":10,"offset":60109}}},{"type":"text","value":" A leaf is a node with no children.","position":{"start":{"line":1865,"column":10,"offset":60109},"end":{"line":1865,"column":45,"offset":60144}}}],"position":{"start":{"line":1865,"column":1,"offset":60100},"end":{"line":1865,"column":45,"offset":60144}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1867,"column":3,"offset":60148},"end":{"line":1867,"column":11,"offset":60156}}}],"position":{"start":{"line":1867,"column":1,"offset":60146},"end":{"line":1867,"column":13,"offset":60158}}}],"position":{"start":{"line":1867,"column":1,"offset":60146},"end":{"line":1867,"column":13,"offset":60158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [1,2,3]\n    1\n   / \\\n  2   3\nOutput: 25\nExplanation:\nThe root-to-leaf path 1->2 represents the number 12.\nThe root-to-leaf path 1->3 represents the number 13.\nTherefore, sum = 12 + 13 = 25.\n"}],"position":{"start":{"line":1869,"column":1,"offset":60160},"end":{"line":1877,"column":35,"offset":60392}}}],"position":{"start":{"line":1869,"column":1,"offset":60160},"end":{"line":1877,"column":35,"offset":60392}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1879,"column":3,"offset":60396},"end":{"line":1879,"column":13,"offset":60406}}}],"position":{"start":{"line":1879,"column":1,"offset":60394},"end":{"line":1879,"column":15,"offset":60408}}}],"position":{"start":{"line":1879,"column":1,"offset":60394},"end":{"line":1879,"column":15,"offset":60408}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [4,9,0,5,1]\n    4\n   / \\\n  9   0\n / \\\n5   1\nOutput: 1026\nExplanation:\nThe root-to-leaf path 4->9->5 represents the number 495.\nThe root-to-leaf path 4->9->1 represents the number 491.\nThe root-to-leaf path 4->0 represents the number 40.\nTherefore, sum = 495 + 491 + 40 = 1026.\n"}],"position":{"start":{"line":1881,"column":1,"offset":60410},"end":{"line":1892,"column":44,"offset":60741}}}],"position":{"start":{"line":1881,"column":1,"offset":60410},"end":{"line":1892,"column":44,"offset":60741}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1894,"column":5,"offset":60747},"end":{"line":1894,"column":14,"offset":60756}}}],"position":{"start":{"line":1894,"column":1,"offset":60743},"end":{"line":1894,"column":14,"offset":60756}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To write a clean solution for this promblem, use ","position":{"start":{"line":1896,"column":1,"offset":60758},"end":{"line":1896,"column":50,"offset":60807}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}],"position":{"start":{"line":1896,"column":50,"offset":60807},"end":{"line":1896,"column":53,"offset":60810}}},{"type":"text","value":" as indicator of leaf node. If all the children get ","position":{"start":{"line":1896,"column":53,"offset":60810},"end":{"line":1896,"column":105,"offset":60862}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}],"position":{"start":{"line":1896,"column":105,"offset":60862},"end":{"line":1896,"column":108,"offset":60865}}},{"type":"text","value":", it is a leaf node, return the sum of current level.","position":{"start":{"line":1896,"column":108,"offset":60865},"end":{"line":1896,"column":161,"offset":60918}}}],"position":{"start":{"line":1896,"column":1,"offset":60758},"end":{"line":1896,"column":161,"offset":60918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet sumNumbers = function (root, sum = 0) {\n    if (!root) {\n        return 0;\n    }\n    sum = sum * 10 + root.val;\n    return sumNumbers(root.left, sum) + sumNumbers(root.right, sum) || sum;\n};\n"}],"position":{"start":{"line":1898,"column":1,"offset":60920},"end":{"line":1917,"column":4,"offset":61318}}}],"position":{"start":{"line":1898,"column":1,"offset":60920},"end":{"line":1917,"column":4,"offset":61318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1919,"column":1,"offset":61320},"end":{"line":1919,"column":4,"offset":61323}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1921,"column":1,"offset":61325},"end":{"line":1923,"column":23,"offset":61382}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1923,"column":23,"offset":61382},"end":{"line":1923,"column":66,"offset":61425}}}],"position":{"start":{"line":1923,"column":23,"offset":61382},"end":{"line":1923,"column":66,"offset":61425}}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1923,"column":66,"offset":61425},"end":{"line":1924,"column":25,"offset":61450}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/breadth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1924,"column":25,"offset":61450},"end":{"line":1924,"column":70,"offset":61495}}}],"position":{"start":{"line":1924,"column":25,"offset":61450},"end":{"line":1924,"column":70,"offset":61495}}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1924,"column":70,"offset":61495},"end":{"line":1925,"column":15,"offset":61510}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/union-find"},"children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1925,"column":15,"offset":61510},"end":{"line":1925,"column":50,"offset":61545}}}],"position":{"start":{"line":1925,"column":15,"offset":61510},"end":{"line":1925,"column":50,"offset":61545}}},{"type":"text","value":"\nSimilar Questions:\n\"Number of Islands\": ","position":{"start":{"line":1925,"column":50,"offset":61545},"end":{"line":1927,"column":22,"offset":61586}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/number-of-islands"},"children":[{"type":"text","value":"https://leetcode.com/problems/number-of-islands","position":{"start":{"line":1927,"column":22,"offset":61586},"end":{"line":1927,"column":69,"offset":61633}}}],"position":{"start":{"line":1927,"column":22,"offset":61586},"end":{"line":1927,"column":69,"offset":61633}}},{"type":"text","value":"\n\"Walls and Gates\": ","position":{"start":{"line":1927,"column":69,"offset":61633},"end":{"line":1928,"column":20,"offset":61653}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/walls-and-gates"},"children":[{"type":"text","value":"https://leetcode.com/problems/walls-and-gates","position":{"start":{"line":1928,"column":20,"offset":61653},"end":{"line":1928,"column":65,"offset":61698}}}],"position":{"start":{"line":1928,"column":20,"offset":61653},"end":{"line":1928,"column":65,"offset":61698}}}],"position":{"start":{"line":1921,"column":1,"offset":61325},"end":{"line":1928,"column":65,"offset":61698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1930,"column":1,"offset":61700},"end":{"line":1930,"column":4,"offset":61703}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#130-surrounded-regionshttpsleetcodecomproblemssurrounded-regionsdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1932,"column":2,"offset":61706},"end":{"line":1932,"column":142,"offset":61846}}}],"position":{"start":{"line":1932,"column":1,"offset":61705},"end":{"line":1932,"column":221,"offset":61925}}}],"position":{"start":{"line":1932,"column":1,"offset":61705},"end":{"line":1932,"column":221,"offset":61925}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1934,"column":4,"offset":61930},"end":{"line":1934,"column":6,"offset":61932}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/surrounded-regions/description/"},"children":[{"type":"text","value":"130. Surrounded Regions","position":{"start":{"line":1934,"column":7,"offset":61933},"end":{"line":1934,"column":30,"offset":61956}}}],"position":{"start":{"line":1934,"column":6,"offset":61932},"end":{"line":1934,"column":94,"offset":62020}}}],"position":{"start":{"line":1934,"column":1,"offset":61927},"end":{"line":1934,"column":94,"offset":62020}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1936,"column":5,"offset":62026},"end":{"line":1936,"column":13,"offset":62034}}}],"position":{"start":{"line":1936,"column":1,"offset":62022},"end":{"line":1936,"column":13,"offset":62034}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a 2D board containing ","position":{"start":{"line":1938,"column":1,"offset":62036},"end":{"line":1938,"column":29,"offset":62064}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1938,"column":29,"offset":62064},"end":{"line":1938,"column":34,"offset":62069}}},{"type":"text","value":" and ","position":{"start":{"line":1938,"column":34,"offset":62069},"end":{"line":1938,"column":39,"offset":62074}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1938,"column":39,"offset":62074},"end":{"line":1938,"column":44,"offset":62079}}},{"type":"text","value":" (","position":{"start":{"line":1938,"column":44,"offset":62079},"end":{"line":1938,"column":46,"offset":62081}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"the letter O","position":{"start":{"line":1938,"column":48,"offset":62083},"end":{"line":1938,"column":60,"offset":62095}}}],"position":{"start":{"line":1938,"column":46,"offset":62081},"end":{"line":1938,"column":62,"offset":62097}}},{"type":"text","value":"), capture all regions surrounded by ","position":{"start":{"line":1938,"column":62,"offset":62097},"end":{"line":1938,"column":99,"offset":62134}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1938,"column":99,"offset":62134},"end":{"line":1938,"column":104,"offset":62139}}},{"type":"text","value":".","position":{"start":{"line":1938,"column":104,"offset":62139},"end":{"line":1938,"column":105,"offset":62140}}}],"position":{"start":{"line":1938,"column":1,"offset":62036},"end":{"line":1938,"column":105,"offset":62140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A region is captured by flipping all ","position":{"start":{"line":1940,"column":1,"offset":62142},"end":{"line":1940,"column":38,"offset":62179}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1940,"column":38,"offset":62179},"end":{"line":1940,"column":43,"offset":62184}}},{"type":"text","value":"s into ","position":{"start":{"line":1940,"column":43,"offset":62184},"end":{"line":1940,"column":50,"offset":62191}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1940,"column":50,"offset":62191},"end":{"line":1940,"column":55,"offset":62196}}},{"type":"text","value":"s in that surrounded region.","position":{"start":{"line":1940,"column":55,"offset":62196},"end":{"line":1940,"column":83,"offset":62224}}}],"position":{"start":{"line":1940,"column":1,"offset":62142},"end":{"line":1940,"column":83,"offset":62224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1942,"column":3,"offset":62228},"end":{"line":1942,"column":11,"offset":62236}}}],"position":{"start":{"line":1942,"column":1,"offset":62226},"end":{"line":1942,"column":13,"offset":62238}}}],"position":{"start":{"line":1942,"column":1,"offset":62226},"end":{"line":1942,"column":13,"offset":62238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"X X X X\nX O O X\nX X O X\nX O X X\n"}],"position":{"start":{"line":1944,"column":1,"offset":62240},"end":{"line":1950,"column":4,"offset":62280}}}],"position":{"start":{"line":1944,"column":1,"offset":62240},"end":{"line":1950,"column":4,"offset":62280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After running your function, the board should be:","position":{"start":{"line":1952,"column":1,"offset":62282},"end":{"line":1952,"column":50,"offset":62331}}}],"position":{"start":{"line":1952,"column":1,"offset":62282},"end":{"line":1952,"column":50,"offset":62331}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"X X X X\nX X X X\nX X X X\nX O X X\n"}],"position":{"start":{"line":1954,"column":1,"offset":62333},"end":{"line":1960,"column":4,"offset":62373}}}],"position":{"start":{"line":1954,"column":1,"offset":62333},"end":{"line":1960,"column":4,"offset":62373}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1962,"column":3,"offset":62377},"end":{"line":1962,"column":15,"offset":62389}}}],"position":{"start":{"line":1962,"column":1,"offset":62375},"end":{"line":1962,"column":17,"offset":62391}}}],"position":{"start":{"line":1962,"column":1,"offset":62375},"end":{"line":1962,"column":17,"offset":62391}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Surrounded regions shouldn't be on the border, which means that any ","position":{"start":{"line":1964,"column":1,"offset":62393},"end":{"line":1964,"column":69,"offset":62461}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1964,"column":69,"offset":62461},"end":{"line":1964,"column":74,"offset":62466}}},{"type":"text","value":" on the border of the board are not flipped to ","position":{"start":{"line":1964,"column":74,"offset":62466},"end":{"line":1964,"column":121,"offset":62513}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1964,"column":121,"offset":62513},"end":{"line":1964,"column":126,"offset":62518}}},{"type":"text","value":". Any ","position":{"start":{"line":1964,"column":126,"offset":62518},"end":{"line":1964,"column":132,"offset":62524}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1964,"column":132,"offset":62524},"end":{"line":1964,"column":137,"offset":62529}}},{"type":"text","value":" that is not on the border and it is not connected to an ","position":{"start":{"line":1964,"column":137,"offset":62529},"end":{"line":1964,"column":194,"offset":62586}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1964,"column":194,"offset":62586},"end":{"line":1964,"column":199,"offset":62591}}},{"type":"text","value":" on the border will be flipped to ","position":{"start":{"line":1964,"column":199,"offset":62591},"end":{"line":1964,"column":233,"offset":62625}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1964,"column":233,"offset":62625},"end":{"line":1964,"column":238,"offset":62630}}},{"type":"text","value":". Two cells are connected if they are adjacent cells connected horizontally or vertically.","position":{"start":{"line":1964,"column":238,"offset":62630},"end":{"line":1964,"column":328,"offset":62720}}}],"position":{"start":{"line":1964,"column":1,"offset":62393},"end":{"line":1964,"column":328,"offset":62720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1966,"column":5,"offset":62726},"end":{"line":1966,"column":14,"offset":62735}}}],"position":{"start":{"line":1966,"column":1,"offset":62722},"end":{"line":1966,"column":14,"offset":62735}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Find all the ","position":{"start":{"line":1968,"column":1,"offset":62737},"end":{"line":1968,"column":14,"offset":62750}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1968,"column":14,"offset":62750},"end":{"line":1968,"column":17,"offset":62753}}},{"type":"text","value":"s that are connected to the ","position":{"start":{"line":1968,"column":17,"offset":62753},"end":{"line":1968,"column":45,"offset":62781}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1968,"column":45,"offset":62781},"end":{"line":1968,"column":48,"offset":62784}}},{"type":"text","value":"s on the border, change them to ","position":{"start":{"line":1968,"column":48,"offset":62784},"end":{"line":1968,"column":80,"offset":62816}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#"}],"position":{"start":{"line":1968,"column":80,"offset":62816},"end":{"line":1968,"column":83,"offset":62819}}},{"type":"text","value":". Then scan the board, change ","position":{"start":{"line":1968,"column":83,"offset":62819},"end":{"line":1968,"column":113,"offset":62849}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1968,"column":113,"offset":62849},"end":{"line":1968,"column":116,"offset":62852}}},{"type":"text","value":" to ","position":{"start":{"line":1968,"column":116,"offset":62852},"end":{"line":1968,"column":120,"offset":62856}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"X"}],"position":{"start":{"line":1968,"column":120,"offset":62856},"end":{"line":1968,"column":123,"offset":62859}}},{"type":"text","value":" and ","position":{"start":{"line":1968,"column":123,"offset":62859},"end":{"line":1968,"column":128,"offset":62864}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#"}],"position":{"start":{"line":1968,"column":128,"offset":62864},"end":{"line":1968,"column":131,"offset":62867}}},{"type":"text","value":" back to ","position":{"start":{"line":1968,"column":131,"offset":62867},"end":{"line":1968,"column":140,"offset":62876}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1968,"column":140,"offset":62876},"end":{"line":1968,"column":143,"offset":62879}}},{"type":"text","value":".","position":{"start":{"line":1968,"column":143,"offset":62879},"end":{"line":1968,"column":144,"offset":62880}}}],"position":{"start":{"line":1968,"column":1,"offset":62737},"end":{"line":1968,"column":144,"offset":62880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The process of finding the connected ","position":{"start":{"line":1970,"column":1,"offset":62882},"end":{"line":1970,"column":38,"offset":62919}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1970,"column":38,"offset":62919},"end":{"line":1970,"column":41,"offset":62922}}},{"type":"text","value":"s is just like tree traversal. ","position":{"start":{"line":1970,"column":41,"offset":62922},"end":{"line":1970,"column":72,"offset":62953}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1970,"column":72,"offset":62953},"end":{"line":1970,"column":75,"offset":62956}}},{"type":"text","value":"s on the border are the same level. Their children are the second level. And so on.","position":{"start":{"line":1970,"column":75,"offset":62956},"end":{"line":1970,"column":158,"offset":63039}}}],"position":{"start":{"line":1970,"column":1,"offset":62882},"end":{"line":1970,"column":158,"offset":63039}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So both BFS and DFS are good. I prefer BFS when pruning is not needed in favor of its readability.","position":{"start":{"line":1972,"column":1,"offset":63041},"end":{"line":1972,"column":99,"offset":63139}}}],"position":{"start":{"line":1972,"column":1,"offset":63041},"end":{"line":1972,"column":99,"offset":63139}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */\nlet solve = function (board) {\n    const height = board.length;\n    if (height <= 1) {\n        return;\n    }\n    const width = board[0].length;\n    if (width <= 1) {\n        return;\n    }\n\n    const rowend = height - 1;\n    const colend = width - 1;\n\n    const queue = [];\n\n    for (let row = 0; row < height; row++) {\n        if (board[row][0] === 'O') {\n            board[row][0] = '#';\n            queue.push(row, 0);\n        }\n        if (board[row][colend] === 'O') {\n            board[row][colend] = '#';\n            queue.push(row, colend);\n        }\n    }\n\n    for (let col = 0; col < width; col++) {\n        if (board[0][col] === 'O') {\n            board[0][col] = '#';\n            queue.push(0, col);\n        }\n        if (board[rowend][col] === 'O') {\n            board[rowend][col] = '#';\n            queue.push(rowend, col);\n        }\n    }\n\n    while (queue.length > 0) {\n        const row = queue.shift();\n        const col = queue.shift();\n        if (row < rowend && board[row + 1][col] === 'O') {\n            board[row + 1][col] = '#';\n            queue.push(row + 1, col);\n        }\n        if (row > 0 && board[row - 1][col] === 'O') {\n            board[row - 1][col] = '#';\n            queue.push(row - 1, col);\n        }\n        if (board[row][col + 1] === 'O') {\n            board[row][col + 1] = '#';\n            queue.push(row, col + 1);\n        }\n        if (board[row][col - 1] === 'O') {\n            board[row][col - 1] = '#';\n            queue.push(row, col - 1);\n        }\n    }\n\n    for (let row = 0; row < height; row++) {\n        for (let col = 0; col < width; col++) {\n            if (board[row][col] === '#') {\n                board[row][col] = 'O';\n            } else if (board[row][col] === 'O') {\n                board[row][col] = 'X';\n            }\n        }\n    }\n};\n"}],"position":{"start":{"line":1974,"column":1,"offset":63141},"end":{"line":2047,"column":4,"offset":65070}}}],"position":{"start":{"line":1974,"column":1,"offset":63141},"end":{"line":2047,"column":4,"offset":65070}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":2049,"column":1,"offset":65072},"end":{"line":2049,"column":4,"offset":65075}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":2051,"column":1,"offset":65077},"end":{"line":2053,"column":23,"offset":65134}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":2053,"column":23,"offset":65134},"end":{"line":2053,"column":66,"offset":65177}}}],"position":{"start":{"line":2053,"column":23,"offset":65134},"end":{"line":2053,"column":66,"offset":65177}}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":2053,"column":66,"offset":65177},"end":{"line":2054,"column":25,"offset":65202}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/breadth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":2054,"column":25,"offset":65202},"end":{"line":2054,"column":70,"offset":65247}}}],"position":{"start":{"line":2054,"column":25,"offset":65202},"end":{"line":2054,"column":70,"offset":65247}}},{"type":"text","value":"\n\"Graph\": ","position":{"start":{"line":2054,"column":70,"offset":65247},"end":{"line":2055,"column":10,"offset":65257}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/graph"},"children":[{"type":"text","value":"https://leetcode.com/tag/graph","position":{"start":{"line":2055,"column":10,"offset":65257},"end":{"line":2055,"column":40,"offset":65287}}}],"position":{"start":{"line":2055,"column":10,"offset":65257},"end":{"line":2055,"column":40,"offset":65287}}},{"type":"text","value":"\nSimilar Questions:\n\"Copy List with Random Pointer\": ","position":{"start":{"line":2055,"column":40,"offset":65287},"end":{"line":2057,"column":34,"offset":65340}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/copy-list-with-random-pointer"},"children":[{"type":"text","value":"https://leetcode.com/problems/copy-list-with-random-pointer","position":{"start":{"line":2057,"column":34,"offset":65340},"end":{"line":2057,"column":93,"offset":65399}}}],"position":{"start":{"line":2057,"column":34,"offset":65340},"end":{"line":2057,"column":93,"offset":65399}}}],"position":{"start":{"line":2051,"column":1,"offset":65077},"end":{"line":2057,"column":93,"offset":65399}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":2059,"column":1,"offset":65401},"end":{"line":2059,"column":4,"offset":65404}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#133-clone-graphhttpsleetcodecomproblemsclone-graphdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":2061,"column":2,"offset":65407},"end":{"line":2061,"column":142,"offset":65547}}}],"position":{"start":{"line":2061,"column":1,"offset":65406},"end":{"line":2061,"column":207,"offset":65612}}}],"position":{"start":{"line":2061,"column":1,"offset":65406},"end":{"line":2061,"column":207,"offset":65612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":2063,"column":4,"offset":65617},"end":{"line":2063,"column":6,"offset":65619}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/clone-graph/description/"},"children":[{"type":"text","value":"133. Clone Graph","position":{"start":{"line":2063,"column":7,"offset":65620},"end":{"line":2063,"column":23,"offset":65636}}}],"position":{"start":{"line":2063,"column":6,"offset":65619},"end":{"line":2063,"column":80,"offset":65693}}}],"position":{"start":{"line":2063,"column":1,"offset":65614},"end":{"line":2063,"column":80,"offset":65693}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":2065,"column":5,"offset":65699},"end":{"line":2065,"column":13,"offset":65707}}}],"position":{"start":{"line":2065,"column":1,"offset":65695},"end":{"line":2065,"column":13,"offset":65707}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given the head of a graph, return a deep copy (clone) of the graph. Each node in the graph contains a ","position":{"start":{"line":2067,"column":1,"offset":65709},"end":{"line":2067,"column":103,"offset":65811}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"label"}],"position":{"start":{"line":2067,"column":103,"offset":65811},"end":{"line":2067,"column":110,"offset":65818}}},{"type":"text","value":" (","position":{"start":{"line":2067,"column":110,"offset":65818},"end":{"line":2067,"column":112,"offset":65820}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"int"}],"position":{"start":{"line":2067,"column":112,"offset":65820},"end":{"line":2067,"column":117,"offset":65825}}},{"type":"text","value":") and a list (","position":{"start":{"line":2067,"column":117,"offset":65825},"end":{"line":2067,"column":131,"offset":65839}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"List[UndirectedGraphNode]"}],"position":{"start":{"line":2067,"column":131,"offset":65839},"end":{"line":2067,"column":158,"offset":65866}}},{"type":"text","value":") of its ","position":{"start":{"line":2067,"column":158,"offset":65866},"end":{"line":2067,"column":167,"offset":65875}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"neighbors"}],"position":{"start":{"line":2067,"column":167,"offset":65875},"end":{"line":2067,"column":178,"offset":65886}}},{"type":"text","value":". There is an edge between the given node and each of the nodes in its neighbors.","position":{"start":{"line":2067,"column":178,"offset":65886},"end":{"line":2067,"column":259,"offset":65967}}}],"position":{"start":{"line":2067,"column":1,"offset":65709},"end":{"line":2067,"column":259,"offset":65967}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"OJ's undirected graph serialization (so you can understand error output):","position":{"start":{"line":2069,"column":1,"offset":65969},"end":{"line":2069,"column":74,"offset":66042}}}],"position":{"start":{"line":2069,"column":1,"offset":65969},"end":{"line":2069,"column":74,"offset":66042}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Nodes are labeled uniquely.","position":{"start":{"line":2071,"column":1,"offset":66044},"end":{"line":2071,"column":28,"offset":66071}}}],"position":{"start":{"line":2071,"column":1,"offset":66044},"end":{"line":2071,"column":28,"offset":66071}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We use ","position":{"start":{"line":2073,"column":1,"offset":66073},"end":{"line":2073,"column":8,"offset":66080}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#"}],"position":{"start":{"line":2073,"column":8,"offset":66080},"end":{"line":2073,"column":11,"offset":66083}}},{"type":"text","value":" as a separator for each node, and ","position":{"start":{"line":2073,"column":11,"offset":66083},"end":{"line":2073,"column":46,"offset":66118}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":","}],"position":{"start":{"line":2073,"column":46,"offset":66118},"end":{"line":2073,"column":49,"offset":66121}}},{"type":"text","value":" as a separator for node label and each neighbor of the node.","position":{"start":{"line":2073,"column":49,"offset":66121},"end":{"line":2073,"column":110,"offset":66182}}}],"position":{"start":{"line":2073,"column":1,"offset":66073},"end":{"line":2073,"column":110,"offset":66182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As an example, consider the serialized graph ","position":{"start":{"line":2075,"column":1,"offset":66184},"end":{"line":2075,"column":46,"offset":66229}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{0,1,2#1,2#2,2}"}],"position":{"start":{"line":2075,"column":46,"offset":66229},"end":{"line":2075,"column":63,"offset":66246}}},{"type":"text","value":".","position":{"start":{"line":2075,"column":63,"offset":66246},"end":{"line":2075,"column":64,"offset":66247}}}],"position":{"start":{"line":2075,"column":1,"offset":66184},"end":{"line":2075,"column":64,"offset":66247}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The graph has a total of three nodes, and therefore contains three parts as separated by ","position":{"start":{"line":2077,"column":1,"offset":66249},"end":{"line":2077,"column":90,"offset":66338}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#"}],"position":{"start":{"line":2077,"column":90,"offset":66338},"end":{"line":2077,"column":93,"offset":66341}}},{"type":"text","value":".","position":{"start":{"line":2077,"column":93,"offset":66341},"end":{"line":2077,"column":94,"offset":66342}}}],"position":{"start":{"line":2077,"column":1,"offset":66249},"end":{"line":2077,"column":94,"offset":66342}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"First node is labeled as ","position":{"start":{"line":2079,"column":5,"offset":66348},"end":{"line":2079,"column":30,"offset":66373}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}],"position":{"start":{"line":2079,"column":30,"offset":66373},"end":{"line":2079,"column":33,"offset":66376}}},{"type":"text","value":". Connect node ","position":{"start":{"line":2079,"column":33,"offset":66376},"end":{"line":2079,"column":48,"offset":66391}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}],"position":{"start":{"line":2079,"column":48,"offset":66391},"end":{"line":2079,"column":51,"offset":66394}}},{"type":"text","value":" to both nodes ","position":{"start":{"line":2079,"column":51,"offset":66394},"end":{"line":2079,"column":66,"offset":66409}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1"}],"position":{"start":{"line":2079,"column":66,"offset":66409},"end":{"line":2079,"column":69,"offset":66412}}},{"type":"text","value":" and ","position":{"start":{"line":2079,"column":69,"offset":66412},"end":{"line":2079,"column":74,"offset":66417}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":2079,"column":74,"offset":66417},"end":{"line":2079,"column":77,"offset":66420}}},{"type":"text","value":".","position":{"start":{"line":2079,"column":77,"offset":66420},"end":{"line":2079,"column":78,"offset":66421}}}],"position":{"start":{"line":2079,"column":1,"offset":66344},"end":{"line":2079,"column":78,"offset":66421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Second node is labeled as ","position":{"start":{"line":2080,"column":5,"offset":66426},"end":{"line":2080,"column":31,"offset":66452}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1"}],"position":{"start":{"line":2080,"column":31,"offset":66452},"end":{"line":2080,"column":34,"offset":66455}}},{"type":"text","value":". Connect node ","position":{"start":{"line":2080,"column":34,"offset":66455},"end":{"line":2080,"column":49,"offset":66470}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1"}],"position":{"start":{"line":2080,"column":49,"offset":66470},"end":{"line":2080,"column":52,"offset":66473}}},{"type":"text","value":" to node ","position":{"start":{"line":2080,"column":52,"offset":66473},"end":{"line":2080,"column":61,"offset":66482}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":2080,"column":61,"offset":66482},"end":{"line":2080,"column":64,"offset":66485}}},{"type":"text","value":".","position":{"start":{"line":2080,"column":64,"offset":66485},"end":{"line":2080,"column":65,"offset":66486}}}],"position":{"start":{"line":2080,"column":1,"offset":66422},"end":{"line":2080,"column":65,"offset":66486}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Third node is labeled as ","position":{"start":{"line":2081,"column":5,"offset":66491},"end":{"line":2081,"column":30,"offset":66516}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":2081,"column":30,"offset":66516},"end":{"line":2081,"column":33,"offset":66519}}},{"type":"text","value":". Connect node ","position":{"start":{"line":2081,"column":33,"offset":66519},"end":{"line":2081,"column":48,"offset":66534}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":2081,"column":48,"offset":66534},"end":{"line":2081,"column":51,"offset":66537}}},{"type":"text","value":" to node ","position":{"start":{"line":2081,"column":51,"offset":66537},"end":{"line":2081,"column":60,"offset":66546}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":2081,"column":60,"offset":66546},"end":{"line":2081,"column":63,"offset":66549}}},{"type":"text","value":" (itself), thus forming a self-cycle.","position":{"start":{"line":2081,"column":63,"offset":66549},"end":{"line":2081,"column":100,"offset":66586}}}],"position":{"start":{"line":2081,"column":1,"offset":66487},"end":{"line":2081,"column":100,"offset":66586}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2079,"column":1,"offset":66344},"end":{"line":2081,"column":100,"offset":66586}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Visually, the graph looks like the following:","position":{"start":{"line":2083,"column":1,"offset":66588},"end":{"line":2083,"column":46,"offset":66633}}}],"position":{"start":{"line":2083,"column":1,"offset":66588},"end":{"line":2083,"column":46,"offset":66633}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"       1\n      / \\\n     /   \\\n    0 --- 2\n         / \\\n         \\_/\n"}],"position":{"start":{"line":2085,"column":1,"offset":66635},"end":{"line":2093,"column":4,"offset":66711}}}],"position":{"start":{"line":2085,"column":1,"offset":66635},"end":{"line":2093,"column":4,"offset":66711}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note","position":{"start":{"line":2095,"column":3,"offset":66715},"end":{"line":2095,"column":7,"offset":66719}}}],"position":{"start":{"line":2095,"column":1,"offset":66713},"end":{"line":2095,"column":9,"offset":66721}}},{"type":"text","value":": The information about the tree serialization is only meant so that you can understand error output if you get a wrong answer. You don't need to understand the serialization to solve the problem.","position":{"start":{"line":2095,"column":9,"offset":66721},"end":{"line":2095,"column":205,"offset":66917}}}],"position":{"start":{"line":2095,"column":1,"offset":66713},"end":{"line":2095,"column":205,"offset":66917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":2097,"column":5,"offset":66923},"end":{"line":2097,"column":14,"offset":66932}}}],"position":{"start":{"line":2097,"column":1,"offset":66919},"end":{"line":2097,"column":14,"offset":66932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"DFS. Cache the visited node before entering the next recursion.","position":{"start":{"line":2099,"column":1,"offset":66934},"end":{"line":2099,"column":64,"offset":66997}}}],"position":{"start":{"line":2099,"column":1,"offset":66934},"end":{"line":2099,"column":64,"offset":66997}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * Definition for undirected graph.\n * function UndirectedGraphNode(label) {\n *     this.label = label;\n *     this.neighbors = [];   // Array of UndirectedGraphNode\n * }\n */\n\n/**\n * @param {UndirectedGraphNode} graph\n * @return {UndirectedGraphNode}\n */\nlet cloneGraph = function (graph) {\n    const cache = {};\n    return _clone(graph);\n\n    function _clone(graph) {\n        if (!graph) {\n            return graph;\n        }\n        const label = graph.label;\n        if (!cache[label]) {\n            cache[label] = new UndirectedGraphNode(label);\n            cache[label].neighbors = graph.neighbors.map(_clone);\n        }\n        return cache[label];\n    }\n};\n"}],"position":{"start":{"line":2101,"column":1,"offset":66999},"end":{"line":2130,"column":4,"offset":67676}}}],"position":{"start":{"line":2101,"column":1,"offset":66999},"end":{"line":2130,"column":4,"offset":67676}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://github.com/everthis/leetcode-js/blob/master/images/binary-tree-upside-down.webp","alt":"alt text","title":"binary-tree-upside-down"},"children":[],"position":{"start":{"line":2132,"column":1,"offset":67678},"end":{"line":2132,"column":127,"offset":67804}}}],"position":{"start":{"line":2132,"column":1,"offset":67678},"end":{"line":2132,"column":127,"offset":67804}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nconst upsideDownBinaryTree = function (root) {\n    let curr = root;\n    let next = null;\n    let temp = null;\n    let prev = null;\n    while (curr !== null) {\n        next = curr.left;\n        curr.left = temp;\n        temp = curr.right;\n        curr.right = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n};\n\n// another\n\nconst upsideDownBinaryTree = function (root) {\n    if (root == null || root.left == null) {\n        return root;\n    }\n    const newRoot = upsideDownBinaryTree(root.left);\n    root.left.left = root.right;\n    root.left.right = root;\n    root.left = null;\n    root.right = null;\n    return newRoot;\n};\n"}],"position":{"start":{"line":2134,"column":1,"offset":67806},"end":{"line":2175,"column":4,"offset":68658}}}],"position":{"start":{"line":2134,"column":1,"offset":67806},"end":{"line":2175,"column":4,"offset":68658}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://github.com/everthis/leetcode-js/blob/master/images/maximum-sum-circular-subarray.png","alt":"alt text","title":"maximum-sum-circular-subarray"},"children":[],"position":{"start":{"line":2177,"column":1,"offset":68660},"end":{"line":2177,"column":138,"offset":68797}}}],"position":{"start":{"line":2177,"column":1,"offset":68660},"end":{"line":2177,"column":138,"offset":68797}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {number[]} A\n * @return {number}\n */\nconst maxSubarraySumCircular = function (A) {\n    let minSum = Infinity,\n        sum = 0,\n        maxSum = -Infinity,\n        curMax = 0,\n        curMin = 0;\n    for (let a of A) {\n        sum += a;\n        curMax = Math.max(curMax + a, a);\n        maxSum = Math.max(maxSum, curMax);\n        curMin = Math.min(curMin + a, a);\n        minSum = Math.min(minSum, curMin);\n    }\n    return maxSum > 0 ? Math.max(maxSum, sum - minSum) : maxSum;\n};\n"}],"position":{"start":{"line":2179,"column":1,"offset":68799},"end":{"line":2199,"column":4,"offset":69302}}}],"position":{"start":{"line":2179,"column":1,"offset":68799},"end":{"line":2199,"column":4,"offset":69302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#balanced-binary-tree---leetcode"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":2201,"column":2,"offset":69305},"end":{"line":2201,"column":142,"offset":69445}}}],"position":{"start":{"line":2201,"column":1,"offset":69304},"end":{"line":2201,"column":177,"offset":69480}}}],"position":{"start":{"line":2201,"column":1,"offset":69304},"end":{"line":2201,"column":177,"offset":69480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"➤ Balanced Binary Tree - LeetCode","position":{"start":{"line":2203,"column":3,"offset":69484},"end":{"line":2203,"column":36,"offset":69517}}}],"position":{"start":{"line":2203,"column":1,"offset":69482},"end":{"line":2203,"column":36,"offset":69517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":2205,"column":3,"offset":69521},"end":{"line":2205,"column":144,"offset":69662}}}],"position":{"start":{"line":2205,"column":3,"offset":69521},"end":{"line":2205,"column":144,"offset":69662}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2205,"column":1,"offset":69519},"end":{"line":2205,"column":144,"offset":69662}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a binary tree, determine if it is height-balanced.","position":{"start":{"line":2207,"column":1,"offset":69664},"end":{"line":2207,"column":57,"offset":69720}}}],"position":{"start":{"line":2207,"column":1,"offset":69664},"end":{"line":2207,"column":57,"offset":69720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as:","position":{"start":{"line":2209,"column":1,"offset":69722},"end":{"line":2209,"column":63,"offset":69784}}}],"position":{"start":{"line":2209,"column":1,"offset":69722},"end":{"line":2209,"column":63,"offset":69784}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"a binary tree in which the left and right subtrees of ","position":{"start":{"line":2211,"column":3,"offset":69788},"end":{"line":2211,"column":57,"offset":69842}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"every","position":{"start":{"line":2211,"column":58,"offset":69843},"end":{"line":2211,"column":63,"offset":69848}}}],"position":{"start":{"line":2211,"column":57,"offset":69842},"end":{"line":2211,"column":64,"offset":69849}}},{"type":"text","value":" node differ in height by no more than 1.","position":{"start":{"line":2211,"column":64,"offset":69849},"end":{"line":2211,"column":105,"offset":69890}}}],"position":{"start":{"line":2211,"column":3,"offset":69788},"end":{"line":2211,"column":105,"offset":69890}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2211,"column":1,"offset":69786},"end":{"line":2211,"column":105,"offset":69890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":2213,"column":3,"offset":69894},"end":{"line":2213,"column":13,"offset":69904}}}],"position":{"start":{"line":2213,"column":1,"offset":69892},"end":{"line":2213,"column":15,"offset":69906}}}],"position":{"start":{"line":2213,"column":1,"offset":69892},"end":{"line":2213,"column":15,"offset":69906}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg","alt":null},"children":[],"position":{"start":{"line":2215,"column":1,"offset":69908},"end":{"line":2215,"column":66,"offset":69973}}}],"position":{"start":{"line":2215,"column":1,"offset":69908},"end":{"line":2215,"column":66,"offset":69973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":2217,"column":3,"offset":69977},"end":{"line":2217,"column":9,"offset":69983}}}],"position":{"start":{"line":2217,"column":1,"offset":69975},"end":{"line":2217,"column":11,"offset":69985}}},{"type":"text","value":" root = ","position":{"start":{"line":2217,"column":11,"offset":69985},"end":{"line":2217,"column":19,"offset":69993}}},{"type":"text","value":"[","position":{"start":{"line":2217,"column":19,"offset":69993},"end":{"line":2217,"column":21,"offset":69995}}},{"type":"text","value":"3,9,20,null,null,15,7]\n","position":{"start":{"line":2217,"column":21,"offset":69995},"end":{"line":2218,"column":1,"offset":70018}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":2218,"column":3,"offset":70020},"end":{"line":2218,"column":10,"offset":70027}}}],"position":{"start":{"line":2218,"column":1,"offset":70018},"end":{"line":2218,"column":12,"offset":70029}}},{"type":"text","value":" true","position":{"start":{"line":2218,"column":12,"offset":70029},"end":{"line":2218,"column":17,"offset":70034}}}],"position":{"start":{"line":2217,"column":1,"offset":69975},"end":{"line":2218,"column":17,"offset":70034}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":2220,"column":3,"offset":70038},"end":{"line":2220,"column":13,"offset":70048}}}],"position":{"start":{"line":2220,"column":1,"offset":70036},"end":{"line":2220,"column":15,"offset":70050}}}],"position":{"start":{"line":2220,"column":1,"offset":70036},"end":{"line":2220,"column":15,"offset":70050}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg","alt":null},"children":[],"position":{"start":{"line":2222,"column":1,"offset":70052},"end":{"line":2222,"column":66,"offset":70117}}}],"position":{"start":{"line":2222,"column":1,"offset":70052},"end":{"line":2222,"column":66,"offset":70117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":2224,"column":3,"offset":70121},"end":{"line":2224,"column":9,"offset":70127}}}],"position":{"start":{"line":2224,"column":1,"offset":70119},"end":{"line":2224,"column":11,"offset":70129}}},{"type":"text","value":" root = ","position":{"start":{"line":2224,"column":11,"offset":70129},"end":{"line":2224,"column":19,"offset":70137}}},{"type":"text","value":"[","position":{"start":{"line":2224,"column":19,"offset":70137},"end":{"line":2224,"column":21,"offset":70139}}},{"type":"text","value":"1,2,2,3,3,null,null,4,4]\n","position":{"start":{"line":2224,"column":21,"offset":70139},"end":{"line":2225,"column":1,"offset":70164}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":2225,"column":3,"offset":70166},"end":{"line":2225,"column":10,"offset":70173}}}],"position":{"start":{"line":2225,"column":1,"offset":70164},"end":{"line":2225,"column":12,"offset":70175}}},{"type":"text","value":" false","position":{"start":{"line":2225,"column":12,"offset":70175},"end":{"line":2225,"column":18,"offset":70181}}}],"position":{"start":{"line":2224,"column":1,"offset":70119},"end":{"line":2225,"column":18,"offset":70181}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 3:","position":{"start":{"line":2227,"column":3,"offset":70185},"end":{"line":2227,"column":13,"offset":70195}}}],"position":{"start":{"line":2227,"column":1,"offset":70183},"end":{"line":2227,"column":15,"offset":70197}}}],"position":{"start":{"line":2227,"column":1,"offset":70183},"end":{"line":2227,"column":15,"offset":70197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":2229,"column":3,"offset":70201},"end":{"line":2229,"column":9,"offset":70207}}}],"position":{"start":{"line":2229,"column":1,"offset":70199},"end":{"line":2229,"column":11,"offset":70209}}},{"type":"text","value":" root = ","position":{"start":{"line":2229,"column":11,"offset":70209},"end":{"line":2229,"column":19,"offset":70217}}},{"type":"text","value":"[","position":{"start":{"line":2229,"column":19,"offset":70217},"end":{"line":2229,"column":21,"offset":70219}}},{"type":"text","value":"]\n","position":{"start":{"line":2229,"column":21,"offset":70219},"end":{"line":2230,"column":1,"offset":70221}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":2230,"column":3,"offset":70223},"end":{"line":2230,"column":10,"offset":70230}}}],"position":{"start":{"line":2230,"column":1,"offset":70221},"end":{"line":2230,"column":12,"offset":70232}}},{"type":"text","value":" true","position":{"start":{"line":2230,"column":12,"offset":70232},"end":{"line":2230,"column":17,"offset":70237}}}],"position":{"start":{"line":2229,"column":1,"offset":70199},"end":{"line":2230,"column":17,"offset":70237}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Constraints:","position":{"start":{"line":2232,"column":3,"offset":70241},"end":{"line":2232,"column":15,"offset":70253}}}],"position":{"start":{"line":2232,"column":1,"offset":70239},"end":{"line":2232,"column":17,"offset":70255}}}],"position":{"start":{"line":2232,"column":1,"offset":70239},"end":{"line":2232,"column":17,"offset":70255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":2234,"column":5,"offset":70261},"end":{"line":2234,"column":53,"offset":70309}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[0, 5000]"}],"position":{"start":{"line":2234,"column":53,"offset":70309},"end":{"line":2234,"column":64,"offset":70320}}},{"type":"text","value":".","position":{"start":{"line":2234,"column":64,"offset":70320},"end":{"line":2234,"column":65,"offset":70321}}}],"position":{"start":{"line":2234,"column":1,"offset":70257},"end":{"line":2234,"column":65,"offset":70321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-104 <= Node.val <= 104"}],"position":{"start":{"line":2235,"column":5,"offset":70326},"end":{"line":2235,"column":30,"offset":70351}}}],"position":{"start":{"line":2235,"column":1,"offset":70322},"end":{"line":2235,"column":30,"offset":70351}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2234,"column":1,"offset":70257},"end":{"line":2235,"column":30,"offset":70351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/balanced-binary-tree/"},"children":[{"type":"text","value":"Source","position":{"start":{"line":2237,"column":2,"offset":70354},"end":{"line":2237,"column":8,"offset":70360}}}],"position":{"start":{"line":2237,"column":1,"offset":70353},"end":{"line":2237,"column":62,"offset":70414}}},{"type":"text","value":"# Convert Sorted Array to Binary Search Tree","position":{"start":{"line":2237,"column":62,"offset":70414},"end":{"line":2237,"column":106,"offset":70458}}}],"position":{"start":{"line":2237,"column":1,"offset":70353},"end":{"line":2237,"column":106,"offset":70458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":2239,"column":3,"offset":70462},"end":{"line":2239,"column":144,"offset":70603}}}],"position":{"start":{"line":2239,"column":3,"offset":70462},"end":{"line":2239,"column":144,"offset":70603}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2239,"column":1,"offset":70460},"end":{"line":2239,"column":144,"offset":70603}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given an array where elements are sorted in ascending order, convert it to a height balanced BST.","position":{"start":{"line":2241,"column":1,"offset":70605},"end":{"line":2241,"column":98,"offset":70702}}}],"position":{"start":{"line":2241,"column":1,"offset":70605},"end":{"line":2241,"column":98,"offset":70702}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of ","position":{"start":{"line":2243,"column":1,"offset":70704},"end":{"line":2243,"column":119,"offset":70822}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"every","position":{"start":{"line":2243,"column":120,"offset":70823},"end":{"line":2243,"column":125,"offset":70828}}}],"position":{"start":{"line":2243,"column":119,"offset":70822},"end":{"line":2243,"column":126,"offset":70829}}},{"type":"text","value":" node never differ by more than 1.","position":{"start":{"line":2243,"column":126,"offset":70829},"end":{"line":2243,"column":160,"offset":70863}}}],"position":{"start":{"line":2243,"column":1,"offset":70704},"end":{"line":2243,"column":160,"offset":70863}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":2245,"column":3,"offset":70867},"end":{"line":2245,"column":11,"offset":70875}}}],"position":{"start":{"line":2245,"column":1,"offset":70865},"end":{"line":2245,"column":13,"offset":70877}}}],"position":{"start":{"line":2245,"column":1,"offset":70865},"end":{"line":2245,"column":13,"offset":70877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given the sorted array: ","position":{"start":{"line":2247,"column":1,"offset":70879},"end":{"line":2247,"column":25,"offset":70903}}},{"type":"text","value":"[","position":{"start":{"line":2247,"column":25,"offset":70903},"end":{"line":2247,"column":27,"offset":70905}}},{"type":"text","value":"-10,-3,0,5,9],","position":{"start":{"line":2247,"column":27,"offset":70905},"end":{"line":2247,"column":41,"offset":70919}}}],"position":{"start":{"line":2247,"column":1,"offset":70879},"end":{"line":2247,"column":41,"offset":70919}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One possible answer is: ","position":{"start":{"line":2249,"column":1,"offset":70921},"end":{"line":2249,"column":25,"offset":70945}}},{"type":"text","value":"[","position":{"start":{"line":2249,"column":25,"offset":70945},"end":{"line":2249,"column":27,"offset":70947}}},{"type":"text","value":"0,-3,9,-10,null,5], which represents the following height balanced BST:","position":{"start":{"line":2249,"column":27,"offset":70947},"end":{"line":2249,"column":98,"offset":71018}}}],"position":{"start":{"line":2249,"column":1,"offset":70921},"end":{"line":2249,"column":98,"offset":71018}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"  0\n / \\\\\n"}],"position":{"start":{"line":2251,"column":1,"offset":71020},"end":{"line":2252,"column":10,"offset":71037}}}],"position":{"start":{"line":2251,"column":1,"offset":71020},"end":{"line":2252,"column":10,"offset":71037}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"-","position":{"start":{"line":2254,"column":1,"offset":71039},"end":{"line":2254,"column":3,"offset":71041}}},{"type":"text","value":"3 9\n/ /\n","position":{"start":{"line":2254,"column":3,"offset":71041},"end":{"line":2256,"column":1,"offset":71049}}},{"type":"text","value":"-","position":{"start":{"line":2256,"column":1,"offset":71049},"end":{"line":2256,"column":3,"offset":71051}}},{"type":"text","value":"10 5","position":{"start":{"line":2256,"column":3,"offset":71051},"end":{"line":2256,"column":7,"offset":71055}}}],"position":{"start":{"line":2254,"column":1,"offset":71039},"end":{"line":2256,"column":7,"offset":71055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/"},"children":[{"type":"text","value":"Source","position":{"start":{"line":2258,"column":2,"offset":71058},"end":{"line":2258,"column":8,"offset":71064}}}],"position":{"start":{"line":2258,"column":1,"offset":71057},"end":{"line":2258,"column":84,"offset":71140}}},{"type":"text","value":"# Delete Node in a BST","position":{"start":{"line":2258,"column":84,"offset":71140},"end":{"line":2258,"column":106,"offset":71162}}}],"position":{"start":{"line":2258,"column":1,"offset":71057},"end":{"line":2258,"column":106,"offset":71162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":2260,"column":3,"offset":71166},"end":{"line":2260,"column":144,"offset":71307}}}],"position":{"start":{"line":2260,"column":3,"offset":71166},"end":{"line":2260,"column":144,"offset":71307}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2260,"column":1,"offset":71164},"end":{"line":2260,"column":144,"offset":71307}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.","position":{"start":{"line":2262,"column":1,"offset":71309},"end":{"line":2262,"column":157,"offset":71465}}}],"position":{"start":{"line":2262,"column":1,"offset":71309},"end":{"line":2262,"column":157,"offset":71465}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Basically, the deletion can be divided into two stages:","position":{"start":{"line":2264,"column":1,"offset":71467},"end":{"line":2264,"column":56,"offset":71522}}}],"position":{"start":{"line":2264,"column":1,"offset":71467},"end":{"line":2264,"column":56,"offset":71522}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Search for a node to remove.","position":{"start":{"line":2266,"column":5,"offset":71528},"end":{"line":2266,"column":33,"offset":71556}}}],"position":{"start":{"line":2266,"column":1,"offset":71524},"end":{"line":2266,"column":33,"offset":71556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"If the node is found, delete the node.","position":{"start":{"line":2267,"column":5,"offset":71561},"end":{"line":2267,"column":43,"offset":71599}}}],"position":{"start":{"line":2267,"column":1,"offset":71557},"end":{"line":2267,"column":43,"offset":71599}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2266,"column":1,"offset":71524},"end":{"line":2267,"column":43,"offset":71599}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Follow up:","position":{"start":{"line":2269,"column":3,"offset":71603},"end":{"line":2269,"column":13,"offset":71613}}}],"position":{"start":{"line":2269,"column":1,"offset":71601},"end":{"line":2269,"column":15,"offset":71615}}},{"type":"text","value":" Can you solve it with time complexity ","position":{"start":{"line":2269,"column":15,"offset":71615},"end":{"line":2269,"column":54,"offset":71654}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O(height of tree)"}],"position":{"start":{"line":2269,"column":54,"offset":71654},"end":{"line":2269,"column":73,"offset":71673}}},{"type":"text","value":"?","position":{"start":{"line":2269,"column":73,"offset":71673},"end":{"line":2269,"column":74,"offset":71674}}}],"position":{"start":{"line":2269,"column":1,"offset":71601},"end":{"line":2269,"column":74,"offset":71674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":2271,"column":3,"offset":71678},"end":{"line":2271,"column":13,"offset":71688}}}],"position":{"start":{"line":2271,"column":1,"offset":71676},"end":{"line":2271,"column":15,"offset":71690}}}],"position":{"start":{"line":2271,"column":1,"offset":71676},"end":{"line":2271,"column":15,"offset":71690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg","alt":null},"children":[],"position":{"start":{"line":2273,"column":1,"offset":71692},"end":{"line":2273,"column":67,"offset":71758}}}],"position":{"start":{"line":2273,"column":1,"offset":71692},"end":{"line":2273,"column":67,"offset":71758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":2275,"column":3,"offset":71762},"end":{"line":2275,"column":9,"offset":71768}}}],"position":{"start":{"line":2275,"column":1,"offset":71760},"end":{"line":2275,"column":11,"offset":71770}}},{"type":"text","value":" root = ","position":{"start":{"line":2275,"column":11,"offset":71770},"end":{"line":2275,"column":19,"offset":71778}}},{"type":"text","value":"[","position":{"start":{"line":2275,"column":19,"offset":71778},"end":{"line":2275,"column":21,"offset":71780}}},{"type":"text","value":"5,3,6,2,4,null,7], key = 3\n","position":{"start":{"line":2275,"column":21,"offset":71780},"end":{"line":2276,"column":1,"offset":71807}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":2276,"column":3,"offset":71809},"end":{"line":2276,"column":10,"offset":71816}}}],"position":{"start":{"line":2276,"column":1,"offset":71807},"end":{"line":2276,"column":12,"offset":71818}}},{"type":"text","value":" ","position":{"start":{"line":2276,"column":12,"offset":71818},"end":{"line":2276,"column":13,"offset":71819}}},{"type":"text","value":"[","position":{"start":{"line":2276,"column":13,"offset":71819},"end":{"line":2276,"column":15,"offset":71821}}},{"type":"text","value":"5,4,6,2,null,null,7]\n","position":{"start":{"line":2276,"column":15,"offset":71821},"end":{"line":2277,"column":1,"offset":71842}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Explanation:","position":{"start":{"line":2277,"column":3,"offset":71844},"end":{"line":2277,"column":15,"offset":71856}}}],"position":{"start":{"line":2277,"column":1,"offset":71842},"end":{"line":2277,"column":17,"offset":71858}}},{"type":"text","value":" Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is ","position":{"start":{"line":2277,"column":17,"offset":71858},"end":{"line":2278,"column":21,"offset":71953}}},{"type":"text","value":"[","position":{"start":{"line":2278,"column":21,"offset":71953},"end":{"line":2278,"column":23,"offset":71955}}},{"type":"text","value":"5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is ","position":{"start":{"line":2278,"column":23,"offset":71955},"end":{"line":2279,"column":44,"offset":72044}}},{"type":"text","value":"[","position":{"start":{"line":2279,"column":44,"offset":72044},"end":{"line":2279,"column":46,"offset":72046}}},{"type":"text","value":"5,2,6,null,4,null,7] and it's also accepted.\n","position":{"start":{"line":2279,"column":46,"offset":72046},"end":{"line":2280,"column":1,"offset":72091}}},{"type":"element","tagName":"img","properties":{"src":"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg","alt":null},"children":[],"position":{"start":{"line":2280,"column":1,"offset":72091},"end":{"line":2280,"column":70,"offset":72160}}}],"position":{"start":{"line":2275,"column":1,"offset":71760},"end":{"line":2280,"column":70,"offset":72160}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":2282,"column":3,"offset":72164},"end":{"line":2282,"column":13,"offset":72174}}}],"position":{"start":{"line":2282,"column":1,"offset":72162},"end":{"line":2282,"column":15,"offset":72176}}}],"position":{"start":{"line":2282,"column":1,"offset":72162},"end":{"line":2282,"column":15,"offset":72176}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":2284,"column":3,"offset":72180},"end":{"line":2284,"column":9,"offset":72186}}}],"position":{"start":{"line":2284,"column":1,"offset":72178},"end":{"line":2284,"column":11,"offset":72188}}},{"type":"text","value":" root = ","position":{"start":{"line":2284,"column":11,"offset":72188},"end":{"line":2284,"column":19,"offset":72196}}},{"type":"text","value":"[","position":{"start":{"line":2284,"column":19,"offset":72196},"end":{"line":2284,"column":21,"offset":72198}}},{"type":"text","value":"5,3,6,2,4,null,7], key = 0\n","position":{"start":{"line":2284,"column":21,"offset":72198},"end":{"line":2285,"column":1,"offset":72225}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":2285,"column":3,"offset":72227},"end":{"line":2285,"column":10,"offset":72234}}}],"position":{"start":{"line":2285,"column":1,"offset":72225},"end":{"line":2285,"column":12,"offset":72236}}},{"type":"text","value":" ","position":{"start":{"line":2285,"column":12,"offset":72236},"end":{"line":2285,"column":13,"offset":72237}}},{"type":"text","value":"[","position":{"start":{"line":2285,"column":13,"offset":72237},"end":{"line":2285,"column":15,"offset":72239}}},{"type":"text","value":"5,3,6,2,4,null,7]\n","position":{"start":{"line":2285,"column":15,"offset":72239},"end":{"line":2286,"column":1,"offset":72257}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Explanation:","position":{"start":{"line":2286,"column":3,"offset":72259},"end":{"line":2286,"column":15,"offset":72271}}}],"position":{"start":{"line":2286,"column":1,"offset":72257},"end":{"line":2286,"column":17,"offset":72273}}},{"type":"text","value":" The tree does not contain a node with value = 0.","position":{"start":{"line":2286,"column":17,"offset":72273},"end":{"line":2286,"column":66,"offset":72322}}}],"position":{"start":{"line":2284,"column":1,"offset":72178},"end":{"line":2286,"column":66,"offset":72322}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 3:","position":{"start":{"line":2288,"column":3,"offset":72326},"end":{"line":2288,"column":13,"offset":72336}}}],"position":{"start":{"line":2288,"column":1,"offset":72324},"end":{"line":2288,"column":15,"offset":72338}}}],"position":{"start":{"line":2288,"column":1,"offset":72324},"end":{"line":2288,"column":15,"offset":72338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":2290,"column":3,"offset":72342},"end":{"line":2290,"column":9,"offset":72348}}}],"position":{"start":{"line":2290,"column":1,"offset":72340},"end":{"line":2290,"column":11,"offset":72350}}},{"type":"text","value":" root = ","position":{"start":{"line":2290,"column":11,"offset":72350},"end":{"line":2290,"column":19,"offset":72358}}},{"type":"text","value":"[","position":{"start":{"line":2290,"column":19,"offset":72358},"end":{"line":2290,"column":21,"offset":72360}}},{"type":"text","value":"], key = 0\n","position":{"start":{"line":2290,"column":21,"offset":72360},"end":{"line":2291,"column":1,"offset":72371}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":2291,"column":3,"offset":72373},"end":{"line":2291,"column":10,"offset":72380}}}],"position":{"start":{"line":2291,"column":1,"offset":72371},"end":{"line":2291,"column":12,"offset":72382}}},{"type":"text","value":" ","position":{"start":{"line":2291,"column":12,"offset":72382},"end":{"line":2291,"column":13,"offset":72383}}},{"type":"text","value":"[","position":{"start":{"line":2291,"column":13,"offset":72383},"end":{"line":2291,"column":15,"offset":72385}}},{"type":"text","value":"]","position":{"start":{"line":2291,"column":15,"offset":72385},"end":{"line":2291,"column":16,"offset":72386}}}],"position":{"start":{"line":2290,"column":1,"offset":72340},"end":{"line":2291,"column":16,"offset":72386}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Constraints:","position":{"start":{"line":2293,"column":3,"offset":72390},"end":{"line":2293,"column":15,"offset":72402}}}],"position":{"start":{"line":2293,"column":1,"offset":72388},"end":{"line":2293,"column":17,"offset":72404}}}],"position":{"start":{"line":2293,"column":1,"offset":72388},"end":{"line":2293,"column":17,"offset":72404}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":2295,"column":5,"offset":72410},"end":{"line":2295,"column":53,"offset":72458}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[0, 104]"}],"position":{"start":{"line":2295,"column":53,"offset":72458},"end":{"line":2295,"column":63,"offset":72468}}},{"type":"text","value":".","position":{"start":{"line":2295,"column":63,"offset":72468},"end":{"line":2295,"column":64,"offset":72469}}}],"position":{"start":{"line":2295,"column":1,"offset":72406},"end":{"line":2295,"column":64,"offset":72469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-105 <= Node.val <= 105"}],"position":{"start":{"line":2296,"column":5,"offset":72474},"end":{"line":2296,"column":30,"offset":72499}}}],"position":{"start":{"line":2296,"column":1,"offset":72470},"end":{"line":2296,"column":30,"offset":72499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Each node has a ","position":{"start":{"line":2297,"column":5,"offset":72504},"end":{"line":2297,"column":21,"offset":72520}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"unique","position":{"start":{"line":2297,"column":23,"offset":72522},"end":{"line":2297,"column":29,"offset":72528}}}],"position":{"start":{"line":2297,"column":21,"offset":72520},"end":{"line":2297,"column":31,"offset":72530}}},{"type":"text","value":" value.","position":{"start":{"line":2297,"column":31,"offset":72530},"end":{"line":2297,"column":38,"offset":72537}}}],"position":{"start":{"line":2297,"column":1,"offset":72500},"end":{"line":2297,"column":38,"offset":72537}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"root"}],"position":{"start":{"line":2298,"column":5,"offset":72542},"end":{"line":2298,"column":11,"offset":72548}}},{"type":"text","value":" is a valid binary search tree.","position":{"start":{"line":2298,"column":11,"offset":72548},"end":{"line":2298,"column":42,"offset":72579}}}],"position":{"start":{"line":2298,"column":1,"offset":72538},"end":{"line":2298,"column":42,"offset":72579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-105 <= key <= 105"}],"position":{"start":{"line":2299,"column":5,"offset":72584},"end":{"line":2299,"column":25,"offset":72604}}}],"position":{"start":{"line":2299,"column":1,"offset":72580},"end":{"line":2299,"column":25,"offset":72604}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2295,"column":1,"offset":72406},"end":{"line":2299,"column":25,"offset":72604}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/delete-node-in-a-bst/"},"children":[{"type":"text","value":"Source","position":{"start":{"line":2301,"column":2,"offset":72607},"end":{"line":2301,"column":8,"offset":72613}}}],"position":{"start":{"line":2301,"column":1,"offset":72606},"end":{"line":2301,"column":62,"offset":72667}}},{"type":"element","tagName":"img","properties":{"src":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-0.jpg","alt":"alt text","title":"meeting-room-ii"},"children":[],"position":{"start":{"line":2301,"column":62,"offset":72667},"end":{"line":2301,"column":173,"offset":72778}}},{"type":"text","value":"\n","position":{"start":{"line":2301,"column":173,"offset":72778},"end":{"line":2302,"column":1,"offset":72779}}},{"type":"element","tagName":"img","properties":{"src":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-1.jpg","alt":"alt text","title":"meeting-room-ii"},"children":[],"position":{"start":{"line":2302,"column":1,"offset":72779},"end":{"line":2302,"column":112,"offset":72890}}}],"position":{"start":{"line":2301,"column":1,"offset":72606},"end":{"line":2302,"column":112,"offset":72890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {number[][]} intervals\n * @return {number}\n */\nconst minMeetingRooms = function (intervals) {\n    const len = intervals.length;\n    const starts = new Array(len);\n    const ends = new Array(len);\n    for (let i = 0; i < len; i++) {\n        starts[i] = intervals[i][0];\n        ends[i] = intervals[i][1];\n    }\n    starts.sort((a, b) => a - b);\n    ends.sort((a, b) => a - b);\n    let rooms = 0;\n    let endsIdx = 0;\n    for (let i = 0; i < len; i++) {\n        if (starts[i] < ends[endsIdx]) rooms++;\n        else endsIdx++;\n    }\n    return rooms;\n};\n"}],"position":{"start":{"line":2304,"column":1,"offset":72892},"end":{"line":2327,"column":4,"offset":73466}}}],"position":{"start":{"line":2304,"column":1,"offset":72892},"end":{"line":2327,"column":4,"offset":73466}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#-"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":2329,"column":2,"offset":73469},"end":{"line":2329,"column":142,"offset":73609}}}],"position":{"start":{"line":2329,"column":1,"offset":73468},"end":{"line":2329,"column":147,"offset":73614}}}],"position":{"start":{"line":2329,"column":1,"offset":73468},"end":{"line":2329,"column":147,"offset":73614}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2330,"column":1,"offset":73615}}}}