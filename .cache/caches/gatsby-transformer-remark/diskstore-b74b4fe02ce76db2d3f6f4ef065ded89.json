{"expireTime":9007200908525411000,"key":"transformer-remark-markdown-ast-fd16786c213bc5489a576e23084ca30d--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Leetcode","position":{"start":{"line":2,"column":3,"offset":4},"end":{"line":2,"column":11,"offset":12},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":11,"offset":12},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":4,"column":4,"offset":19},"end":{"line":4,"column":32,"offset":47},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":16},"end":{"line":4,"column":32,"offset":47},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Data-Structures-Algos-Codebase","children":[{"type":"text","value":"DS Algo Codebase","position":{"start":{"line":6,"column":2,"offset":52},"end":{"line":6,"column":18,"offset":68},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":51},"end":{"line":6,"column":77,"offset":127},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":51},"end":{"line":6,"column":77,"offset":127},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#115-distinct-subsequenceshttpsleetcodecomproblemsdistinct-subsequencesdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":8,"column":2,"offset":132},"end":{"line":8,"column":142,"offset":272},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":131},"end":{"line":8,"column":227,"offset":357},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":131},"end":{"line":8,"column":227,"offset":357},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":10,"column":4,"offset":364},"end":{"line":10,"column":6,"offset":366},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/distinct-subsequences/description/","children":[{"type":"text","value":"115. Distinct Subsequences","position":{"start":{"line":10,"column":7,"offset":367},"end":{"line":10,"column":33,"offset":393},"indent":[]}}],"position":{"start":{"line":10,"column":6,"offset":366},"end":{"line":10,"column":100,"offset":460},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":361},"end":{"line":10,"column":100,"offset":460},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":12,"column":5,"offset":468},"end":{"line":12,"column":12,"offset":475},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":464},"end":{"line":12,"column":12,"offset":475},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a string ","position":{"start":{"line":14,"column":1,"offset":479},"end":{"line":14,"column":16,"offset":494},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"S","position":{"start":{"line":14,"column":18,"offset":496},"end":{"line":14,"column":19,"offset":497},"indent":[]}}],"position":{"start":{"line":14,"column":16,"offset":494},"end":{"line":14,"column":21,"offset":499},"indent":[]}},{"type":"text","value":" and a string ","position":{"start":{"line":14,"column":21,"offset":499},"end":{"line":14,"column":35,"offset":513},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"T","position":{"start":{"line":14,"column":37,"offset":515},"end":{"line":14,"column":38,"offset":516},"indent":[]}}],"position":{"start":{"line":14,"column":35,"offset":513},"end":{"line":14,"column":40,"offset":518},"indent":[]}},{"type":"text","value":", count the number of distinct subsequences of ","position":{"start":{"line":14,"column":40,"offset":518},"end":{"line":14,"column":87,"offset":565},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"S","position":{"start":{"line":14,"column":89,"offset":567},"end":{"line":14,"column":90,"offset":568},"indent":[]}}],"position":{"start":{"line":14,"column":87,"offset":565},"end":{"line":14,"column":92,"offset":570},"indent":[]}},{"type":"text","value":" which equals ","position":{"start":{"line":14,"column":92,"offset":570},"end":{"line":14,"column":106,"offset":584},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"T","position":{"start":{"line":14,"column":108,"offset":586},"end":{"line":14,"column":109,"offset":587},"indent":[]}}],"position":{"start":{"line":14,"column":106,"offset":584},"end":{"line":14,"column":111,"offset":589},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":14,"column":111,"offset":589},"end":{"line":14,"column":112,"offset":590},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":479},"end":{"line":14,"column":112,"offset":590},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, ","position":{"start":{"line":16,"column":1,"offset":594},"end":{"line":16,"column":209,"offset":802},"indent":[]}},{"type":"inlineCode","value":"\"ACE\"","position":{"start":{"line":16,"column":209,"offset":802},"end":{"line":16,"column":216,"offset":809},"indent":[]}},{"type":"text","value":" is a subsequence of ","position":{"start":{"line":16,"column":216,"offset":809},"end":{"line":16,"column":237,"offset":830},"indent":[]}},{"type":"inlineCode","value":"\"ABCDE\"","position":{"start":{"line":16,"column":237,"offset":830},"end":{"line":16,"column":246,"offset":839},"indent":[]}},{"type":"text","value":" while ","position":{"start":{"line":16,"column":246,"offset":839},"end":{"line":16,"column":253,"offset":846},"indent":[]}},{"type":"inlineCode","value":"\"AEC\"","position":{"start":{"line":16,"column":253,"offset":846},"end":{"line":16,"column":260,"offset":853},"indent":[]}},{"type":"text","value":" is not).","position":{"start":{"line":16,"column":260,"offset":853},"end":{"line":16,"column":269,"offset":862},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":594},"end":{"line":16,"column":269,"offset":862},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":18,"column":3,"offset":868},"end":{"line":18,"column":13,"offset":878},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":866},"end":{"line":18,"column":15,"offset":880},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":866},"end":{"line":18,"column":15,"offset":880},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: S = \"rabbbit\", T = \"rabbit\"\nOutput: 3\nExplanation:\n\nAs shown below, there are 3 ways you can generate \"rabbit\" from S.\n(The caret symbol ^ means the chosen letters)\n\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^","position":{"start":{"line":20,"column":1,"offset":884},"end":{"line":32,"column":12,"offset":1160},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":34,"column":3,"offset":1166},"end":{"line":34,"column":13,"offset":1176},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1164},"end":{"line":34,"column":15,"offset":1178},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1164},"end":{"line":34,"column":15,"offset":1178},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: S = \"babgbag\", T = \"bag\"\nOutput: 5\nExplanation:\n\nAs shown below, there are 5 ways you can generate \"bag\" from S.\n(The caret symbol ^ means the chosen letters)\n\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^","position":{"start":{"line":36,"column":1,"offset":1182},"end":{"line":52,"column":12,"offset":1501},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":54,"column":5,"offset":1509},"end":{"line":54,"column":13,"offset":1517},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1505},"end":{"line":54,"column":13,"offset":1517},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":56,"column":1,"offset":1521},"end":{"line":56,"column":8,"offset":1528},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":56,"column":8,"offset":1528},"end":{"line":56,"column":17,"offset":1537},"indent":[]}},{"type":"text","value":" to be the number of ways that generate ","position":{"start":{"line":56,"column":17,"offset":1537},"end":{"line":56,"column":57,"offset":1577},"indent":[]}},{"type":"inlineCode","value":"T[0...j)","position":{"start":{"line":56,"column":57,"offset":1577},"end":{"line":56,"column":67,"offset":1587},"indent":[]}},{"type":"text","value":" from ","position":{"start":{"line":56,"column":67,"offset":1587},"end":{"line":56,"column":73,"offset":1593},"indent":[]}},{"type":"inlineCode","value":"S[0...i)","position":{"start":{"line":56,"column":73,"offset":1593},"end":{"line":56,"column":83,"offset":1603},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":56,"column":83,"offset":1603},"end":{"line":56,"column":84,"offset":1604},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1521},"end":{"line":56,"column":84,"offset":1604},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For ","position":{"start":{"line":58,"column":1,"offset":1608},"end":{"line":58,"column":5,"offset":1612},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":58,"column":5,"offset":1612},"end":{"line":58,"column":14,"offset":1621},"indent":[]}},{"type":"text","value":" you can always skip ","position":{"start":{"line":58,"column":14,"offset":1621},"end":{"line":58,"column":35,"offset":1642},"indent":[]}},{"type":"inlineCode","value":"S[i-1]","position":{"start":{"line":58,"column":35,"offset":1642},"end":{"line":58,"column":43,"offset":1650},"indent":[]}},{"type":"text","value":", but can only take it when ","position":{"start":{"line":58,"column":43,"offset":1650},"end":{"line":58,"column":71,"offset":1678},"indent":[]}},{"type":"inlineCode","value":"S[i-1] === T[j-1]","position":{"start":{"line":58,"column":71,"offset":1678},"end":{"line":58,"column":90,"offset":1697},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":58,"column":90,"offset":1697},"end":{"line":58,"column":91,"offset":1698},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1608},"end":{"line":58,"column":91,"offset":1698},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"f(0, j) = 0, j > 0 // nothing to delete\nf(i, 0) = 1 // delete all\nf(i, j) = f(i-1, j) + (S[i-1] === T[j-1] ? f(i-1, j-1) : 0)","position":{"start":{"line":60,"column":1,"offset":1702},"end":{"line":64,"column":4,"offset":1841},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":66,"column":1,"offset":1845},"end":{"line":66,"column":27,"offset":1871},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1845},"end":{"line":66,"column":27,"offset":1871},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @param {string} t\n * @return {number}\n */\nlet numDistinct = function (s, t) {\n    const lens = s.length;\n    const lent = t.length;\n    const dp = new Array(lent + 1).fill(0);\n    dp[0] = 1;\n    for (let i = 1; i <= lens; i++) {\n        for (let j = lent; j >= 1; j--) {\n            if (s[i - 1] === t[j - 1]) {\n                dp[j] += dp[j - 1];\n            }\n        }\n    }\n    return dp[lent];\n};","position":{"start":{"line":68,"column":1,"offset":1875},"end":{"line":88,"column":4,"offset":2334},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":90,"column":1,"offset":2338},"end":{"line":90,"column":4,"offset":2341},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":92,"column":1,"offset":2345},"end":{"line":94,"column":9,"offset":2390},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":94,"column":10,"offset":2391},"end":{"line":94,"column":39,"offset":2420},"indent":[]}}],"position":{"start":{"line":94,"column":9,"offset":2390},"end":{"line":94,"column":40,"offset":2421},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":94,"column":40,"offset":2421},"end":{"line":95,"column":23,"offset":2445},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":95,"column":24,"offset":2446},"end":{"line":95,"column":67,"offset":2489},"indent":[]}}],"position":{"start":{"line":95,"column":23,"offset":2445},"end":{"line":95,"column":68,"offset":2490},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node II\": ","position":{"start":{"line":95,"column":68,"offset":2490},"end":{"line":97,"column":51,"offset":2562},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","position":{"start":{"line":97,"column":52,"offset":2563},"end":{"line":97,"column":128,"offset":2639},"indent":[]}}],"position":{"start":{"line":97,"column":51,"offset":2562},"end":{"line":97,"column":129,"offset":2640},"indent":[]}},{"type":"text","value":"\n\"Binary Tree Right Side View\": ","position":{"start":{"line":97,"column":129,"offset":2640},"end":{"line":98,"column":32,"offset":2673},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-right-side-view","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-right-side-view","position":{"start":{"line":98,"column":33,"offset":2674},"end":{"line":98,"column":90,"offset":2731},"indent":[]}}],"position":{"start":{"line":98,"column":32,"offset":2673},"end":{"line":98,"column":91,"offset":2732},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2345},"end":{"line":98,"column":91,"offset":2732},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":100,"column":1,"offset":2736},"end":{"line":100,"column":4,"offset":2739},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#116-populating-next-right-pointers-in-each-nodehttpsleetcodecomproblemspopulating-next-right-pointers-in-each-nodedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":102,"column":2,"offset":2744},"end":{"line":102,"column":142,"offset":2884},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2743},"end":{"line":102,"column":271,"offset":3013},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2743},"end":{"line":102,"column":271,"offset":3013},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":104,"column":4,"offset":3020},"end":{"line":104,"column":6,"offset":3022},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":104,"column":7,"offset":3023},"end":{"line":104,"column":55,"offset":3071},"indent":[]}}],"position":{"start":{"line":104,"column":6,"offset":3022},"end":{"line":104,"column":144,"offset":3160},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3017},"end":{"line":104,"column":144,"offset":3160},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":106,"column":5,"offset":3168},"end":{"line":106,"column":12,"offset":3175},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3164},"end":{"line":106,"column":12,"offset":3175},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":108,"column":1,"offset":3179},"end":{"line":108,"column":20,"offset":3198},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3179},"end":{"line":108,"column":20,"offset":3198},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}","position":{"start":{"line":110,"column":1,"offset":3202},"end":{"line":117,"column":4,"offset":3308},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":119,"column":1,"offset":3312},"end":{"line":119,"column":127,"offset":3438},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":119,"column":127,"offset":3438},"end":{"line":119,"column":133,"offset":3444},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":119,"column":133,"offset":3444},"end":{"line":119,"column":134,"offset":3445},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":3312},"end":{"line":119,"column":134,"offset":3445},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":121,"column":1,"offset":3449},"end":{"line":121,"column":41,"offset":3489},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":121,"column":41,"offset":3489},"end":{"line":121,"column":47,"offset":3495},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":121,"column":47,"offset":3495},"end":{"line":121,"column":48,"offset":3496},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3449},"end":{"line":121,"column":48,"offset":3496},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":123,"column":3,"offset":3502},"end":{"line":123,"column":8,"offset":3507},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3500},"end":{"line":123,"column":10,"offset":3509},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3500},"end":{"line":123,"column":10,"offset":3509},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":125,"column":3,"offset":3515},"end":{"line":125,"column":41,"offset":3553},"indent":[]}}],"position":{"start":{"line":125,"column":3,"offset":3515},"end":{"line":125,"column":41,"offset":3553},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3513},"end":{"line":125,"column":41,"offset":3553},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":126,"column":3,"offset":3557},"end":{"line":126,"column":99,"offset":3653},"indent":[]}}],"position":{"start":{"line":126,"column":3,"offset":3557},"end":{"line":126,"column":99,"offset":3653},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":3555},"end":{"line":126,"column":99,"offset":3653},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).","position":{"start":{"line":127,"column":3,"offset":3657},"end":{"line":127,"column":125,"offset":3779},"indent":[]}}],"position":{"start":{"line":127,"column":3,"offset":3657},"end":{"line":127,"column":125,"offset":3779},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3655},"end":{"line":127,"column":125,"offset":3779},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3513},"end":{"line":127,"column":125,"offset":3779},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":129,"column":3,"offset":3785},"end":{"line":129,"column":11,"offset":3793},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3783},"end":{"line":129,"column":13,"offset":3795},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3783},"end":{"line":129,"column":13,"offset":3795},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the following perfect binary tree,","position":{"start":{"line":131,"column":1,"offset":3799},"end":{"line":131,"column":41,"offset":3839},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3799},"end":{"line":131,"column":41,"offset":3839},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1\n   /  \\\n  2    3\n / \\  / \\\n4  5  6  7","position":{"start":{"line":133,"column":1,"offset":3843},"end":{"line":140,"column":4,"offset":3903},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":142,"column":1,"offset":3907},"end":{"line":142,"column":56,"offset":3962},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":3907},"end":{"line":142,"column":56,"offset":3962},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\  / \\\n4->5->6->7 -> NULL","position":{"start":{"line":144,"column":1,"offset":3966},"end":{"line":151,"column":4,"offset":4050},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":153,"column":5,"offset":4058},"end":{"line":153,"column":13,"offset":4066},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":4054},"end":{"line":153,"column":13,"offset":4066},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":155,"column":6,"offset":4075},"end":{"line":155,"column":9,"offset":4078},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":4070},"end":{"line":155,"column":9,"offset":4078},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursive.","position":{"start":{"line":157,"column":1,"offset":4082},"end":{"line":157,"column":11,"offset":4092},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":4082},"end":{"line":157,"column":11,"offset":4092},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For every ","position":{"start":{"line":159,"column":1,"offset":4096},"end":{"line":159,"column":11,"offset":4106},"indent":[]}},{"type":"inlineCode","value":"node","position":{"start":{"line":159,"column":11,"offset":4106},"end":{"line":159,"column":17,"offset":4112},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":159,"column":17,"offset":4112},"end":{"line":159,"column":18,"offset":4113},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":4096},"end":{"line":159,"column":18,"offset":4113},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Left child: points to ","position":{"start":{"line":161,"column":3,"offset":4119},"end":{"line":161,"column":25,"offset":4141},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":161,"column":25,"offset":4141},"end":{"line":161,"column":37,"offset":4153},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":161,"column":37,"offset":4153},"end":{"line":161,"column":38,"offset":4154},"indent":[]}}],"position":{"start":{"line":161,"column":3,"offset":4119},"end":{"line":161,"column":38,"offset":4154},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4117},"end":{"line":161,"column":38,"offset":4154},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Right child: points to ","position":{"start":{"line":162,"column":3,"offset":4158},"end":{"line":162,"column":26,"offset":4181},"indent":[]}},{"type":"inlineCode","value":"node.next.left","position":{"start":{"line":162,"column":26,"offset":4181},"end":{"line":162,"column":42,"offset":4197},"indent":[]}},{"type":"text","value":" if ","position":{"start":{"line":162,"column":42,"offset":4197},"end":{"line":162,"column":46,"offset":4201},"indent":[]}},{"type":"inlineCode","value":"node.next","position":{"start":{"line":162,"column":46,"offset":4201},"end":{"line":162,"column":57,"offset":4212},"indent":[]}},{"type":"text","value":" exists.","position":{"start":{"line":162,"column":57,"offset":4212},"end":{"line":162,"column":65,"offset":4220},"indent":[]}}],"position":{"start":{"line":162,"column":3,"offset":4158},"end":{"line":162,"column":65,"offset":4220},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":4156},"end":{"line":162,"column":65,"offset":4220},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4117},"end":{"line":162,"column":65,"offset":4220},"indent":[1]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right;\n        connect(root.left);\n    }\n    if (root.right !== null) {\n        if (root.next !== null) {\n            root.right.next = root.next.left;\n        }\n        connect(root.right);\n    }\n};","position":{"start":{"line":164,"column":1,"offset":4224},"end":{"line":192,"column":4,"offset":4870},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":194,"column":6,"offset":4879},"end":{"line":194,"column":9,"offset":4882},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":4874},"end":{"line":194,"column":9,"offset":4882},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Level order traversal.","position":{"start":{"line":196,"column":1,"offset":4886},"end":{"line":196,"column":23,"offset":4908},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":4886},"end":{"line":196,"column":23,"offset":4908},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};","position":{"start":{"line":198,"column":1,"offset":4912},"end":{"line":234,"column":4,"offset":5804},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":236,"column":1,"offset":5808},"end":{"line":236,"column":4,"offset":5811},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":238,"column":1,"offset":5815},"end":{"line":240,"column":9,"offset":5860},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":240,"column":10,"offset":5861},"end":{"line":240,"column":39,"offset":5890},"indent":[]}}],"position":{"start":{"line":240,"column":9,"offset":5860},"end":{"line":240,"column":40,"offset":5891},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":240,"column":40,"offset":5891},"end":{"line":241,"column":23,"offset":5915},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":241,"column":24,"offset":5916},"end":{"line":241,"column":67,"offset":5959},"indent":[]}}],"position":{"start":{"line":241,"column":23,"offset":5915},"end":{"line":241,"column":68,"offset":5960},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node\": ","position":{"start":{"line":241,"column":68,"offset":5960},"end":{"line":243,"column":48,"offset":6029},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","position":{"start":{"line":243,"column":49,"offset":6030},"end":{"line":243,"column":122,"offset":6103},"indent":[]}}],"position":{"start":{"line":243,"column":48,"offset":6029},"end":{"line":243,"column":123,"offset":6104},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":5815},"end":{"line":243,"column":123,"offset":6104},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":245,"column":1,"offset":6108},"end":{"line":245,"column":4,"offset":6111},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#117-populating-next-right-pointers-in-each-node-iihttpsleetcodecomproblemspopulating-next-right-pointers-in-each-node-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":247,"column":2,"offset":6116},"end":{"line":247,"column":142,"offset":6256},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":6115},"end":{"line":247,"column":277,"offset":6391},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":6115},"end":{"line":247,"column":277,"offset":6391},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":249,"column":4,"offset":6398},"end":{"line":249,"column":6,"offset":6400},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description/","children":[{"type":"text","value":"117. Populating Next Right Pointers in Each Node II","position":{"start":{"line":249,"column":7,"offset":6401},"end":{"line":249,"column":58,"offset":6452},"indent":[]}}],"position":{"start":{"line":249,"column":6,"offset":6400},"end":{"line":249,"column":150,"offset":6544},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":6395},"end":{"line":249,"column":150,"offset":6544},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":251,"column":5,"offset":6552},"end":{"line":251,"column":12,"offset":6559},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":6548},"end":{"line":251,"column":12,"offset":6559},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":253,"column":1,"offset":6563},"end":{"line":253,"column":20,"offset":6582},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":6563},"end":{"line":253,"column":20,"offset":6582},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}","position":{"start":{"line":255,"column":1,"offset":6586},"end":{"line":262,"column":4,"offset":6692},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":264,"column":1,"offset":6696},"end":{"line":264,"column":127,"offset":6822},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":264,"column":127,"offset":6822},"end":{"line":264,"column":133,"offset":6828},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":264,"column":133,"offset":6828},"end":{"line":264,"column":134,"offset":6829},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":6696},"end":{"line":264,"column":134,"offset":6829},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":266,"column":1,"offset":6833},"end":{"line":266,"column":41,"offset":6873},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":266,"column":41,"offset":6873},"end":{"line":266,"column":47,"offset":6879},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":266,"column":47,"offset":6879},"end":{"line":266,"column":48,"offset":6880},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":6833},"end":{"line":266,"column":48,"offset":6880},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":268,"column":3,"offset":6886},"end":{"line":268,"column":8,"offset":6891},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":6884},"end":{"line":268,"column":10,"offset":6893},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":6884},"end":{"line":268,"column":10,"offset":6893},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":270,"column":3,"offset":6899},"end":{"line":270,"column":41,"offset":6937},"indent":[]}}],"position":{"start":{"line":270,"column":3,"offset":6899},"end":{"line":270,"column":41,"offset":6937},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":6897},"end":{"line":270,"column":41,"offset":6937},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":271,"column":3,"offset":6941},"end":{"line":271,"column":99,"offset":7037},"indent":[]}}],"position":{"start":{"line":271,"column":3,"offset":6941},"end":{"line":271,"column":99,"offset":7037},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":6939},"end":{"line":271,"column":99,"offset":7037},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":6897},"end":{"line":271,"column":99,"offset":7037},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":273,"column":3,"offset":7043},"end":{"line":273,"column":11,"offset":7051},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":7041},"end":{"line":273,"column":13,"offset":7053},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":7041},"end":{"line":273,"column":13,"offset":7053},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the following binary tree,","position":{"start":{"line":275,"column":1,"offset":7057},"end":{"line":275,"column":33,"offset":7089},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":7057},"end":{"line":275,"column":33,"offset":7089},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1\n   /  \\\n  2    3\n / \\    \\\n4   5    7","position":{"start":{"line":277,"column":1,"offset":7093},"end":{"line":284,"column":4,"offset":7153},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":286,"column":1,"offset":7157},"end":{"line":286,"column":56,"offset":7212},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":7157},"end":{"line":286,"column":56,"offset":7212},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\    \\\n4-> 5 -> 7 -> NULL","position":{"start":{"line":288,"column":1,"offset":7216},"end":{"line":295,"column":4,"offset":7300},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":297,"column":5,"offset":7308},"end":{"line":297,"column":13,"offset":7316},"indent":[]}}],"position":{"start":{"line":297,"column":1,"offset":7304},"end":{"line":297,"column":13,"offset":7316},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":299,"column":6,"offset":7325},"end":{"line":299,"column":9,"offset":7328},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":7320},"end":{"line":299,"column":9,"offset":7328},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursive. See ","position":{"start":{"line":301,"column":1,"offset":7332},"end":{"line":301,"column":16,"offset":7347},"indent":[]}},{"type":"link","title":null,"url":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":301,"column":17,"offset":7348},"end":{"line":301,"column":65,"offset":7396},"indent":[]}}],"position":{"start":{"line":301,"column":16,"offset":7347},"end":{"line":301,"column":135,"offset":7466},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":301,"column":135,"offset":7466},"end":{"line":301,"column":136,"offset":7467},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":7332},"end":{"line":301,"column":136,"offset":7467},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The tree may not be perfect now. So keep finding ","position":{"start":{"line":303,"column":1,"offset":7471},"end":{"line":303,"column":50,"offset":7520},"indent":[]}},{"type":"inlineCode","value":"next","position":{"start":{"line":303,"column":50,"offset":7520},"end":{"line":303,"column":56,"offset":7526},"indent":[]}},{"type":"text","value":" until there is a node with children, or ","position":{"start":{"line":303,"column":56,"offset":7526},"end":{"line":303,"column":97,"offset":7567},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":303,"column":97,"offset":7567},"end":{"line":303,"column":103,"offset":7573},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":303,"column":103,"offset":7573},"end":{"line":303,"column":104,"offset":7574},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":7471},"end":{"line":303,"column":104,"offset":7574},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This also means post-order traversal is required.","position":{"start":{"line":305,"column":1,"offset":7578},"end":{"line":305,"column":50,"offset":7627},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":7578},"end":{"line":305,"column":50,"offset":7627},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    let next = null;\n    for (let node = root.next; node !== null; node = node.next) {\n        if (node.left !== null) {\n            next = node.left;\n            break;\n        }\n        if (node.right !== null) {\n            next = node.right;\n            break;\n        }\n    }\n    if (root.right !== null) {\n        root.right.next = next;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right || next;\n    }\n    connect(root.right);\n    connect(root.left);\n};","position":{"start":{"line":307,"column":1,"offset":7631},"end":{"line":344,"column":4,"offset":8509},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":346,"column":6,"offset":8518},"end":{"line":346,"column":9,"offset":8521},"indent":[]}}],"position":{"start":{"line":346,"column":1,"offset":8513},"end":{"line":346,"column":9,"offset":8521},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Level order traversal. Exact same as ","position":{"start":{"line":348,"column":1,"offset":8525},"end":{"line":348,"column":38,"offset":8562},"indent":[]}},{"type":"link","title":null,"url":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":348,"column":39,"offset":8563},"end":{"line":348,"column":87,"offset":8611},"indent":[]}}],"position":{"start":{"line":348,"column":38,"offset":8562},"end":{"line":348,"column":157,"offset":8681},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":348,"column":157,"offset":8681},"end":{"line":348,"column":158,"offset":8682},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":8525},"end":{"line":348,"column":158,"offset":8682},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};","position":{"start":{"line":350,"column":1,"offset":8686},"end":{"line":386,"column":4,"offset":9578},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":388,"column":1,"offset":9582},"end":{"line":388,"column":4,"offset":9585},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":390,"column":1,"offset":9589},"end":{"line":392,"column":10,"offset":9633},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":392,"column":11,"offset":9634},"end":{"line":392,"column":41,"offset":9664},"indent":[]}}],"position":{"start":{"line":392,"column":10,"offset":9633},"end":{"line":392,"column":42,"offset":9665},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle II\": ","position":{"start":{"line":392,"column":42,"offset":9665},"end":{"line":394,"column":25,"offset":9711},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle-ii","children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle-ii","position":{"start":{"line":394,"column":26,"offset":9712},"end":{"line":394,"column":75,"offset":9761},"indent":[]}}],"position":{"start":{"line":394,"column":25,"offset":9711},"end":{"line":394,"column":76,"offset":9762},"indent":[]}}],"position":{"start":{"line":390,"column":1,"offset":9589},"end":{"line":394,"column":76,"offset":9762},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":396,"column":1,"offset":9766},"end":{"line":396,"column":4,"offset":9769},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#118-pascals-trianglehttpsleetcodecomproblemspascals-triangledescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":398,"column":2,"offset":9774},"end":{"line":398,"column":142,"offset":9914},"indent":[]}}],"position":{"start":{"line":398,"column":1,"offset":9773},"end":{"line":398,"column":217,"offset":9989},"indent":[]}}],"position":{"start":{"line":398,"column":1,"offset":9773},"end":{"line":398,"column":217,"offset":9989},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":400,"column":4,"offset":9996},"end":{"line":400,"column":6,"offset":9998},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle/description/","children":[{"type":"text","value":"118. Pascal's Triangle","position":{"start":{"line":400,"column":7,"offset":9999},"end":{"line":400,"column":29,"offset":10021},"indent":[]}}],"position":{"start":{"line":400,"column":6,"offset":9998},"end":{"line":400,"column":91,"offset":10083},"indent":[]}}],"position":{"start":{"line":400,"column":1,"offset":9993},"end":{"line":400,"column":91,"offset":10083},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":402,"column":5,"offset":10091},"end":{"line":402,"column":12,"offset":10098},"indent":[]}}],"position":{"start":{"line":402,"column":1,"offset":10087},"end":{"line":402,"column":12,"offset":10098},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a non-negative integer ","position":{"start":{"line":404,"column":1,"offset":10102},"end":{"line":404,"column":30,"offset":10131},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"numRows","position":{"start":{"line":404,"column":31,"offset":10132},"end":{"line":404,"column":38,"offset":10139},"indent":[]}}],"position":{"start":{"line":404,"column":30,"offset":10131},"end":{"line":404,"column":39,"offset":10140},"indent":[]}},{"type":"text","value":", generate the first ","position":{"start":{"line":404,"column":39,"offset":10140},"end":{"line":404,"column":60,"offset":10161},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"numRows","position":{"start":{"line":404,"column":61,"offset":10162},"end":{"line":404,"column":68,"offset":10169},"indent":[]}}],"position":{"start":{"line":404,"column":60,"offset":10161},"end":{"line":404,"column":69,"offset":10170},"indent":[]}},{"type":"text","value":" of Pascal's triangle.","position":{"start":{"line":404,"column":69,"offset":10170},"end":{"line":404,"column":91,"offset":10192},"indent":[]}}],"position":{"start":{"line":404,"column":1,"offset":10102},"end":{"line":404,"column":91,"offset":10192},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif","position":{"start":{"line":406,"column":1,"offset":10196},"end":{"line":406,"column":112,"offset":10307},"indent":[]}}],"position":{"start":{"line":406,"column":1,"offset":10196},"end":{"line":406,"column":112,"offset":10307},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":408,"column":1,"offset":10311},"end":{"line":408,"column":83,"offset":10393},"indent":[]}}],"position":{"start":{"line":408,"column":1,"offset":10311},"end":{"line":408,"column":83,"offset":10393},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":410,"column":3,"offset":10399},"end":{"line":410,"column":11,"offset":10407},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":10397},"end":{"line":410,"column":13,"offset":10409},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":10397},"end":{"line":410,"column":13,"offset":10409},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: 5\nOutput:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]","position":{"start":{"line":412,"column":1,"offset":10413},"end":{"line":423,"column":4,"offset":10512},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":425,"column":5,"offset":10520},"end":{"line":425,"column":13,"offset":10528},"indent":[]}}],"position":{"start":{"line":425,"column":1,"offset":10516},"end":{"line":425,"column":13,"offset":10528},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic Programming 101.","position":{"start":{"line":427,"column":1,"offset":10532},"end":{"line":427,"column":25,"offset":10556},"indent":[]}}],"position":{"start":{"line":427,"column":1,"offset":10532},"end":{"line":427,"column":25,"offset":10556},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number} numRows\n * @return {number[][]}\n */\nlet generate = function (numRows) {\n    if (numRows <= 0) {\n        return [];\n    }\n\n    const result = [[1]];\n    for (let i = 1; i < numRows; i++) {\n        const lastRow = result[i - 1];\n        const row = [1];\n        for (let j = 1; j < i; j++) {\n            row[j] = lastRow[j] + lastRow[j - 1];\n        }\n        row.push(1);\n        result.push(row);\n    }\n\n    return result;\n};","position":{"start":{"line":429,"column":1,"offset":10560},"end":{"line":452,"column":4,"offset":11041},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":454,"column":1,"offset":11045},"end":{"line":454,"column":4,"offset":11048},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":456,"column":1,"offset":11052},"end":{"line":458,"column":10,"offset":11096},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":458,"column":11,"offset":11097},"end":{"line":458,"column":41,"offset":11127},"indent":[]}}],"position":{"start":{"line":458,"column":10,"offset":11096},"end":{"line":458,"column":42,"offset":11128},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle\": ","position":{"start":{"line":458,"column":42,"offset":11128},"end":{"line":460,"column":22,"offset":11171},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle","children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle","position":{"start":{"line":460,"column":23,"offset":11172},"end":{"line":460,"column":69,"offset":11218},"indent":[]}}],"position":{"start":{"line":460,"column":22,"offset":11171},"end":{"line":460,"column":70,"offset":11219},"indent":[]}}],"position":{"start":{"line":456,"column":1,"offset":11052},"end":{"line":460,"column":70,"offset":11219},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":462,"column":1,"offset":11223},"end":{"line":462,"column":4,"offset":11226},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#119-pascals-triangle-iihttpsleetcodecomproblemspascals-triangle-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":464,"column":2,"offset":11231},"end":{"line":464,"column":142,"offset":11371},"indent":[]}}],"position":{"start":{"line":464,"column":1,"offset":11230},"end":{"line":464,"column":223,"offset":11452},"indent":[]}}],"position":{"start":{"line":464,"column":1,"offset":11230},"end":{"line":464,"column":223,"offset":11452},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":466,"column":4,"offset":11459},"end":{"line":466,"column":6,"offset":11461},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle-ii/description/","children":[{"type":"text","value":"119. Pascal's Triangle II","position":{"start":{"line":466,"column":7,"offset":11462},"end":{"line":466,"column":32,"offset":11487},"indent":[]}}],"position":{"start":{"line":466,"column":6,"offset":11461},"end":{"line":466,"column":97,"offset":11552},"indent":[]}}],"position":{"start":{"line":466,"column":1,"offset":11456},"end":{"line":466,"column":97,"offset":11552},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":468,"column":5,"offset":11560},"end":{"line":468,"column":12,"offset":11567},"indent":[]}}],"position":{"start":{"line":468,"column":1,"offset":11556},"end":{"line":468,"column":12,"offset":11567},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a non-negative index ","position":{"start":{"line":470,"column":1,"offset":11571},"end":{"line":470,"column":28,"offset":11598},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":470,"column":29,"offset":11599},"end":{"line":470,"column":30,"offset":11600},"indent":[]}}],"position":{"start":{"line":470,"column":28,"offset":11598},"end":{"line":470,"column":31,"offset":11601},"indent":[]}},{"type":"text","value":" where ","position":{"start":{"line":470,"column":31,"offset":11601},"end":{"line":470,"column":38,"offset":11608},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":470,"column":39,"offset":11609},"end":{"line":470,"column":40,"offset":11610},"indent":[]}}],"position":{"start":{"line":470,"column":38,"offset":11608},"end":{"line":470,"column":41,"offset":11611},"indent":[]}},{"type":"text","value":" â‰¤ 33, return the ","position":{"start":{"line":470,"column":41,"offset":11611},"end":{"line":470,"column":59,"offset":11629},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":470,"column":60,"offset":11630},"end":{"line":470,"column":61,"offset":11631},"indent":[]}}],"position":{"start":{"line":470,"column":59,"offset":11629},"end":{"line":470,"column":62,"offset":11632},"indent":[]}},{"type":"text","value":"th index row of the Pascal's triangle.","position":{"start":{"line":470,"column":62,"offset":11632},"end":{"line":470,"column":100,"offset":11670},"indent":[]}}],"position":{"start":{"line":470,"column":1,"offset":11571},"end":{"line":470,"column":100,"offset":11670},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that the row index starts from 0.","position":{"start":{"line":472,"column":1,"offset":11674},"end":{"line":472,"column":39,"offset":11712},"indent":[]}}],"position":{"start":{"line":472,"column":1,"offset":11674},"end":{"line":472,"column":39,"offset":11712},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif","position":{"start":{"line":474,"column":1,"offset":11716},"end":{"line":474,"column":112,"offset":11827},"indent":[]}}],"position":{"start":{"line":474,"column":1,"offset":11716},"end":{"line":474,"column":112,"offset":11827},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":476,"column":1,"offset":11831},"end":{"line":476,"column":83,"offset":11913},"indent":[]}}],"position":{"start":{"line":476,"column":1,"offset":11831},"end":{"line":476,"column":83,"offset":11913},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":478,"column":3,"offset":11919},"end":{"line":478,"column":11,"offset":11927},"indent":[]}}],"position":{"start":{"line":478,"column":1,"offset":11917},"end":{"line":478,"column":13,"offset":11929},"indent":[]}}],"position":{"start":{"line":478,"column":1,"offset":11917},"end":{"line":478,"column":13,"offset":11929},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: 3\nOutput: [1,3,3,1]","position":{"start":{"line":480,"column":1,"offset":11933},"end":{"line":484,"column":4,"offset":11972},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Follow up:","position":{"start":{"line":486,"column":3,"offset":11978},"end":{"line":486,"column":13,"offset":11988},"indent":[]}}],"position":{"start":{"line":486,"column":1,"offset":11976},"end":{"line":486,"column":15,"offset":11990},"indent":[]}}],"position":{"start":{"line":486,"column":1,"offset":11976},"end":{"line":486,"column":15,"offset":11990},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Could you optimize your algorithm to use only ","position":{"start":{"line":488,"column":1,"offset":11994},"end":{"line":488,"column":47,"offset":12040},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"O","position":{"start":{"line":488,"column":48,"offset":12041},"end":{"line":488,"column":49,"offset":12042},"indent":[]}}],"position":{"start":{"line":488,"column":47,"offset":12040},"end":{"line":488,"column":50,"offset":12043},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":488,"column":50,"offset":12043},"end":{"line":488,"column":51,"offset":12044},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":488,"column":52,"offset":12045},"end":{"line":488,"column":53,"offset":12046},"indent":[]}}],"position":{"start":{"line":488,"column":51,"offset":12044},"end":{"line":488,"column":54,"offset":12047},"indent":[]}},{"type":"text","value":") extra space?","position":{"start":{"line":488,"column":54,"offset":12047},"end":{"line":488,"column":68,"offset":12061},"indent":[]}}],"position":{"start":{"line":488,"column":1,"offset":11994},"end":{"line":488,"column":68,"offset":12061},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":490,"column":5,"offset":12069},"end":{"line":490,"column":13,"offset":12077},"indent":[]}}],"position":{"start":{"line":490,"column":1,"offset":12065},"end":{"line":490,"column":13,"offset":12077},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic Programming 101 with dynamic array.","position":{"start":{"line":492,"column":1,"offset":12081},"end":{"line":492,"column":44,"offset":12124},"indent":[]}}],"position":{"start":{"line":492,"column":1,"offset":12081},"end":{"line":492,"column":44,"offset":12124},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"State ","position":{"start":{"line":494,"column":1,"offset":12128},"end":{"line":494,"column":7,"offset":12134},"indent":[]}},{"type":"inlineCode","value":"(i, j)","position":{"start":{"line":494,"column":7,"offset":12134},"end":{"line":494,"column":15,"offset":12142},"indent":[]}},{"type":"text","value":" depends on ","position":{"start":{"line":494,"column":15,"offset":12142},"end":{"line":494,"column":27,"offset":12154},"indent":[]}},{"type":"inlineCode","value":"(i-1, j)","position":{"start":{"line":494,"column":27,"offset":12154},"end":{"line":494,"column":37,"offset":12164},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":494,"column":37,"offset":12164},"end":{"line":494,"column":42,"offset":12169},"indent":[]}},{"type":"inlineCode","value":"(i-1, j-1)","position":{"start":{"line":494,"column":42,"offset":12169},"end":{"line":494,"column":54,"offset":12181},"indent":[]}},{"type":"text","value":". So to access ","position":{"start":{"line":494,"column":54,"offset":12181},"end":{"line":494,"column":69,"offset":12196},"indent":[]}},{"type":"inlineCode","value":"(i-1, j-1)","position":{"start":{"line":494,"column":69,"offset":12196},"end":{"line":494,"column":81,"offset":12208},"indent":[]}},{"type":"text","value":" iteration must be from right to left.","position":{"start":{"line":494,"column":81,"offset":12208},"end":{"line":494,"column":119,"offset":12246},"indent":[]}}],"position":{"start":{"line":494,"column":1,"offset":12128},"end":{"line":494,"column":119,"offset":12246},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number} rowIndex\n * @return {number[]}\n */\nlet getRow = function (rowIndex) {\n    if (rowIndex < 0) {\n        return [];\n    }\n\n    const row = [1];\n    for (let i = 1; i <= rowIndex; i++) {\n        for (let j = i - 1; j > 0; j--) {\n            row[j] += row[j - 1];\n        }\n        row.push(1);\n    }\n\n    return row;\n};","position":{"start":{"line":496,"column":1,"offset":12250},"end":{"line":516,"column":4,"offset":12618},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":518,"column":1,"offset":12622},"end":{"line":518,"column":4,"offset":12625},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Array\": ","position":{"start":{"line":520,"column":1,"offset":12629},"end":{"line":522,"column":10,"offset":12675},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":522,"column":11,"offset":12676},"end":{"line":522,"column":41,"offset":12706},"indent":[]}}],"position":{"start":{"line":522,"column":10,"offset":12675},"end":{"line":522,"column":42,"offset":12707},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":522,"column":42,"offset":12707},"end":{"line":523,"column":24,"offset":12732},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":523,"column":25,"offset":12733},"end":{"line":523,"column":69,"offset":12777},"indent":[]}}],"position":{"start":{"line":523,"column":24,"offset":12732},"end":{"line":523,"column":70,"offset":12778},"indent":[]}}],"position":{"start":{"line":520,"column":1,"offset":12629},"end":{"line":523,"column":70,"offset":12778},"indent":[1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":525,"column":1,"offset":12782},"end":{"line":525,"column":4,"offset":12785},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#120-trianglehttpsleetcodecomproblemstriangledescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":527,"column":2,"offset":12790},"end":{"line":527,"column":142,"offset":12930},"indent":[]}}],"position":{"start":{"line":527,"column":1,"offset":12789},"end":{"line":527,"column":201,"offset":12989},"indent":[]}}],"position":{"start":{"line":527,"column":1,"offset":12789},"end":{"line":527,"column":201,"offset":12989},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":529,"column":4,"offset":12996},"end":{"line":529,"column":6,"offset":12998},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/triangle/description/","children":[{"type":"text","value":"120. Triangle","position":{"start":{"line":529,"column":7,"offset":12999},"end":{"line":529,"column":20,"offset":13012},"indent":[]}}],"position":{"start":{"line":529,"column":6,"offset":12998},"end":{"line":529,"column":74,"offset":13066},"indent":[]}}],"position":{"start":{"line":529,"column":1,"offset":12993},"end":{"line":529,"column":74,"offset":13066},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":531,"column":5,"offset":13074},"end":{"line":531,"column":12,"offset":13081},"indent":[]}}],"position":{"start":{"line":531,"column":1,"offset":13070},"end":{"line":531,"column":12,"offset":13081},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.","position":{"start":{"line":533,"column":1,"offset":13085},"end":{"line":533,"column":125,"offset":13209},"indent":[]}}],"position":{"start":{"line":533,"column":1,"offset":13085},"end":{"line":533,"column":125,"offset":13209},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, given the following triangle","position":{"start":{"line":535,"column":1,"offset":13213},"end":{"line":535,"column":42,"offset":13254},"indent":[]}}],"position":{"start":{"line":535,"column":1,"offset":13213},"end":{"line":535,"column":42,"offset":13254},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]","position":{"start":{"line":537,"column":1,"offset":13258},"end":{"line":545,"column":4,"offset":13323},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The minimum path sum from top to bottom is ","position":{"start":{"line":547,"column":1,"offset":13327},"end":{"line":547,"column":44,"offset":13370},"indent":[]}},{"type":"inlineCode","value":"11","position":{"start":{"line":547,"column":44,"offset":13370},"end":{"line":547,"column":48,"offset":13374},"indent":[]}},{"type":"text","value":" (i.e., ","position":{"start":{"line":547,"column":48,"offset":13374},"end":{"line":547,"column":56,"offset":13382},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"2","position":{"start":{"line":547,"column":58,"offset":13384},"end":{"line":547,"column":59,"offset":13385},"indent":[]}}],"position":{"start":{"line":547,"column":56,"offset":13382},"end":{"line":547,"column":61,"offset":13387},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":547,"column":61,"offset":13387},"end":{"line":547,"column":64,"offset":13390},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"3","position":{"start":{"line":547,"column":66,"offset":13392},"end":{"line":547,"column":67,"offset":13393},"indent":[]}}],"position":{"start":{"line":547,"column":64,"offset":13390},"end":{"line":547,"column":69,"offset":13395},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":547,"column":69,"offset":13395},"end":{"line":547,"column":72,"offset":13398},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"5","position":{"start":{"line":547,"column":74,"offset":13400},"end":{"line":547,"column":75,"offset":13401},"indent":[]}}],"position":{"start":{"line":547,"column":72,"offset":13398},"end":{"line":547,"column":77,"offset":13403},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":547,"column":77,"offset":13403},"end":{"line":547,"column":80,"offset":13406},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"1","position":{"start":{"line":547,"column":82,"offset":13408},"end":{"line":547,"column":83,"offset":13409},"indent":[]}}],"position":{"start":{"line":547,"column":80,"offset":13406},"end":{"line":547,"column":85,"offset":13411},"indent":[]}},{"type":"text","value":" = 11).","position":{"start":{"line":547,"column":85,"offset":13411},"end":{"line":547,"column":92,"offset":13418},"indent":[]}}],"position":{"start":{"line":547,"column":1,"offset":13327},"end":{"line":547,"column":92,"offset":13418},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":549,"column":3,"offset":13424},"end":{"line":549,"column":8,"offset":13429},"indent":[]}}],"position":{"start":{"line":549,"column":1,"offset":13422},"end":{"line":549,"column":10,"offset":13431},"indent":[]}}],"position":{"start":{"line":549,"column":1,"offset":13422},"end":{"line":549,"column":10,"offset":13431},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Bonus point if you are able to do this using only ","position":{"start":{"line":551,"column":1,"offset":13435},"end":{"line":551,"column":51,"offset":13485},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"O","position":{"start":{"line":551,"column":52,"offset":13486},"end":{"line":551,"column":53,"offset":13487},"indent":[]}}],"position":{"start":{"line":551,"column":51,"offset":13485},"end":{"line":551,"column":54,"offset":13488},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":551,"column":54,"offset":13488},"end":{"line":551,"column":55,"offset":13489},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":551,"column":56,"offset":13490},"end":{"line":551,"column":57,"offset":13491},"indent":[]}}],"position":{"start":{"line":551,"column":55,"offset":13489},"end":{"line":551,"column":58,"offset":13492},"indent":[]}},{"type":"text","value":") extra space, where ","position":{"start":{"line":551,"column":58,"offset":13492},"end":{"line":551,"column":79,"offset":13513},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":551,"column":80,"offset":13514},"end":{"line":551,"column":81,"offset":13515},"indent":[]}}],"position":{"start":{"line":551,"column":79,"offset":13513},"end":{"line":551,"column":82,"offset":13516},"indent":[]}},{"type":"text","value":" is the total number of rows in the triangle.","position":{"start":{"line":551,"column":82,"offset":13516},"end":{"line":551,"column":127,"offset":13561},"indent":[]}}],"position":{"start":{"line":551,"column":1,"offset":13435},"end":{"line":551,"column":127,"offset":13561},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":553,"column":5,"offset":13569},"end":{"line":553,"column":13,"offset":13577},"indent":[]}}],"position":{"start":{"line":553,"column":1,"offset":13565},"end":{"line":553,"column":13,"offset":13577},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":555,"column":1,"offset":13581},"end":{"line":555,"column":8,"offset":13588},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":555,"column":8,"offset":13588},"end":{"line":555,"column":17,"offset":13597},"indent":[]}},{"type":"text","value":" to be the minimum path sum from ","position":{"start":{"line":555,"column":17,"offset":13597},"end":{"line":555,"column":50,"offset":13630},"indent":[]}},{"type":"inlineCode","value":"triangle[0][0]","position":{"start":{"line":555,"column":50,"offset":13630},"end":{"line":555,"column":66,"offset":13646},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":555,"column":66,"offset":13646},"end":{"line":555,"column":70,"offset":13650},"indent":[]}},{"type":"inlineCode","value":"triangle[i][j]","position":{"start":{"line":555,"column":70,"offset":13650},"end":{"line":555,"column":86,"offset":13666},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":555,"column":86,"offset":13666},"end":{"line":555,"column":87,"offset":13667},"indent":[]}}],"position":{"start":{"line":555,"column":1,"offset":13581},"end":{"line":555,"column":87,"offset":13667},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"f(i, 0) = f(i-1, j) + triangle[i][0]\nf(i, j) = min( f(i-1, j-1), f(i-1, j) ) + triangle[i][j], 0 < j < i\nf(i, i) = f(i-1, i-1) + triangle[i][i], i > 0","position":{"start":{"line":557,"column":1,"offset":13671},"end":{"line":559,"column":50,"offset":13835},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":561,"column":1,"offset":13839},"end":{"line":561,"column":27,"offset":13865},"indent":[]}}],"position":{"start":{"line":561,"column":1,"offset":13839},"end":{"line":561,"column":27,"offset":13865},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[][]} triangle\n * @return {number}\n */\nlet minimumTotal = function (triangle) {\n    if (triangle.length <= 0) {\n        return 0;\n    }\n\n    const dp = [triangle[0][0]];\n    for (let i = 1; i < triangle.length; i++) {\n        dp[i] = dp[i - 1] + triangle[i][i];\n        for (let j = i - 1; j >= 1; j--) {\n            dp[j] = Math.min(dp[j], dp[j - 1]) + triangle[i][j];\n        }\n        dp[0] += triangle[i][0];\n    }\n    return Math.min(...dp);\n};","position":{"start":{"line":563,"column":1,"offset":13869},"end":{"line":583,"column":4,"offset":14369},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":585,"column":1,"offset":14373},"end":{"line":585,"column":4,"offset":14376},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":587,"column":1,"offset":14380},"end":{"line":589,"column":10,"offset":14424},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":589,"column":11,"offset":14425},"end":{"line":589,"column":41,"offset":14455},"indent":[]}}],"position":{"start":{"line":589,"column":10,"offset":14424},"end":{"line":589,"column":42,"offset":14456},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":589,"column":42,"offset":14456},"end":{"line":590,"column":24,"offset":14481},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":590,"column":25,"offset":14482},"end":{"line":590,"column":69,"offset":14526},"indent":[]}}],"position":{"start":{"line":590,"column":24,"offset":14481},"end":{"line":590,"column":70,"offset":14527},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Maximum Subarray\": ","position":{"start":{"line":590,"column":70,"offset":14527},"end":{"line":592,"column":21,"offset":14569},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/maximum-subarray","children":[{"type":"text","value":"https://leetcode.com/problems/maximum-subarray","position":{"start":{"line":592,"column":22,"offset":14570},"end":{"line":592,"column":68,"offset":14616},"indent":[]}}],"position":{"start":{"line":592,"column":21,"offset":14569},"end":{"line":592,"column":69,"offset":14617},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":592,"column":69,"offset":14617},"end":{"line":593,"column":39,"offset":14657},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":593,"column":40,"offset":14658},"end":{"line":593,"column":104,"offset":14722},"indent":[]}}],"position":{"start":{"line":593,"column":39,"offset":14657},"end":{"line":593,"column":105,"offset":14723},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":593,"column":105,"offset":14723},"end":{"line":594,"column":40,"offset":14764},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":594,"column":41,"offset":14765},"end":{"line":594,"column":106,"offset":14830},"indent":[]}}],"position":{"start":{"line":594,"column":40,"offset":14764},"end":{"line":594,"column":107,"offset":14831},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":594,"column":107,"offset":14831},"end":{"line":595,"column":39,"offset":14871},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":595,"column":40,"offset":14872},"end":{"line":595,"column":104,"offset":14936},"indent":[]}}],"position":{"start":{"line":595,"column":39,"offset":14871},"end":{"line":595,"column":105,"offset":14937},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":595,"column":105,"offset":14937},"end":{"line":596,"column":50,"offset":14988},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":596,"column":51,"offset":14989},"end":{"line":596,"column":126,"offset":15064},"indent":[]}}],"position":{"start":{"line":596,"column":50,"offset":14988},"end":{"line":596,"column":127,"offset":15065},"indent":[]}}],"position":{"start":{"line":587,"column":1,"offset":14380},"end":{"line":596,"column":127,"offset":15065},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":598,"column":1,"offset":15069},"end":{"line":598,"column":4,"offset":15072},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#121-best-time-to-buy-and-sell-stockhttpsleetcodecomproblemsbest-time-to-buy-and-sell-stockdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":600,"column":2,"offset":15077},"end":{"line":600,"column":142,"offset":15217},"indent":[]}}],"position":{"start":{"line":600,"column":1,"offset":15076},"end":{"line":600,"column":247,"offset":15322},"indent":[]}}],"position":{"start":{"line":600,"column":1,"offset":15076},"end":{"line":600,"column":247,"offset":15322},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":602,"column":4,"offset":15329},"end":{"line":602,"column":6,"offset":15331},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/","children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":602,"column":7,"offset":15332},"end":{"line":602,"column":43,"offset":15368},"indent":[]}}],"position":{"start":{"line":602,"column":6,"offset":15331},"end":{"line":602,"column":120,"offset":15445},"indent":[]}}],"position":{"start":{"line":602,"column":1,"offset":15326},"end":{"line":602,"column":120,"offset":15445},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":604,"column":5,"offset":15453},"end":{"line":604,"column":12,"offset":15460},"indent":[]}}],"position":{"start":{"line":604,"column":1,"offset":15449},"end":{"line":604,"column":12,"offset":15460},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":606,"column":1,"offset":15464},"end":{"line":606,"column":37,"offset":15500},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":606,"column":38,"offset":15501},"end":{"line":606,"column":39,"offset":15502},"indent":[]}}],"position":{"start":{"line":606,"column":37,"offset":15500},"end":{"line":606,"column":40,"offset":15503},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day","position":{"start":{"line":606,"column":40,"offset":15503},"end":{"line":606,"column":87,"offset":15550},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":606,"column":88,"offset":15551},"end":{"line":606,"column":89,"offset":15552},"indent":[]}}],"position":{"start":{"line":606,"column":87,"offset":15550},"end":{"line":606,"column":90,"offset":15553},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":606,"column":90,"offset":15553},"end":{"line":606,"column":91,"offset":15554},"indent":[]}}],"position":{"start":{"line":606,"column":1,"offset":15464},"end":{"line":606,"column":91,"offset":15554},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.","position":{"start":{"line":608,"column":1,"offset":15558},"end":{"line":608,"column":160,"offset":15717},"indent":[]}}],"position":{"start":{"line":608,"column":1,"offset":15558},"end":{"line":608,"column":160,"offset":15717},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that you cannot sell a stock before you buy one.","position":{"start":{"line":610,"column":1,"offset":15721},"end":{"line":610,"column":54,"offset":15774},"indent":[]}}],"position":{"start":{"line":610,"column":1,"offset":15721},"end":{"line":610,"column":54,"offset":15774},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":612,"column":3,"offset":15780},"end":{"line":612,"column":13,"offset":15790},"indent":[]}}],"position":{"start":{"line":612,"column":1,"offset":15778},"end":{"line":612,"column":15,"offset":15792},"indent":[]}}],"position":{"start":{"line":612,"column":1,"offset":15778},"end":{"line":612,"column":15,"offset":15792},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n             Not 7-1 = 6, as selling price needs to be larger than buying price.","position":{"start":{"line":614,"column":1,"offset":15796},"end":{"line":620,"column":4,"offset":16009},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":622,"column":3,"offset":16015},"end":{"line":622,"column":13,"offset":16025},"indent":[]}}],"position":{"start":{"line":622,"column":1,"offset":16013},"end":{"line":622,"column":15,"offset":16027},"indent":[]}}],"position":{"start":{"line":622,"column":1,"offset":16013},"end":{"line":622,"column":15,"offset":16027},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":624,"column":1,"offset":16031},"end":{"line":629,"column":4,"offset":16145},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":631,"column":5,"offset":16153},"end":{"line":631,"column":13,"offset":16161},"indent":[]}}],"position":{"start":{"line":631,"column":1,"offset":16149},"end":{"line":631,"column":13,"offset":16161},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Only care about positive profits. Take the frist item as base and scan to the right. If we encounter an item ","position":{"start":{"line":633,"column":1,"offset":16165},"end":{"line":633,"column":110,"offset":16274},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":633,"column":110,"offset":16274},"end":{"line":633,"column":113,"offset":16277},"indent":[]}},{"type":"text","value":" whose price ","position":{"start":{"line":633,"column":113,"offset":16277},"end":{"line":633,"column":126,"offset":16290},"indent":[]}},{"type":"inlineCode","value":"price[j]","position":{"start":{"line":633,"column":126,"offset":16290},"end":{"line":633,"column":136,"offset":16300},"indent":[]}},{"type":"text","value":" is lower than the base (which means if we sell now the profit would be negative), we sell ","position":{"start":{"line":633,"column":136,"offset":16300},"end":{"line":633,"column":227,"offset":16391},"indent":[]}},{"type":"inlineCode","value":"j-1","position":{"start":{"line":633,"column":227,"offset":16391},"end":{"line":633,"column":232,"offset":16396},"indent":[]}},{"type":"text","value":" instead and make ","position":{"start":{"line":633,"column":232,"offset":16396},"end":{"line":633,"column":250,"offset":16414},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":633,"column":250,"offset":16414},"end":{"line":633,"column":253,"offset":16417},"indent":[]}},{"type":"text","value":" the new base.","position":{"start":{"line":633,"column":253,"offset":16417},"end":{"line":633,"column":267,"offset":16431},"indent":[]}}],"position":{"start":{"line":633,"column":1,"offset":16165},"end":{"line":633,"column":267,"offset":16431},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Because ","position":{"start":{"line":635,"column":1,"offset":16435},"end":{"line":635,"column":9,"offset":16443},"indent":[]}},{"type":"inlineCode","value":"price[j]","position":{"start":{"line":635,"column":9,"offset":16443},"end":{"line":635,"column":19,"offset":16453},"indent":[]}},{"type":"text","value":" is lower that the base, using ","position":{"start":{"line":635,"column":19,"offset":16453},"end":{"line":635,"column":50,"offset":16484},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":635,"column":50,"offset":16484},"end":{"line":635,"column":53,"offset":16487},"indent":[]}},{"type":"text","value":" as new base is guaranteed to gain more profit comparing to the old one.","position":{"start":{"line":635,"column":53,"offset":16487},"end":{"line":635,"column":125,"offset":16559},"indent":[]}}],"position":{"start":{"line":635,"column":1,"offset":16435},"end":{"line":635,"column":125,"offset":16559},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    let base = prices[0];\n    for (let i = 1; i < prices.length; i++) {\n        const profit = prices[i] - base;\n        if (profit > max) {\n            max = profit;\n        } else if (profit < 0) {\n            base = prices[i];\n        }\n    }\n    return max;\n};","position":{"start":{"line":637,"column":1,"offset":16563},"end":{"line":655,"column":4,"offset":16964},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":657,"column":1,"offset":16968},"end":{"line":657,"column":4,"offset":16971},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":659,"column":1,"offset":16975},"end":{"line":661,"column":10,"offset":17019},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":661,"column":11,"offset":17020},"end":{"line":661,"column":41,"offset":17050},"indent":[]}}],"position":{"start":{"line":661,"column":10,"offset":17019},"end":{"line":661,"column":42,"offset":17051},"indent":[]}},{"type":"text","value":"\n\"Greedy\": ","position":{"start":{"line":661,"column":42,"offset":17051},"end":{"line":662,"column":11,"offset":17063},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/greedy","children":[{"type":"text","value":"https://leetcode.com/tag/greedy","position":{"start":{"line":662,"column":12,"offset":17064},"end":{"line":662,"column":43,"offset":17095},"indent":[]}}],"position":{"start":{"line":662,"column":11,"offset":17063},"end":{"line":662,"column":44,"offset":17096},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":662,"column":44,"offset":17096},"end":{"line":664,"column":36,"offset":17153},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":664,"column":37,"offset":17154},"end":{"line":664,"column":98,"offset":17215},"indent":[]}}],"position":{"start":{"line":664,"column":36,"offset":17153},"end":{"line":664,"column":99,"offset":17216},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":664,"column":99,"offset":17216},"end":{"line":665,"column":40,"offset":17257},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":665,"column":41,"offset":17258},"end":{"line":665,"column":106,"offset":17323},"indent":[]}}],"position":{"start":{"line":665,"column":40,"offset":17257},"end":{"line":665,"column":107,"offset":17324},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":665,"column":107,"offset":17324},"end":{"line":666,"column":39,"offset":17364},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":666,"column":40,"offset":17365},"end":{"line":666,"column":104,"offset":17429},"indent":[]}}],"position":{"start":{"line":666,"column":39,"offset":17364},"end":{"line":666,"column":105,"offset":17430},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":666,"column":105,"offset":17430},"end":{"line":667,"column":50,"offset":17481},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":667,"column":51,"offset":17482},"end":{"line":667,"column":126,"offset":17557},"indent":[]}}],"position":{"start":{"line":667,"column":50,"offset":17481},"end":{"line":667,"column":127,"offset":17558},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Transaction Fee\": ","position":{"start":{"line":667,"column":127,"offset":17558},"end":{"line":668,"column":57,"offset":17616},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","position":{"start":{"line":668,"column":58,"offset":17617},"end":{"line":668,"column":140,"offset":17699},"indent":[]}}],"position":{"start":{"line":668,"column":57,"offset":17616},"end":{"line":668,"column":141,"offset":17700},"indent":[]}}],"position":{"start":{"line":659,"column":1,"offset":16975},"end":{"line":668,"column":141,"offset":17700},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":670,"column":1,"offset":17704},"end":{"line":670,"column":4,"offset":17707},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#122-best-time-to-buy-and-sell-stock-iihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":672,"column":2,"offset":17712},"end":{"line":672,"column":142,"offset":17852},"indent":[]}}],"position":{"start":{"line":672,"column":1,"offset":17711},"end":{"line":672,"column":253,"offset":17963},"indent":[]}}],"position":{"start":{"line":672,"column":1,"offset":17711},"end":{"line":672,"column":253,"offset":17963},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":674,"column":4,"offset":17970},"end":{"line":674,"column":6,"offset":17972},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/","children":[{"type":"text","value":"122. Best Time to Buy and Sell Stock II","position":{"start":{"line":674,"column":7,"offset":17973},"end":{"line":674,"column":46,"offset":18012},"indent":[]}}],"position":{"start":{"line":674,"column":6,"offset":17972},"end":{"line":674,"column":126,"offset":18092},"indent":[]}}],"position":{"start":{"line":674,"column":1,"offset":17967},"end":{"line":674,"column":126,"offset":18092},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":676,"column":5,"offset":18100},"end":{"line":676,"column":12,"offset":18107},"indent":[]}}],"position":{"start":{"line":676,"column":1,"offset":18096},"end":{"line":676,"column":12,"offset":18107},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":678,"column":1,"offset":18111},"end":{"line":678,"column":37,"offset":18147},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":678,"column":38,"offset":18148},"end":{"line":678,"column":39,"offset":18149},"indent":[]}}],"position":{"start":{"line":678,"column":37,"offset":18147},"end":{"line":678,"column":40,"offset":18150},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day","position":{"start":{"line":678,"column":40,"offset":18150},"end":{"line":678,"column":87,"offset":18197},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":678,"column":88,"offset":18198},"end":{"line":678,"column":89,"offset":18199},"indent":[]}}],"position":{"start":{"line":678,"column":87,"offset":18197},"end":{"line":678,"column":90,"offset":18200},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":678,"column":90,"offset":18200},"end":{"line":678,"column":91,"offset":18201},"indent":[]}}],"position":{"start":{"line":678,"column":1,"offset":18111},"end":{"line":678,"column":91,"offset":18201},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).","position":{"start":{"line":680,"column":1,"offset":18205},"end":{"line":680,"column":162,"offset":18366},"indent":[]}}],"position":{"start":{"line":680,"column":1,"offset":18205},"end":{"line":680,"column":162,"offset":18366},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":682,"column":3,"offset":18372},"end":{"line":682,"column":8,"offset":18377},"indent":[]}}],"position":{"start":{"line":682,"column":1,"offset":18370},"end":{"line":682,"column":10,"offset":18379},"indent":[]}},{"type":"text","value":" You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":682,"column":10,"offset":18379},"end":{"line":682,"column":125,"offset":18494},"indent":[]}}],"position":{"start":{"line":682,"column":1,"offset":18370},"end":{"line":682,"column":125,"offset":18494},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":684,"column":3,"offset":18500},"end":{"line":684,"column":13,"offset":18510},"indent":[]}}],"position":{"start":{"line":684,"column":1,"offset":18498},"end":{"line":684,"column":15,"offset":18512},"indent":[]}}],"position":{"start":{"line":684,"column":1,"offset":18498},"end":{"line":684,"column":15,"offset":18512},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.","position":{"start":{"line":686,"column":1,"offset":18516},"end":{"line":692,"column":4,"offset":18740},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":694,"column":3,"offset":18746},"end":{"line":694,"column":13,"offset":18756},"indent":[]}}],"position":{"start":{"line":694,"column":1,"offset":18744},"end":{"line":694,"column":15,"offset":18758},"indent":[]}}],"position":{"start":{"line":694,"column":1,"offset":18744},"end":{"line":694,"column":15,"offset":18758},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.","position":{"start":{"line":696,"column":1,"offset":18762},"end":{"line":703,"column":4,"offset":19083},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":705,"column":3,"offset":19089},"end":{"line":705,"column":13,"offset":19099},"indent":[]}}],"position":{"start":{"line":705,"column":1,"offset":19087},"end":{"line":705,"column":15,"offset":19101},"indent":[]}}],"position":{"start":{"line":705,"column":1,"offset":19087},"end":{"line":705,"column":15,"offset":19101},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":707,"column":1,"offset":19105},"end":{"line":709,"column":76,"offset":19219},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":711,"column":5,"offset":19227},"end":{"line":711,"column":13,"offset":19235},"indent":[]}}],"position":{"start":{"line":711,"column":1,"offset":19223},"end":{"line":711,"column":13,"offset":19235},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Sell immediately after the price drops. Or in other perspective, it is the sum of all the incremental pairs (buy in then immediately sell out).","position":{"start":{"line":713,"column":1,"offset":19239},"end":{"line":713,"column":144,"offset":19382},"indent":[]}}],"position":{"start":{"line":713,"column":1,"offset":19239},"end":{"line":713,"column":144,"offset":19382},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    for (let i = 1; i < prices.length; i++) {\n        if (prices[i] > prices[i - 1]) {\n            max += prices[i] - prices[i - 1];\n        }\n    }\n    return max;\n};","position":{"start":{"line":715,"column":1,"offset":19386},"end":{"line":729,"column":4,"offset":19686},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":731,"column":1,"offset":19690},"end":{"line":731,"column":4,"offset":19693},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":733,"column":1,"offset":19697},"end":{"line":735,"column":10,"offset":19741},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":735,"column":11,"offset":19742},"end":{"line":735,"column":41,"offset":19772},"indent":[]}}],"position":{"start":{"line":735,"column":10,"offset":19741},"end":{"line":735,"column":42,"offset":19773},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":735,"column":42,"offset":19773},"end":{"line":736,"column":24,"offset":19798},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":736,"column":25,"offset":19799},"end":{"line":736,"column":69,"offset":19843},"indent":[]}}],"position":{"start":{"line":736,"column":24,"offset":19798},"end":{"line":736,"column":70,"offset":19844},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":736,"column":70,"offset":19844},"end":{"line":738,"column":36,"offset":19901},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":738,"column":37,"offset":19902},"end":{"line":738,"column":98,"offset":19963},"indent":[]}}],"position":{"start":{"line":738,"column":36,"offset":19901},"end":{"line":738,"column":99,"offset":19964},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":738,"column":99,"offset":19964},"end":{"line":739,"column":39,"offset":20004},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":739,"column":40,"offset":20005},"end":{"line":739,"column":104,"offset":20069},"indent":[]}}],"position":{"start":{"line":739,"column":39,"offset":20004},"end":{"line":739,"column":105,"offset":20070},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":739,"column":105,"offset":20070},"end":{"line":740,"column":39,"offset":20110},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":740,"column":40,"offset":20111},"end":{"line":740,"column":104,"offset":20175},"indent":[]}}],"position":{"start":{"line":740,"column":39,"offset":20110},"end":{"line":740,"column":105,"offset":20176},"indent":[]}},{"type":"text","value":"\n\"Maximum Sum of 3 Non-Overlapping Subarrays\": ","position":{"start":{"line":740,"column":105,"offset":20176},"end":{"line":741,"column":47,"offset":20224},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","children":[{"type":"text","value":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","position":{"start":{"line":741,"column":48,"offset":20225},"end":{"line":741,"column":120,"offset":20297},"indent":[]}}],"position":{"start":{"line":741,"column":47,"offset":20224},"end":{"line":741,"column":121,"offset":20298},"indent":[]}}],"position":{"start":{"line":733,"column":1,"offset":19697},"end":{"line":741,"column":121,"offset":20298},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":743,"column":1,"offset":20302},"end":{"line":743,"column":4,"offset":20305},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#123-best-time-to-buy-and-sell-stock-iiihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iiidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":745,"column":2,"offset":20310},"end":{"line":745,"column":142,"offset":20450},"indent":[]}}],"position":{"start":{"line":745,"column":1,"offset":20309},"end":{"line":745,"column":255,"offset":20563},"indent":[]}}],"position":{"start":{"line":745,"column":1,"offset":20309},"end":{"line":745,"column":255,"offset":20563},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":747,"column":4,"offset":20570},"end":{"line":747,"column":6,"offset":20572},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/","children":[{"type":"text","value":"123. Best Time to Buy and Sell Stock III","position":{"start":{"line":747,"column":7,"offset":20573},"end":{"line":747,"column":47,"offset":20613},"indent":[]}}],"position":{"start":{"line":747,"column":6,"offset":20572},"end":{"line":747,"column":128,"offset":20694},"indent":[]}}],"position":{"start":{"line":747,"column":1,"offset":20567},"end":{"line":747,"column":128,"offset":20694},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":749,"column":5,"offset":20702},"end":{"line":749,"column":12,"offset":20709},"indent":[]}}],"position":{"start":{"line":749,"column":1,"offset":20698},"end":{"line":749,"column":12,"offset":20709},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":751,"column":1,"offset":20713},"end":{"line":751,"column":37,"offset":20749},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":751,"column":38,"offset":20750},"end":{"line":751,"column":39,"offset":20751},"indent":[]}}],"position":{"start":{"line":751,"column":37,"offset":20749},"end":{"line":751,"column":40,"offset":20752},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day","position":{"start":{"line":751,"column":40,"offset":20752},"end":{"line":751,"column":87,"offset":20799},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":751,"column":88,"offset":20800},"end":{"line":751,"column":89,"offset":20801},"indent":[]}}],"position":{"start":{"line":751,"column":87,"offset":20799},"end":{"line":751,"column":90,"offset":20802},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":751,"column":90,"offset":20802},"end":{"line":751,"column":91,"offset":20803},"indent":[]}}],"position":{"start":{"line":751,"column":1,"offset":20713},"end":{"line":751,"column":91,"offset":20803},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete at most ","position":{"start":{"line":753,"column":1,"offset":20807},"end":{"line":753,"column":74,"offset":20880},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"two","position":{"start":{"line":753,"column":75,"offset":20881},"end":{"line":753,"column":78,"offset":20884},"indent":[]}}],"position":{"start":{"line":753,"column":74,"offset":20880},"end":{"line":753,"column":79,"offset":20885},"indent":[]}},{"type":"text","value":" transactions.","position":{"start":{"line":753,"column":79,"offset":20885},"end":{"line":753,"column":93,"offset":20899},"indent":[]}}],"position":{"start":{"line":753,"column":1,"offset":20807},"end":{"line":753,"column":93,"offset":20899},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"*","position":{"start":{"line":755,"column":1,"offset":20903},"end":{"line":755,"column":3,"offset":20905},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":755,"column":3,"offset":20905},"end":{"line":755,"column":5,"offset":20907},"indent":[]}},{"type":"text","value":"Note:","position":{"start":{"line":755,"column":5,"offset":20907},"end":{"line":755,"column":10,"offset":20912},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":755,"column":10,"offset":20912},"end":{"line":755,"column":12,"offset":20914},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":755,"column":12,"offset":20914},"end":{"line":755,"column":14,"offset":20916},"indent":[]}},{"type":"text","value":"You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":755,"column":14,"offset":20916},"end":{"line":755,"column":128,"offset":21030},"indent":[]}}],"position":{"start":{"line":755,"column":1,"offset":20903},"end":{"line":755,"column":128,"offset":21030},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":757,"column":3,"offset":21036},"end":{"line":757,"column":13,"offset":21046},"indent":[]}}],"position":{"start":{"line":757,"column":1,"offset":21034},"end":{"line":757,"column":15,"offset":21048},"indent":[]}}],"position":{"start":{"line":757,"column":1,"offset":21034},"end":{"line":757,"column":15,"offset":21048},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n             Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.","position":{"start":{"line":759,"column":1,"offset":21052},"end":{"line":762,"column":96,"offset":21284},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":764,"column":3,"offset":21290},"end":{"line":764,"column":13,"offset":21300},"indent":[]}}],"position":{"start":{"line":764,"column":1,"offset":21288},"end":{"line":764,"column":15,"offset":21302},"indent":[]}}],"position":{"start":{"line":764,"column":1,"offset":21288},"end":{"line":764,"column":15,"offset":21302},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.","position":{"start":{"line":766,"column":1,"offset":21306},"end":{"line":773,"column":4,"offset":21627},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":775,"column":3,"offset":21633},"end":{"line":775,"column":13,"offset":21643},"indent":[]}}],"position":{"start":{"line":775,"column":1,"offset":21631},"end":{"line":775,"column":15,"offset":21645},"indent":[]}}],"position":{"start":{"line":775,"column":1,"offset":21631},"end":{"line":775,"column":15,"offset":21645},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":777,"column":1,"offset":21649},"end":{"line":779,"column":76,"offset":21763},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":781,"column":5,"offset":21771},"end":{"line":781,"column":13,"offset":21779},"indent":[]}}],"position":{"start":{"line":781,"column":1,"offset":21767},"end":{"line":781,"column":13,"offset":21779},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Multiple transactions may not be engaged in at the same time. That means if we view the days that involed in the same transaction as a group, there won't be any intersection. We may complete at most ","position":{"start":{"line":783,"column":1,"offset":21783},"end":{"line":783,"column":200,"offset":21982},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"two","position":{"start":{"line":783,"column":201,"offset":21983},"end":{"line":783,"column":204,"offset":21986},"indent":[]}}],"position":{"start":{"line":783,"column":200,"offset":21982},"end":{"line":783,"column":205,"offset":21987},"indent":[]}},{"type":"text","value":" transactions, so divide the days into two groups, ","position":{"start":{"line":783,"column":205,"offset":21987},"end":{"line":783,"column":256,"offset":22038},"indent":[]}},{"type":"inlineCode","value":"[0...k]","position":{"start":{"line":783,"column":256,"offset":22038},"end":{"line":783,"column":265,"offset":22047},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":783,"column":265,"offset":22047},"end":{"line":783,"column":270,"offset":22052},"indent":[]}},{"type":"inlineCode","value":"[k...n-1]","position":{"start":{"line":783,"column":270,"offset":22052},"end":{"line":783,"column":281,"offset":22063},"indent":[]}},{"type":"text","value":". Notice ","position":{"start":{"line":783,"column":281,"offset":22063},"end":{"line":783,"column":290,"offset":22072},"indent":[]}},{"type":"inlineCode","value":"k","position":{"start":{"line":783,"column":290,"offset":22072},"end":{"line":783,"column":293,"offset":22075},"indent":[]}},{"type":"text","value":" exists in both groups because technically we can sell out then immediately buy in at the same day.","position":{"start":{"line":783,"column":293,"offset":22075},"end":{"line":783,"column":392,"offset":22174},"indent":[]}}],"position":{"start":{"line":783,"column":1,"offset":21783},"end":{"line":783,"column":392,"offset":22174},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":785,"column":1,"offset":22178},"end":{"line":785,"column":8,"offset":22185},"indent":[]}},{"type":"inlineCode","value":"p1(i)","position":{"start":{"line":785,"column":8,"offset":22185},"end":{"line":785,"column":15,"offset":22192},"indent":[]}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":785,"column":15,"offset":22192},"end":{"line":785,"column":44,"offset":22221},"indent":[]}},{"type":"inlineCode","value":"[0...i]","position":{"start":{"line":785,"column":44,"offset":22221},"end":{"line":785,"column":53,"offset":22230},"indent":[]}},{"type":"text","value":". This is just like the problem of ","position":{"start":{"line":785,"column":53,"offset":22230},"end":{"line":785,"column":88,"offset":22265},"indent":[]}},{"type":"link","title":null,"url":"./121.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock.md","children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":785,"column":89,"offset":22266},"end":{"line":785,"column":125,"offset":22302},"indent":[]}}],"position":{"start":{"line":785,"column":88,"offset":22265},"end":{"line":785,"column":183,"offset":22360},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":785,"column":183,"offset":22360},"end":{"line":785,"column":184,"offset":22361},"indent":[]}}],"position":{"start":{"line":785,"column":1,"offset":22178},"end":{"line":785,"column":184,"offset":22361},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"p1(0) = 0\np1(i) = max( p1(i-1), prices[i] - min(prices[0], ..., prices[i-1]) ), 0 < i <= n-1","position":{"start":{"line":787,"column":1,"offset":22365},"end":{"line":788,"column":87,"offset":22466},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":790,"column":1,"offset":22470},"end":{"line":790,"column":8,"offset":22477},"indent":[]}},{"type":"inlineCode","value":"p2(i)","position":{"start":{"line":790,"column":8,"offset":22477},"end":{"line":790,"column":15,"offset":22484},"indent":[]}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":790,"column":15,"offset":22484},"end":{"line":790,"column":44,"offset":22513},"indent":[]}},{"type":"inlineCode","value":"[i...n-1]","position":{"start":{"line":790,"column":44,"offset":22513},"end":{"line":790,"column":55,"offset":22524},"indent":[]}},{"type":"text","value":". This is the mirror of ","position":{"start":{"line":790,"column":55,"offset":22524},"end":{"line":790,"column":79,"offset":22548},"indent":[]}},{"type":"inlineCode","value":"p1","position":{"start":{"line":790,"column":79,"offset":22548},"end":{"line":790,"column":83,"offset":22552},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":790,"column":83,"offset":22552},"end":{"line":790,"column":84,"offset":22553},"indent":[]}}],"position":{"start":{"line":790,"column":1,"offset":22470},"end":{"line":790,"column":84,"offset":22553},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"p2(n-1) = 0\np2(i) = max( p2(i+1), max(prices[i], ..., prices[n-1]) - prices[i] ), n-1 > i >= 0","position":{"start":{"line":792,"column":1,"offset":22557},"end":{"line":793,"column":87,"offset":22660},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":795,"column":1,"offset":22664},"end":{"line":795,"column":8,"offset":22671},"indent":[]}},{"type":"inlineCode","value":"f(k)","position":{"start":{"line":795,"column":8,"offset":22671},"end":{"line":795,"column":14,"offset":22677},"indent":[]}},{"type":"text","value":" to be ","position":{"start":{"line":795,"column":14,"offset":22677},"end":{"line":795,"column":21,"offset":22684},"indent":[]}},{"type":"inlineCode","value":"p1(k) + p2(k)","position":{"start":{"line":795,"column":21,"offset":22684},"end":{"line":795,"column":36,"offset":22699},"indent":[]}},{"type":"text","value":". We need to get ","position":{"start":{"line":795,"column":36,"offset":22699},"end":{"line":795,"column":53,"offset":22716},"indent":[]}},{"type":"inlineCode","value":"max( f(0), ..., f(n-1) )","position":{"start":{"line":795,"column":53,"offset":22716},"end":{"line":795,"column":79,"offset":22742},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":795,"column":79,"offset":22742},"end":{"line":795,"column":80,"offset":22743},"indent":[]}}],"position":{"start":{"line":795,"column":1,"offset":22664},"end":{"line":795,"column":80,"offset":22743},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    const len = prices.length;\n    if (len <= 1) {\n        return 0;\n    }\n\n    const dp = [0];\n\n    let min = prices[0];\n    for (let i = 1; i < len; i++) {\n        dp[i] = Math.max(dp[i - 1], prices[i] - min);\n        min = Math.min(prices[i], min);\n    }\n\n    let p2 = 0;\n    let max = prices[len - 1];\n    for (let i = len - 2; i >= 0; i--) {\n        max = Math.max(prices[i], max);\n        p2 = Math.max(p2, max - prices[i]);\n        dp[i] += p2;\n    }\n\n    return Math.max(...dp);\n};","position":{"start":{"line":797,"column":1,"offset":22747},"end":{"line":826,"column":4,"offset":23367},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":828,"column":1,"offset":23371},"end":{"line":828,"column":4,"offset":23374},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":830,"column":1,"offset":23378},"end":{"line":832,"column":9,"offset":23421},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":832,"column":10,"offset":23422},"end":{"line":832,"column":39,"offset":23451},"indent":[]}}],"position":{"start":{"line":832,"column":9,"offset":23421},"end":{"line":832,"column":40,"offset":23452},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":832,"column":40,"offset":23452},"end":{"line":833,"column":23,"offset":23476},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":833,"column":24,"offset":23477},"end":{"line":833,"column":67,"offset":23520},"indent":[]}}],"position":{"start":{"line":833,"column":23,"offset":23476},"end":{"line":833,"column":68,"offset":23521},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":833,"column":68,"offset":23521},"end":{"line":835,"column":13,"offset":23555},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":835,"column":14,"offset":23556},"end":{"line":835,"column":52,"offset":23594},"indent":[]}}],"position":{"start":{"line":835,"column":13,"offset":23555},"end":{"line":835,"column":53,"offset":23595},"indent":[]}},{"type":"text","value":"\n\"Sum Root to Leaf Numbers\": ","position":{"start":{"line":835,"column":53,"offset":23595},"end":{"line":836,"column":29,"offset":23625},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/sum-root-to-leaf-numbers","children":[{"type":"text","value":"https://leetcode.com/problems/sum-root-to-leaf-numbers","position":{"start":{"line":836,"column":30,"offset":23626},"end":{"line":836,"column":84,"offset":23680},"indent":[]}}],"position":{"start":{"line":836,"column":29,"offset":23625},"end":{"line":836,"column":85,"offset":23681},"indent":[]}},{"type":"text","value":"\n\"Path Sum IV\": ","position":{"start":{"line":836,"column":85,"offset":23681},"end":{"line":837,"column":16,"offset":23698},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum-iv","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum-iv","position":{"start":{"line":837,"column":17,"offset":23699},"end":{"line":837,"column":58,"offset":23740},"indent":[]}}],"position":{"start":{"line":837,"column":16,"offset":23698},"end":{"line":837,"column":59,"offset":23741},"indent":[]}},{"type":"text","value":"\n\"Longest Univalue Path\": ","position":{"start":{"line":837,"column":59,"offset":23741},"end":{"line":838,"column":26,"offset":23768},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/longest-univalue-path","children":[{"type":"text","value":"https://leetcode.com/problems/longest-univalue-path","position":{"start":{"line":838,"column":27,"offset":23769},"end":{"line":838,"column":78,"offset":23820},"indent":[]}}],"position":{"start":{"line":838,"column":26,"offset":23768},"end":{"line":838,"column":79,"offset":23821},"indent":[]}}],"position":{"start":{"line":830,"column":1,"offset":23378},"end":{"line":838,"column":79,"offset":23821},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":840,"column":1,"offset":23825},"end":{"line":840,"column":4,"offset":23828},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#124-binary-tree-maximum-path-sumhttpsleetcodecomproblemsbinary-tree-maximum-path-sumdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":842,"column":2,"offset":23833},"end":{"line":842,"column":142,"offset":23973},"indent":[]}}],"position":{"start":{"line":842,"column":1,"offset":23832},"end":{"line":842,"column":241,"offset":24072},"indent":[]}}],"position":{"start":{"line":842,"column":1,"offset":23832},"end":{"line":842,"column":241,"offset":24072},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":844,"column":4,"offset":24079},"end":{"line":844,"column":6,"offset":24081},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-maximum-path-sum/description/","children":[{"type":"text","value":"124. Binary Tree Maximum Path Sum","position":{"start":{"line":844,"column":7,"offset":24082},"end":{"line":844,"column":40,"offset":24115},"indent":[]}}],"position":{"start":{"line":844,"column":6,"offset":24081},"end":{"line":844,"column":114,"offset":24189},"indent":[]}}],"position":{"start":{"line":844,"column":1,"offset":24076},"end":{"line":844,"column":114,"offset":24189},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":846,"column":5,"offset":24197},"end":{"line":846,"column":12,"offset":24204},"indent":[]}}],"position":{"start":{"line":846,"column":1,"offset":24193},"end":{"line":846,"column":12,"offset":24204},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a ","position":{"start":{"line":848,"column":1,"offset":24208},"end":{"line":848,"column":9,"offset":24216},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"non-empty","position":{"start":{"line":848,"column":11,"offset":24218},"end":{"line":848,"column":20,"offset":24227},"indent":[]}}],"position":{"start":{"line":848,"column":9,"offset":24216},"end":{"line":848,"column":22,"offset":24229},"indent":[]}},{"type":"text","value":" binary tree, find the maximum path sum.","position":{"start":{"line":848,"column":22,"offset":24229},"end":{"line":848,"column":62,"offset":24269},"indent":[]}}],"position":{"start":{"line":848,"column":1,"offset":24208},"end":{"line":848,"column":62,"offset":24269},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain ","position":{"start":{"line":850,"column":1,"offset":24273},"end":{"line":850,"column":168,"offset":24440},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"at least one node","position":{"start":{"line":850,"column":170,"offset":24442},"end":{"line":850,"column":187,"offset":24459},"indent":[]}}],"position":{"start":{"line":850,"column":168,"offset":24440},"end":{"line":850,"column":189,"offset":24461},"indent":[]}},{"type":"text","value":" and does not need to go through the root.","position":{"start":{"line":850,"column":189,"offset":24461},"end":{"line":850,"column":231,"offset":24503},"indent":[]}}],"position":{"start":{"line":850,"column":1,"offset":24273},"end":{"line":850,"column":231,"offset":24503},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":852,"column":3,"offset":24509},"end":{"line":852,"column":13,"offset":24519},"indent":[]}}],"position":{"start":{"line":852,"column":1,"offset":24507},"end":{"line":852,"column":15,"offset":24521},"indent":[]}}],"position":{"start":{"line":852,"column":1,"offset":24507},"end":{"line":852,"column":15,"offset":24521},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3]\n\n       1\n      / \\\n     2   3\n\nOutput: 6","position":{"start":{"line":854,"column":1,"offset":24525},"end":{"line":863,"column":4,"offset":24599},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":865,"column":3,"offset":24605},"end":{"line":865,"column":13,"offset":24615},"indent":[]}}],"position":{"start":{"line":865,"column":1,"offset":24603},"end":{"line":865,"column":15,"offset":24617},"indent":[]}}],"position":{"start":{"line":865,"column":1,"offset":24603},"end":{"line":865,"column":15,"offset":24617},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [-10,9,20,null,null,15,7]\n\n   -10\n   / \\\n  9  20\n    /  \\\n   15   7\n\nOutput: 42","position":{"start":{"line":867,"column":1,"offset":24621},"end":{"line":878,"column":4,"offset":24727},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":880,"column":5,"offset":24735},"end":{"line":880,"column":13,"offset":24743},"indent":[]}}],"position":{"start":{"line":880,"column":1,"offset":24731},"end":{"line":880,"column":13,"offset":24743},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For every ","position":{"start":{"line":882,"column":1,"offset":24747},"end":{"line":882,"column":11,"offset":24757},"indent":[]}},{"type":"inlineCode","value":"node","position":{"start":{"line":882,"column":11,"offset":24757},"end":{"line":882,"column":17,"offset":24763},"indent":[]}},{"type":"text","value":", there are six possible ways to get the max path sum:","position":{"start":{"line":882,"column":17,"offset":24763},"end":{"line":882,"column":71,"offset":24817},"indent":[]}}],"position":{"start":{"line":882,"column":1,"offset":24747},"end":{"line":882,"column":71,"offset":24817},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"With ","position":{"start":{"line":884,"column":3,"offset":24823},"end":{"line":884,"column":8,"offset":24828},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":884,"column":8,"offset":24828},"end":{"line":884,"column":18,"offset":24838},"indent":[]}}],"position":{"start":{"line":884,"column":3,"offset":24823},"end":{"line":884,"column":18,"offset":24838},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":885,"column":9,"offset":24848},"end":{"line":885,"column":19,"offset":24858},"indent":[]}},{"type":"text","value":" plus the max sum of a path that ends with ","position":{"start":{"line":885,"column":19,"offset":24858},"end":{"line":885,"column":62,"offset":24901},"indent":[]}},{"type":"inlineCode","value":"node.left","position":{"start":{"line":885,"column":62,"offset":24901},"end":{"line":885,"column":73,"offset":24912},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":885,"column":73,"offset":24912},"end":{"line":885,"column":74,"offset":24913},"indent":[]}}],"position":{"start":{"line":885,"column":9,"offset":24848},"end":{"line":885,"column":74,"offset":24913},"indent":[]}}],"position":{"start":{"line":885,"column":5,"offset":24844},"end":{"line":885,"column":74,"offset":24913},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":886,"column":9,"offset":24923},"end":{"line":886,"column":19,"offset":24933},"indent":[]}},{"type":"text","value":" plus the max sum of a path that starts with ","position":{"start":{"line":886,"column":19,"offset":24933},"end":{"line":886,"column":64,"offset":24978},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":886,"column":64,"offset":24978},"end":{"line":886,"column":76,"offset":24990},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":886,"column":76,"offset":24990},"end":{"line":886,"column":77,"offset":24991},"indent":[]}}],"position":{"start":{"line":886,"column":9,"offset":24923},"end":{"line":886,"column":77,"offset":24991},"indent":[]}}],"position":{"start":{"line":886,"column":5,"offset":24919},"end":{"line":886,"column":77,"offset":24991},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":887,"column":9,"offset":25001},"end":{"line":887,"column":19,"offset":25011},"indent":[]}},{"type":"text","value":" plus the max sum of both paths.","position":{"start":{"line":887,"column":19,"offset":25011},"end":{"line":887,"column":51,"offset":25043},"indent":[]}}],"position":{"start":{"line":887,"column":9,"offset":25001},"end":{"line":887,"column":51,"offset":25043},"indent":[]}}],"position":{"start":{"line":887,"column":5,"offset":24997},"end":{"line":887,"column":51,"offset":25043},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Just ","position":{"start":{"line":888,"column":9,"offset":25053},"end":{"line":888,"column":14,"offset":25058},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":888,"column":14,"offset":25058},"end":{"line":888,"column":24,"offset":25068},"indent":[]}},{"type":"text","value":" (the max sum of both paths are negative).","position":{"start":{"line":888,"column":24,"offset":25068},"end":{"line":888,"column":66,"offset":25110},"indent":[]}}],"position":{"start":{"line":888,"column":9,"offset":25053},"end":{"line":888,"column":66,"offset":25110},"indent":[]}}],"position":{"start":{"line":888,"column":5,"offset":25049},"end":{"line":888,"column":66,"offset":25110},"indent":[]}}],"position":{"start":{"line":885,"column":5,"offset":24844},"end":{"line":888,"column":66,"offset":25110},"indent":[5,5,5]}}],"position":{"start":{"line":884,"column":1,"offset":24821},"end":{"line":888,"column":66,"offset":25110},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Without","position":{"start":{"line":889,"column":3,"offset":25114},"end":{"line":889,"column":10,"offset":25121},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":889,"column":10,"offset":25121},"end":{"line":889,"column":20,"offset":25131},"indent":[]}},{"type":"text","value":" (disconnected)","position":{"start":{"line":889,"column":20,"offset":25131},"end":{"line":889,"column":35,"offset":25146},"indent":[]}}],"position":{"start":{"line":889,"column":3,"offset":25114},"end":{"line":889,"column":35,"offset":25146},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":890,"column":9,"offset":25156},"end":{"line":890,"column":49,"offset":25196},"indent":[]}},{"type":"inlineCode","value":"node.left","position":{"start":{"line":890,"column":49,"offset":25196},"end":{"line":890,"column":60,"offset":25207},"indent":[]}},{"type":"text","value":" subtree.","position":{"start":{"line":890,"column":60,"offset":25207},"end":{"line":890,"column":69,"offset":25216},"indent":[]}}],"position":{"start":{"line":890,"column":9,"offset":25156},"end":{"line":890,"column":69,"offset":25216},"indent":[]}}],"position":{"start":{"line":890,"column":5,"offset":25152},"end":{"line":890,"column":69,"offset":25216},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":891,"column":9,"offset":25226},"end":{"line":891,"column":49,"offset":25266},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":891,"column":49,"offset":25266},"end":{"line":891,"column":61,"offset":25278},"indent":[]}},{"type":"text","value":" subtree.","position":{"start":{"line":891,"column":61,"offset":25278},"end":{"line":891,"column":70,"offset":25287},"indent":[]}}],"position":{"start":{"line":891,"column":9,"offset":25226},"end":{"line":891,"column":70,"offset":25287},"indent":[]}}],"position":{"start":{"line":891,"column":5,"offset":25222},"end":{"line":891,"column":70,"offset":25287},"indent":[]}}],"position":{"start":{"line":890,"column":5,"offset":25152},"end":{"line":891,"column":70,"offset":25287},"indent":[5]}}],"position":{"start":{"line":889,"column":1,"offset":25112},"end":{"line":891,"column":70,"offset":25287},"indent":[1,1]}}],"position":{"start":{"line":884,"column":1,"offset":24821},"end":{"line":891,"column":70,"offset":25287},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are two ways to implement this.","position":{"start":{"line":893,"column":1,"offset":25291},"end":{"line":893,"column":38,"offset":25328},"indent":[]}}],"position":{"start":{"line":893,"column":1,"offset":25291},"end":{"line":893,"column":38,"offset":25328},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":895,"column":6,"offset":25337},"end":{"line":895,"column":9,"offset":25340},"indent":[]}}],"position":{"start":{"line":895,"column":1,"offset":25332},"end":{"line":895,"column":9,"offset":25340},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define a function that returns two values. The max sum of a path that may or may not end with ","position":{"start":{"line":897,"column":1,"offset":25344},"end":{"line":897,"column":95,"offset":25438},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":897,"column":95,"offset":25438},"end":{"line":897,"column":101,"offset":25444},"indent":[]}},{"type":"text","value":" node, and the max sum of the path that ends with ","position":{"start":{"line":897,"column":101,"offset":25444},"end":{"line":897,"column":151,"offset":25494},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":897,"column":151,"offset":25494},"end":{"line":897,"column":157,"offset":25500},"indent":[]}},{"type":"text","value":" node.","position":{"start":{"line":897,"column":157,"offset":25500},"end":{"line":897,"column":163,"offset":25506},"indent":[]}}],"position":{"start":{"line":897,"column":1,"offset":25344},"end":{"line":897,"column":163,"offset":25506},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    return Math.max(..._maxPathSum(root));\n};\n\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nfunction _maxPathSum(root) {\n    if (!root) {\n        return [-Infinity, -Infinity];\n    }\n\n    const left = _maxPathSum(root.left);\n    const right = _maxPathSum(root.right);\n    return [Math.max(left[0], right[0], root.val + Math.max(0, left[1], right[1], left[1] + right[1])), Math.max(left[1], right[1], 0) + root.val];\n}","position":{"start":{"line":899,"column":1,"offset":25510},"end":{"line":928,"column":4,"offset":26206},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":930,"column":6,"offset":26215},"end":{"line":930,"column":9,"offset":26218},"indent":[]}}],"position":{"start":{"line":930,"column":1,"offset":26210},"end":{"line":930,"column":9,"offset":26218},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just return the later (max sum of a path that ends with ","position":{"start":{"line":932,"column":1,"offset":26222},"end":{"line":932,"column":57,"offset":26278},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":932,"column":57,"offset":26278},"end":{"line":932,"column":63,"offset":26284},"indent":[]}},{"type":"text","value":"). Maintain a global variable to store the disconnected max sum.","position":{"start":{"line":932,"column":63,"offset":26284},"end":{"line":932,"column":127,"offset":26348},"indent":[]}}],"position":{"start":{"line":932,"column":1,"offset":26222},"end":{"line":932,"column":127,"offset":26348},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    const global = { max: -Infinity };\n    _maxPathSum(root, global);\n    return global.max;\n};\n\n/**\n * @param {TreeNode} root\n * @param {object} global\n * @param {number} global.max\n * @return {number[]}\n */\nfunction _maxPathSum(root, global) {\n    if (!root) {\n        return -Infinity;\n    }\n\n    const left = _maxPathSum(root.left, global);\n    const right = _maxPathSum(root.right, global);\n    const localMax = Math.max(left, right, 0) + root.val;\n    global.max = Math.max(global.max, localMax, root.val + left + right);\n    return localMax;\n}","position":{"start":{"line":934,"column":1,"offset":26352},"end":{"line":969,"column":4,"offset":27176},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":971,"column":1,"offset":27180},"end":{"line":971,"column":4,"offset":27183},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Two Pointers\": ","position":{"start":{"line":973,"column":1,"offset":27187},"end":{"line":975,"column":17,"offset":27238},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/two-pointers","children":[{"type":"text","value":"https://leetcode.com/tag/two-pointers","position":{"start":{"line":975,"column":18,"offset":27239},"end":{"line":975,"column":55,"offset":27276},"indent":[]}}],"position":{"start":{"line":975,"column":17,"offset":27238},"end":{"line":975,"column":56,"offset":27277},"indent":[]}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":975,"column":56,"offset":27277},"end":{"line":976,"column":11,"offset":27289},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/string","children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":976,"column":12,"offset":27290},"end":{"line":976,"column":43,"offset":27321},"indent":[]}}],"position":{"start":{"line":976,"column":11,"offset":27289},"end":{"line":976,"column":44,"offset":27322},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Palindrome Linked List\": ","position":{"start":{"line":976,"column":44,"offset":27322},"end":{"line":978,"column":27,"offset":27370},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/palindrome-linked-list","children":[{"type":"text","value":"https://leetcode.com/problems/palindrome-linked-list","position":{"start":{"line":978,"column":28,"offset":27371},"end":{"line":978,"column":80,"offset":27423},"indent":[]}}],"position":{"start":{"line":978,"column":27,"offset":27370},"end":{"line":978,"column":81,"offset":27424},"indent":[]}},{"type":"text","value":"\n\"Valid Palindrome II\": ","position":{"start":{"line":978,"column":81,"offset":27424},"end":{"line":979,"column":24,"offset":27449},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/valid-palindrome-ii","children":[{"type":"text","value":"https://leetcode.com/problems/valid-palindrome-ii","position":{"start":{"line":979,"column":25,"offset":27450},"end":{"line":979,"column":74,"offset":27499},"indent":[]}}],"position":{"start":{"line":979,"column":24,"offset":27449},"end":{"line":979,"column":75,"offset":27500},"indent":[]}}],"position":{"start":{"line":973,"column":1,"offset":27187},"end":{"line":979,"column":75,"offset":27500},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":981,"column":1,"offset":27504},"end":{"line":981,"column":4,"offset":27507},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#125-valid-palindromehttpsleetcodecomproblemsvalid-palindromedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":983,"column":2,"offset":27512},"end":{"line":983,"column":142,"offset":27652},"indent":[]}}],"position":{"start":{"line":983,"column":1,"offset":27511},"end":{"line":983,"column":217,"offset":27727},"indent":[]}}],"position":{"start":{"line":983,"column":1,"offset":27511},"end":{"line":983,"column":217,"offset":27727},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":985,"column":4,"offset":27734},"end":{"line":985,"column":6,"offset":27736},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/valid-palindrome/description/","children":[{"type":"text","value":"125. Valid Palindrome","position":{"start":{"line":985,"column":7,"offset":27737},"end":{"line":985,"column":28,"offset":27758},"indent":[]}}],"position":{"start":{"line":985,"column":6,"offset":27736},"end":{"line":985,"column":90,"offset":27820},"indent":[]}}],"position":{"start":{"line":985,"column":1,"offset":27731},"end":{"line":985,"column":90,"offset":27820},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":987,"column":5,"offset":27828},"end":{"line":987,"column":12,"offset":27835},"indent":[]}}],"position":{"start":{"line":987,"column":1,"offset":27824},"end":{"line":987,"column":12,"offset":27835},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.","position":{"start":{"line":989,"column":1,"offset":27839},"end":{"line":989,"column":110,"offset":27948},"indent":[]}}],"position":{"start":{"line":989,"column":1,"offset":27839},"end":{"line":989,"column":110,"offset":27948},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":991,"column":3,"offset":27954},"end":{"line":991,"column":8,"offset":27959},"indent":[]}}],"position":{"start":{"line":991,"column":1,"offset":27952},"end":{"line":991,"column":10,"offset":27961},"indent":[]}},{"type":"text","value":" For the purpose of this problem, we define empty string as valid palindrome.","position":{"start":{"line":991,"column":10,"offset":27961},"end":{"line":991,"column":87,"offset":28038},"indent":[]}}],"position":{"start":{"line":991,"column":1,"offset":27952},"end":{"line":991,"column":87,"offset":28038},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":993,"column":3,"offset":28044},"end":{"line":993,"column":13,"offset":28054},"indent":[]}}],"position":{"start":{"line":993,"column":1,"offset":28042},"end":{"line":993,"column":15,"offset":28056},"indent":[]}}],"position":{"start":{"line":993,"column":1,"offset":28042},"end":{"line":993,"column":15,"offset":28056},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: \"A man, a plan, a canal: Panama\"\nOutput: true","position":{"start":{"line":995,"column":1,"offset":28060},"end":{"line":999,"column":4,"offset":28125},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1001,"column":3,"offset":28131},"end":{"line":1001,"column":13,"offset":28141},"indent":[]}}],"position":{"start":{"line":1001,"column":1,"offset":28129},"end":{"line":1001,"column":15,"offset":28143},"indent":[]}}],"position":{"start":{"line":1001,"column":1,"offset":28129},"end":{"line":1001,"column":15,"offset":28143},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: \"race a car\"\nOutput: false","position":{"start":{"line":1003,"column":1,"offset":28147},"end":{"line":1007,"column":4,"offset":28193},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1009,"column":5,"offset":28201},"end":{"line":1009,"column":13,"offset":28209},"indent":[]}}],"position":{"start":{"line":1009,"column":1,"offset":28197},"end":{"line":1009,"column":13,"offset":28209},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":1011,"column":6,"offset":28218},"end":{"line":1011,"column":9,"offset":28221},"indent":[]}}],"position":{"start":{"line":1011,"column":1,"offset":28213},"end":{"line":1011,"column":9,"offset":28221},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.toLowerCase().split(/[^a-z0-9]*/);\n    return clean.join('') === clean.reverse().join('');\n};","position":{"start":{"line":1013,"column":1,"offset":28225},"end":{"line":1022,"column":4,"offset":28441},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":1024,"column":6,"offset":28450},"end":{"line":1024,"column":9,"offset":28453},"indent":[]}}],"position":{"start":{"line":1024,"column":1,"offset":28445},"end":{"line":1024,"column":9,"offset":28453},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Remove non-alphanumeric characters then compare.","position":{"start":{"line":1026,"column":1,"offset":28457},"end":{"line":1026,"column":49,"offset":28505},"indent":[]}}],"position":{"start":{"line":1026,"column":1,"offset":28457},"end":{"line":1026,"column":49,"offset":28505},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    for (let i = 0, j = clean.length - 1; i < j; i++, j--) {\n        if (clean[i] !== clean[j]) {\n            return false;\n        }\n    }\n    return true;\n};","position":{"start":{"line":1028,"column":1,"offset":28509},"end":{"line":1042,"column":4,"offset":28840},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"THREE","position":{"start":{"line":1044,"column":6,"offset":28849},"end":{"line":1044,"column":11,"offset":28854},"indent":[]}}],"position":{"start":{"line":1044,"column":1,"offset":28844},"end":{"line":1044,"column":11,"offset":28854},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compare the char codes.","position":{"start":{"line":1046,"column":1,"offset":28858},"end":{"line":1046,"column":24,"offset":28881},"indent":[]}}],"position":{"start":{"line":1046,"column":1,"offset":28858},"end":{"line":1046,"column":24,"offset":28881},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    for (let i = 0, j = s.length - 1; i < j; i++, j--) {\n        let left = s.charCodeAt(i);\n        while (i < j && (left < 48 || (left > 57 && left < 65) || (left > 90 && left < 97) || left > 122)) {\n            left = s.charCodeAt(++i);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (left >= 65 && left <= 90) {\n            left += 32;\n        }\n\n        let right = s.charCodeAt(j);\n        while (i < j && (right < 48 || (right > 57 && right < 65) || (right > 90 && right < 97) || right > 122)) {\n            right = s.charCodeAt(--j);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (right >= 65 && right <= 90) {\n            right += 32;\n        }\n\n        if (left !== right) {\n            return false;\n        }\n    }\n\n    return true;\n};","position":{"start":{"line":1048,"column":1,"offset":28885},"end":{"line":1084,"column":4,"offset":29825},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1086,"column":1,"offset":29829},"end":{"line":1086,"column":4,"offset":29832},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1088,"column":1,"offset":29836},"end":{"line":1090,"column":10,"offset":29880},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1090,"column":11,"offset":29881},"end":{"line":1090,"column":41,"offset":29911},"indent":[]}}],"position":{"start":{"line":1090,"column":10,"offset":29880},"end":{"line":1090,"column":42,"offset":29912},"indent":[]}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":1090,"column":42,"offset":29912},"end":{"line":1091,"column":11,"offset":29924},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/string","children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":1091,"column":12,"offset":29925},"end":{"line":1091,"column":43,"offset":29956},"indent":[]}}],"position":{"start":{"line":1091,"column":11,"offset":29924},"end":{"line":1091,"column":44,"offset":29957},"indent":[]}},{"type":"text","value":"\n\"Backtracking\": ","position":{"start":{"line":1091,"column":44,"offset":29957},"end":{"line":1092,"column":17,"offset":29975},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/backtracking","children":[{"type":"text","value":"https://leetcode.com/tag/backtracking","position":{"start":{"line":1092,"column":18,"offset":29976},"end":{"line":1092,"column":55,"offset":30013},"indent":[]}}],"position":{"start":{"line":1092,"column":17,"offset":29975},"end":{"line":1092,"column":56,"offset":30014},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1092,"column":56,"offset":30014},"end":{"line":1093,"column":25,"offset":30040},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1093,"column":26,"offset":30041},"end":{"line":1093,"column":71,"offset":30086},"indent":[]}}],"position":{"start":{"line":1093,"column":25,"offset":30040},"end":{"line":1093,"column":72,"offset":30087},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder\": ","position":{"start":{"line":1093,"column":72,"offset":30087},"end":{"line":1095,"column":16,"offset":30124},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder","children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder","position":{"start":{"line":1095,"column":17,"offset":30125},"end":{"line":1095,"column":58,"offset":30166},"indent":[]}}],"position":{"start":{"line":1095,"column":16,"offset":30124},"end":{"line":1095,"column":59,"offset":30167},"indent":[]}}],"position":{"start":{"line":1088,"column":1,"offset":29836},"end":{"line":1095,"column":59,"offset":30167},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1097,"column":1,"offset":30171},"end":{"line":1097,"column":4,"offset":30174},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#126-word-ladder-iihttpsleetcodecomproblemsword-ladder-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1099,"column":2,"offset":30179},"end":{"line":1099,"column":142,"offset":30319},"indent":[]}}],"position":{"start":{"line":1099,"column":1,"offset":30178},"end":{"line":1099,"column":213,"offset":30390},"indent":[]}}],"position":{"start":{"line":1099,"column":1,"offset":30178},"end":{"line":1099,"column":213,"offset":30390},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1101,"column":4,"offset":30397},"end":{"line":1101,"column":6,"offset":30399},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder-ii/description/","children":[{"type":"text","value":"126. Word Ladder II","position":{"start":{"line":1101,"column":7,"offset":30400},"end":{"line":1101,"column":26,"offset":30419},"indent":[]}}],"position":{"start":{"line":1101,"column":6,"offset":30399},"end":{"line":1101,"column":86,"offset":30479},"indent":[]}}],"position":{"start":{"line":1101,"column":1,"offset":30394},"end":{"line":1101,"column":86,"offset":30479},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1103,"column":5,"offset":30487},"end":{"line":1103,"column":12,"offset":30494},"indent":[]}}],"position":{"start":{"line":1103,"column":1,"offset":30483},"end":{"line":1103,"column":12,"offset":30494},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1105,"column":1,"offset":30498},"end":{"line":1105,"column":18,"offset":30515},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1105,"column":19,"offset":30516},"end":{"line":1105,"column":28,"offset":30525},"indent":[]}}],"position":{"start":{"line":1105,"column":18,"offset":30515},"end":{"line":1105,"column":29,"offset":30526},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1105,"column":29,"offset":30526},"end":{"line":1105,"column":34,"offset":30531},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1105,"column":35,"offset":30532},"end":{"line":1105,"column":42,"offset":30539},"indent":[]}}],"position":{"start":{"line":1105,"column":34,"offset":30531},"end":{"line":1105,"column":43,"offset":30540},"indent":[]}},{"type":"text","value":"), and a dictionary's word list, find all shortest transformation sequence(s) from ","position":{"start":{"line":1105,"column":43,"offset":30540},"end":{"line":1105,"column":126,"offset":30623},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1105,"column":127,"offset":30624},"end":{"line":1105,"column":136,"offset":30633},"indent":[]}}],"position":{"start":{"line":1105,"column":126,"offset":30623},"end":{"line":1105,"column":137,"offset":30634},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1105,"column":137,"offset":30634},"end":{"line":1105,"column":141,"offset":30638},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1105,"column":142,"offset":30639},"end":{"line":1105,"column":149,"offset":30646},"indent":[]}}],"position":{"start":{"line":1105,"column":141,"offset":30638},"end":{"line":1105,"column":150,"offset":30647},"indent":[]}},{"type":"text","value":", such that:","position":{"start":{"line":1105,"column":150,"offset":30647},"end":{"line":1105,"column":162,"offset":30659},"indent":[]}}],"position":{"start":{"line":1105,"column":1,"offset":30498},"end":{"line":1105,"column":162,"offset":30659},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only one letter can be changed at a time","position":{"start":{"line":1107,"column":5,"offset":30667},"end":{"line":1107,"column":45,"offset":30707},"indent":[]}}],"position":{"start":{"line":1107,"column":5,"offset":30667},"end":{"line":1107,"column":45,"offset":30707},"indent":[]}}],"position":{"start":{"line":1107,"column":1,"offset":30663},"end":{"line":1107,"column":45,"offset":30707},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1108,"column":5,"offset":30713},"end":{"line":1108,"column":66,"offset":30774},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1108,"column":67,"offset":30775},"end":{"line":1108,"column":76,"offset":30784},"indent":[]}}],"position":{"start":{"line":1108,"column":66,"offset":30774},"end":{"line":1108,"column":77,"offset":30785},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":1108,"column":77,"offset":30785},"end":{"line":1108,"column":81,"offset":30789},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":1108,"column":82,"offset":30790},"end":{"line":1108,"column":85,"offset":30793},"indent":[]}}],"position":{"start":{"line":1108,"column":81,"offset":30789},"end":{"line":1108,"column":86,"offset":30794},"indent":[]}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1108,"column":86,"offset":30794},"end":{"line":1108,"column":106,"offset":30814},"indent":[]}}],"position":{"start":{"line":1108,"column":5,"offset":30713},"end":{"line":1108,"column":106,"offset":30814},"indent":[]}}],"position":{"start":{"line":1108,"column":1,"offset":30709},"end":{"line":1108,"column":106,"offset":30814},"indent":[]}}],"position":{"start":{"line":1107,"column":1,"offset":30663},"end":{"line":1108,"column":106,"offset":30814},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1110,"column":3,"offset":30820},"end":{"line":1110,"column":8,"offset":30825},"indent":[]}}],"position":{"start":{"line":1110,"column":1,"offset":30818},"end":{"line":1110,"column":10,"offset":30827},"indent":[]}}],"position":{"start":{"line":1110,"column":1,"offset":30818},"end":{"line":1110,"column":10,"offset":30827},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Return an empty list if there is no such transformation sequence.","position":{"start":{"line":1112,"column":3,"offset":30833},"end":{"line":1112,"column":68,"offset":30898},"indent":[]}}],"position":{"start":{"line":1112,"column":3,"offset":30833},"end":{"line":1112,"column":68,"offset":30898},"indent":[]}}],"position":{"start":{"line":1112,"column":1,"offset":30831},"end":{"line":1112,"column":68,"offset":30898},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1113,"column":3,"offset":30902},"end":{"line":1113,"column":34,"offset":30933},"indent":[]}}],"position":{"start":{"line":1113,"column":3,"offset":30902},"end":{"line":1113,"column":34,"offset":30933},"indent":[]}}],"position":{"start":{"line":1113,"column":1,"offset":30900},"end":{"line":1113,"column":34,"offset":30933},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1114,"column":3,"offset":30937},"end":{"line":1114,"column":58,"offset":30992},"indent":[]}}],"position":{"start":{"line":1114,"column":3,"offset":30937},"end":{"line":1114,"column":58,"offset":30992},"indent":[]}}],"position":{"start":{"line":1114,"column":1,"offset":30935},"end":{"line":1114,"column":58,"offset":30992},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1115,"column":3,"offset":30996},"end":{"line":1115,"column":49,"offset":31042},"indent":[]}}],"position":{"start":{"line":1115,"column":3,"offset":30996},"end":{"line":1115,"column":49,"offset":31042},"indent":[]}}],"position":{"start":{"line":1115,"column":1,"offset":30994},"end":{"line":1115,"column":49,"offset":31042},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1116,"column":3,"offset":31046},"end":{"line":1116,"column":18,"offset":31061},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1116,"column":19,"offset":31062},"end":{"line":1116,"column":28,"offset":31071},"indent":[]}}],"position":{"start":{"line":1116,"column":18,"offset":31061},"end":{"line":1116,"column":29,"offset":31072},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1116,"column":29,"offset":31072},"end":{"line":1116,"column":34,"offset":31077},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1116,"column":35,"offset":31078},"end":{"line":1116,"column":42,"offset":31085},"indent":[]}}],"position":{"start":{"line":1116,"column":34,"offset":31077},"end":{"line":1116,"column":43,"offset":31086},"indent":[]}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1116,"column":43,"offset":31086},"end":{"line":1116,"column":79,"offset":31122},"indent":[]}}],"position":{"start":{"line":1116,"column":3,"offset":31046},"end":{"line":1116,"column":79,"offset":31122},"indent":[]}}],"position":{"start":{"line":1116,"column":1,"offset":31044},"end":{"line":1116,"column":79,"offset":31122},"indent":[]}}],"position":{"start":{"line":1112,"column":1,"offset":30831},"end":{"line":1116,"column":79,"offset":31122},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1118,"column":3,"offset":31128},"end":{"line":1118,"column":13,"offset":31138},"indent":[]}}],"position":{"start":{"line":1118,"column":1,"offset":31126},"end":{"line":1118,"column":15,"offset":31140},"indent":[]}}],"position":{"start":{"line":1118,"column":1,"offset":31126},"end":{"line":1118,"column":15,"offset":31140},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput:\n[\n  [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\n  [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\n]","position":{"start":{"line":1120,"column":1,"offset":31144},"end":{"line":1132,"column":4,"offset":31338},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1134,"column":3,"offset":31344},"end":{"line":1134,"column":13,"offset":31354},"indent":[]}}],"position":{"start":{"line":1134,"column":1,"offset":31342},"end":{"line":1134,"column":15,"offset":31356},"indent":[]}}],"position":{"start":{"line":1134,"column":1,"offset":31342},"end":{"line":1134,"column":15,"offset":31356},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: []\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.","position":{"start":{"line":1136,"column":1,"offset":31360},"end":{"line":1146,"column":4,"offset":31564},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1148,"column":5,"offset":31572},"end":{"line":1148,"column":13,"offset":31580},"indent":[]}}],"position":{"start":{"line":1148,"column":1,"offset":31568},"end":{"line":1148,"column":13,"offset":31580},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is just like ","position":{"start":{"line":1150,"column":1,"offset":31584},"end":{"line":1150,"column":19,"offset":31602},"indent":[]}},{"type":"link","title":null,"url":"./127.%20Word%20Ladder","children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1150,"column":20,"offset":31603},"end":{"line":1150,"column":36,"offset":31619},"indent":[]}}],"position":{"start":{"line":1150,"column":19,"offset":31602},"end":{"line":1150,"column":61,"offset":31644},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1150,"column":61,"offset":31644},"end":{"line":1150,"column":62,"offset":31645},"indent":[]}}],"position":{"start":{"line":1150,"column":1,"offset":31584},"end":{"line":1150,"column":62,"offset":31645},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The constrain still works, but instead of deleting the words right away, collect them and delete them all when a level ends, so that we can reuse the words (matching different parents in the same level).","position":{"start":{"line":1152,"column":1,"offset":31649},"end":{"line":1152,"column":204,"offset":31852},"indent":[]}}],"position":{"start":{"line":1152,"column":1,"offset":31649},"end":{"line":1152,"column":204,"offset":31852},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The items in the queue are not just words now. Parent nodes are also kept so that we can backtrack the path from the end.","position":{"start":{"line":1154,"column":1,"offset":31856},"end":{"line":1154,"column":122,"offset":31977},"indent":[]}}],"position":{"start":{"line":1154,"column":1,"offset":31856},"end":{"line":1154,"column":122,"offset":31977},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {string[][]}\n */\nfunction findLadders(beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return [];\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    const result = [];\n    let isEndWordFound = false;\n    const levelWords = new Set();\n    const queue = [[beginWord, null], null];\n    while (queue.length > 1) {\n        const node = queue.shift();\n\n        if (node === null) {\n            if (isEndWordFound) {\n                break;\n            }\n            levelWords.forEach((word) => wordList.delete(word));\n            levelWords.clear();\n            queue.push(null);\n            continue;\n        }\n\n        const word = node[0];\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const w = head + ALPHABET[c] + tail;\n                    if (w === endWord) {\n                        const path = [endWord];\n                        for (let n = node; n !== null; n = n[1]) {\n                            path.unshift(n[0]);\n                        }\n                        result.push(path);\n                        isEndWordFound = true;\n                    }\n                    if (wordList.has(w)) {\n                        levelWords.add(w);\n                        queue.push([w, node]);\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}","position":{"start":{"line":1156,"column":1,"offset":31981},"end":{"line":1216,"column":4,"offset":33715},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1218,"column":1,"offset":33719},"end":{"line":1218,"column":4,"offset":33722},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Breadth-first Search\": ","position":{"start":{"line":1220,"column":1,"offset":33726},"end":{"line":1222,"column":25,"offset":33787},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1222,"column":26,"offset":33788},"end":{"line":1222,"column":71,"offset":33833},"indent":[]}}],"position":{"start":{"line":1222,"column":25,"offset":33787},"end":{"line":1222,"column":72,"offset":33834},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder II\": ","position":{"start":{"line":1222,"column":72,"offset":33834},"end":{"line":1224,"column":19,"offset":33874},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder-ii","children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder-ii","position":{"start":{"line":1224,"column":20,"offset":33875},"end":{"line":1224,"column":64,"offset":33919},"indent":[]}}],"position":{"start":{"line":1224,"column":19,"offset":33874},"end":{"line":1224,"column":65,"offset":33920},"indent":[]}},{"type":"text","value":"\n\"Minimum Genetic Mutation\": ","position":{"start":{"line":1224,"column":65,"offset":33920},"end":{"line":1225,"column":29,"offset":33950},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/minimum-genetic-mutation","children":[{"type":"text","value":"https://leetcode.com/problems/minimum-genetic-mutation","position":{"start":{"line":1225,"column":30,"offset":33951},"end":{"line":1225,"column":84,"offset":34005},"indent":[]}}],"position":{"start":{"line":1225,"column":29,"offset":33950},"end":{"line":1225,"column":85,"offset":34006},"indent":[]}}],"position":{"start":{"line":1220,"column":1,"offset":33726},"end":{"line":1225,"column":85,"offset":34006},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1227,"column":1,"offset":34010},"end":{"line":1227,"column":4,"offset":34013},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#127-word-ladderhttpsleetcodecomproblemsword-ladderdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1229,"column":2,"offset":34018},"end":{"line":1229,"column":142,"offset":34158},"indent":[]}}],"position":{"start":{"line":1229,"column":1,"offset":34017},"end":{"line":1229,"column":207,"offset":34223},"indent":[]}}],"position":{"start":{"line":1229,"column":1,"offset":34017},"end":{"line":1229,"column":207,"offset":34223},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1231,"column":4,"offset":34230},"end":{"line":1231,"column":6,"offset":34232},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder/description/","children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1231,"column":7,"offset":34233},"end":{"line":1231,"column":23,"offset":34249},"indent":[]}}],"position":{"start":{"line":1231,"column":6,"offset":34232},"end":{"line":1231,"column":80,"offset":34306},"indent":[]}}],"position":{"start":{"line":1231,"column":1,"offset":34227},"end":{"line":1231,"column":80,"offset":34306},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1233,"column":5,"offset":34314},"end":{"line":1233,"column":12,"offset":34321},"indent":[]}}],"position":{"start":{"line":1233,"column":1,"offset":34310},"end":{"line":1233,"column":12,"offset":34321},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1235,"column":1,"offset":34325},"end":{"line":1235,"column":18,"offset":34342},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1235,"column":19,"offset":34343},"end":{"line":1235,"column":28,"offset":34352},"indent":[]}}],"position":{"start":{"line":1235,"column":18,"offset":34342},"end":{"line":1235,"column":29,"offset":34353},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1235,"column":29,"offset":34353},"end":{"line":1235,"column":34,"offset":34358},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1235,"column":35,"offset":34359},"end":{"line":1235,"column":42,"offset":34366},"indent":[]}}],"position":{"start":{"line":1235,"column":34,"offset":34358},"end":{"line":1235,"column":43,"offset":34367},"indent":[]}},{"type":"text","value":"), and a dictionary's word list, find the length of shortest transformation sequence from ","position":{"start":{"line":1235,"column":43,"offset":34367},"end":{"line":1235,"column":133,"offset":34457},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1235,"column":134,"offset":34458},"end":{"line":1235,"column":143,"offset":34467},"indent":[]}}],"position":{"start":{"line":1235,"column":133,"offset":34457},"end":{"line":1235,"column":144,"offset":34468},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1235,"column":144,"offset":34468},"end":{"line":1235,"column":148,"offset":34472},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1235,"column":149,"offset":34473},"end":{"line":1235,"column":156,"offset":34480},"indent":[]}}],"position":{"start":{"line":1235,"column":148,"offset":34472},"end":{"line":1235,"column":157,"offset":34481},"indent":[]}},{"type":"text","value":", such that:","position":{"start":{"line":1235,"column":157,"offset":34481},"end":{"line":1235,"column":169,"offset":34493},"indent":[]}}],"position":{"start":{"line":1235,"column":1,"offset":34325},"end":{"line":1235,"column":169,"offset":34493},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only one letter can be changed at a time.","position":{"start":{"line":1237,"column":5,"offset":34501},"end":{"line":1237,"column":46,"offset":34542},"indent":[]}}],"position":{"start":{"line":1237,"column":5,"offset":34501},"end":{"line":1237,"column":46,"offset":34542},"indent":[]}}],"position":{"start":{"line":1237,"column":1,"offset":34497},"end":{"line":1237,"column":46,"offset":34542},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1238,"column":5,"offset":34548},"end":{"line":1238,"column":66,"offset":34609},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1238,"column":67,"offset":34610},"end":{"line":1238,"column":76,"offset":34619},"indent":[]}}],"position":{"start":{"line":1238,"column":66,"offset":34609},"end":{"line":1238,"column":77,"offset":34620},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":1238,"column":77,"offset":34620},"end":{"line":1238,"column":81,"offset":34624},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":1238,"column":82,"offset":34625},"end":{"line":1238,"column":85,"offset":34628},"indent":[]}}],"position":{"start":{"line":1238,"column":81,"offset":34624},"end":{"line":1238,"column":86,"offset":34629},"indent":[]}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1238,"column":86,"offset":34629},"end":{"line":1238,"column":106,"offset":34649},"indent":[]}}],"position":{"start":{"line":1238,"column":5,"offset":34548},"end":{"line":1238,"column":106,"offset":34649},"indent":[]}}],"position":{"start":{"line":1238,"column":1,"offset":34544},"end":{"line":1238,"column":106,"offset":34649},"indent":[]}}],"position":{"start":{"line":1237,"column":1,"offset":34497},"end":{"line":1238,"column":106,"offset":34649},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1240,"column":3,"offset":34655},"end":{"line":1240,"column":8,"offset":34660},"indent":[]}}],"position":{"start":{"line":1240,"column":1,"offset":34653},"end":{"line":1240,"column":10,"offset":34662},"indent":[]}}],"position":{"start":{"line":1240,"column":1,"offset":34653},"end":{"line":1240,"column":10,"offset":34662},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Return 0 if there is no such transformation sequence.","position":{"start":{"line":1242,"column":3,"offset":34668},"end":{"line":1242,"column":56,"offset":34721},"indent":[]}}],"position":{"start":{"line":1242,"column":3,"offset":34668},"end":{"line":1242,"column":56,"offset":34721},"indent":[]}}],"position":{"start":{"line":1242,"column":1,"offset":34666},"end":{"line":1242,"column":56,"offset":34721},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1243,"column":3,"offset":34725},"end":{"line":1243,"column":34,"offset":34756},"indent":[]}}],"position":{"start":{"line":1243,"column":3,"offset":34725},"end":{"line":1243,"column":34,"offset":34756},"indent":[]}}],"position":{"start":{"line":1243,"column":1,"offset":34723},"end":{"line":1243,"column":34,"offset":34756},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1244,"column":3,"offset":34760},"end":{"line":1244,"column":58,"offset":34815},"indent":[]}}],"position":{"start":{"line":1244,"column":3,"offset":34760},"end":{"line":1244,"column":58,"offset":34815},"indent":[]}}],"position":{"start":{"line":1244,"column":1,"offset":34758},"end":{"line":1244,"column":58,"offset":34815},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1245,"column":3,"offset":34819},"end":{"line":1245,"column":49,"offset":34865},"indent":[]}}],"position":{"start":{"line":1245,"column":3,"offset":34819},"end":{"line":1245,"column":49,"offset":34865},"indent":[]}}],"position":{"start":{"line":1245,"column":1,"offset":34817},"end":{"line":1245,"column":49,"offset":34865},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1246,"column":3,"offset":34869},"end":{"line":1246,"column":18,"offset":34884},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1246,"column":19,"offset":34885},"end":{"line":1246,"column":28,"offset":34894},"indent":[]}}],"position":{"start":{"line":1246,"column":18,"offset":34884},"end":{"line":1246,"column":29,"offset":34895},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1246,"column":29,"offset":34895},"end":{"line":1246,"column":34,"offset":34900},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1246,"column":35,"offset":34901},"end":{"line":1246,"column":42,"offset":34908},"indent":[]}}],"position":{"start":{"line":1246,"column":34,"offset":34900},"end":{"line":1246,"column":43,"offset":34909},"indent":[]}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1246,"column":43,"offset":34909},"end":{"line":1246,"column":79,"offset":34945},"indent":[]}}],"position":{"start":{"line":1246,"column":3,"offset":34869},"end":{"line":1246,"column":79,"offset":34945},"indent":[]}}],"position":{"start":{"line":1246,"column":1,"offset":34867},"end":{"line":1246,"column":79,"offset":34945},"indent":[]}}],"position":{"start":{"line":1242,"column":1,"offset":34666},"end":{"line":1246,"column":79,"offset":34945},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1248,"column":3,"offset":34951},"end":{"line":1248,"column":13,"offset":34961},"indent":[]}}],"position":{"start":{"line":1248,"column":1,"offset":34949},"end":{"line":1248,"column":15,"offset":34963},"indent":[]}}],"position":{"start":{"line":1248,"column":1,"offset":34949},"end":{"line":1248,"column":15,"offset":34963},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput: 5\n\nExplanation: As one shortest transformation is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\nreturn its length 5.","position":{"start":{"line":1250,"column":1,"offset":34967},"end":{"line":1261,"column":4,"offset":35201},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1263,"column":3,"offset":35207},"end":{"line":1263,"column":13,"offset":35217},"indent":[]}}],"position":{"start":{"line":1263,"column":1,"offset":35205},"end":{"line":1263,"column":15,"offset":35219},"indent":[]}}],"position":{"start":{"line":1263,"column":1,"offset":35205},"end":{"line":1263,"column":15,"offset":35219},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: 0\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.","position":{"start":{"line":1265,"column":1,"offset":35223},"end":{"line":1275,"column":4,"offset":35426},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1277,"column":5,"offset":35434},"end":{"line":1277,"column":13,"offset":35442},"indent":[]}}],"position":{"start":{"line":1277,"column":1,"offset":35430},"end":{"line":1277,"column":13,"offset":35442},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Think of it as building a tree, with ","position":{"start":{"line":1279,"column":1,"offset":35446},"end":{"line":1279,"column":38,"offset":35483},"indent":[]}},{"type":"inlineCode","value":"begineWord","position":{"start":{"line":1279,"column":38,"offset":35483},"end":{"line":1279,"column":50,"offset":35495},"indent":[]}},{"type":"text","value":" as root and ","position":{"start":{"line":1279,"column":50,"offset":35495},"end":{"line":1279,"column":63,"offset":35508},"indent":[]}},{"type":"inlineCode","value":"endWord","position":{"start":{"line":1279,"column":63,"offset":35508},"end":{"line":1279,"column":72,"offset":35517},"indent":[]}},{"type":"text","value":" as leaves.","position":{"start":{"line":1279,"column":72,"offset":35517},"end":{"line":1279,"column":83,"offset":35528},"indent":[]}}],"position":{"start":{"line":1279,"column":1,"offset":35446},"end":{"line":1279,"column":83,"offset":35528},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The best way control the depth (length of the shortest transformations) while building the tree is level-order traversal (BFS).","position":{"start":{"line":1281,"column":1,"offset":35532},"end":{"line":1281,"column":128,"offset":35659},"indent":[]}}],"position":{"start":{"line":1281,"column":1,"offset":35532},"end":{"line":1281,"column":128,"offset":35659},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We do not actually build the tree because it is expensive (astronomical if the list is huge). In fact, we only need one shortest path. So just like Dijkstra's algorithm, we say that the first time (level ","position":{"start":{"line":1283,"column":1,"offset":35663},"end":{"line":1283,"column":205,"offset":35867},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":1283,"column":205,"offset":35867},"end":{"line":1283,"column":208,"offset":35870},"indent":[]}},{"type":"text","value":") we encounter a word that turns out to be in a shortest path, then level ","position":{"start":{"line":1283,"column":208,"offset":35870},"end":{"line":1283,"column":282,"offset":35944},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":1283,"column":282,"offset":35944},"end":{"line":1283,"column":285,"offset":35947},"indent":[]}},{"type":"text","value":" is the lowest level this word could ever get. We can safely remove it from the ","position":{"start":{"line":1283,"column":285,"offset":35947},"end":{"line":1283,"column":365,"offset":36027},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1283,"column":365,"offset":36027},"end":{"line":1283,"column":375,"offset":36037},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1283,"column":375,"offset":36037},"end":{"line":1283,"column":376,"offset":36038},"indent":[]}}],"position":{"start":{"line":1283,"column":1,"offset":35663},"end":{"line":1283,"column":376,"offset":36038},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To find all the next words, instead of filtering the ","position":{"start":{"line":1285,"column":1,"offset":36042},"end":{"line":1285,"column":54,"offset":36095},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1285,"column":54,"offset":36095},"end":{"line":1285,"column":64,"offset":36105},"indent":[]}},{"type":"text","value":", enumerate all 25 possible words and check if in ","position":{"start":{"line":1285,"column":64,"offset":36105},"end":{"line":1285,"column":114,"offset":36155},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1285,"column":114,"offset":36155},"end":{"line":1285,"column":124,"offset":36165},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1285,"column":124,"offset":36165},"end":{"line":1285,"column":125,"offset":36166},"indent":[]}}],"position":{"start":{"line":1285,"column":1,"offset":36042},"end":{"line":1285,"column":125,"offset":36166},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {number}\n */\nlet ladderLength = function (beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return 0;\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    let level = 1;\n    const queue = [beginWord, null];\n    while (queue.length > 1) {\n        const word = queue.shift();\n\n        if (word === null) {\n            level++;\n            queue.push(null);\n            continue;\n        }\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const word = head + ALPHABET[c] + tail;\n                    if (word === endWord) {\n                        return level + 1;\n                    }\n                    if (wordList.delete(word)) {\n                        queue.push(word);\n                    }\n                }\n            }\n        }\n    }\n\n    return 0;\n};","position":{"start":{"line":1287,"column":1,"offset":36170},"end":{"line":1333,"column":4,"offset":37360},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1335,"column":1,"offset":37364},"end":{"line":1335,"column":4,"offset":37367},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1337,"column":1,"offset":37371},"end":{"line":1339,"column":10,"offset":37415},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1339,"column":11,"offset":37416},"end":{"line":1339,"column":41,"offset":37446},"indent":[]}}],"position":{"start":{"line":1339,"column":10,"offset":37415},"end":{"line":1339,"column":42,"offset":37447},"indent":[]}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1339,"column":42,"offset":37447},"end":{"line":1340,"column":15,"offset":37463},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/union-find","children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1340,"column":16,"offset":37464},"end":{"line":1340,"column":51,"offset":37499},"indent":[]}}],"position":{"start":{"line":1340,"column":15,"offset":37463},"end":{"line":1340,"column":52,"offset":37500},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Binary Tree Longest Consecutive Sequence\": ","position":{"start":{"line":1340,"column":52,"offset":37500},"end":{"line":1342,"column":45,"offset":37566},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","position":{"start":{"line":1342,"column":46,"offset":37567},"end":{"line":1342,"column":116,"offset":37637},"indent":[]}}],"position":{"start":{"line":1342,"column":45,"offset":37566},"end":{"line":1342,"column":117,"offset":37638},"indent":[]}}],"position":{"start":{"line":1337,"column":1,"offset":37371},"end":{"line":1342,"column":117,"offset":37638},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1344,"column":1,"offset":37642},"end":{"line":1344,"column":4,"offset":37645},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#128-longest-consecutive-sequencehttpsleetcodecomproblemslongest-consecutive-sequencedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1346,"column":2,"offset":37650},"end":{"line":1346,"column":142,"offset":37790},"indent":[]}}],"position":{"start":{"line":1346,"column":1,"offset":37649},"end":{"line":1346,"column":241,"offset":37889},"indent":[]}}],"position":{"start":{"line":1346,"column":1,"offset":37649},"end":{"line":1346,"column":241,"offset":37889},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1348,"column":4,"offset":37896},"end":{"line":1348,"column":6,"offset":37898},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/longest-consecutive-sequence/description/","children":[{"type":"text","value":"128. Longest Consecutive Sequence","position":{"start":{"line":1348,"column":7,"offset":37899},"end":{"line":1348,"column":40,"offset":37932},"indent":[]}}],"position":{"start":{"line":1348,"column":6,"offset":37898},"end":{"line":1348,"column":114,"offset":38006},"indent":[]}}],"position":{"start":{"line":1348,"column":1,"offset":37893},"end":{"line":1348,"column":114,"offset":38006},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1350,"column":5,"offset":38014},"end":{"line":1350,"column":12,"offset":38021},"indent":[]}}],"position":{"start":{"line":1350,"column":1,"offset":38010},"end":{"line":1350,"column":12,"offset":38021},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given an unsorted array of integers, find the length of the longest consecutive elements sequence.","position":{"start":{"line":1352,"column":1,"offset":38025},"end":{"line":1352,"column":99,"offset":38123},"indent":[]}}],"position":{"start":{"line":1352,"column":1,"offset":38025},"end":{"line":1352,"column":99,"offset":38123},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Your algorithm should run in O(","position":{"start":{"line":1354,"column":1,"offset":38127},"end":{"line":1354,"column":32,"offset":38158},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":1354,"column":33,"offset":38159},"end":{"line":1354,"column":34,"offset":38160},"indent":[]}}],"position":{"start":{"line":1354,"column":32,"offset":38158},"end":{"line":1354,"column":35,"offset":38161},"indent":[]}},{"type":"text","value":") complexity.","position":{"start":{"line":1354,"column":35,"offset":38161},"end":{"line":1354,"column":48,"offset":38174},"indent":[]}}],"position":{"start":{"line":1354,"column":1,"offset":38127},"end":{"line":1354,"column":48,"offset":38174},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1356,"column":3,"offset":38180},"end":{"line":1356,"column":11,"offset":38188},"indent":[]}}],"position":{"start":{"line":1356,"column":1,"offset":38178},"end":{"line":1356,"column":13,"offset":38190},"indent":[]}}],"position":{"start":{"line":1356,"column":1,"offset":38178},"end":{"line":1356,"column":13,"offset":38190},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [100, 4, 200, 1, 3, 2]\nOutput: 4\nExplanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.","position":{"start":{"line":1358,"column":1,"offset":38194},"end":{"line":1363,"column":4,"offset":38346},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1365,"column":5,"offset":38354},"end":{"line":1365,"column":13,"offset":38362},"indent":[]}}],"position":{"start":{"line":1365,"column":1,"offset":38350},"end":{"line":1365,"column":13,"offset":38362},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Build a Set from the list. Pick a number, find all it's adjacent numbers that are also in the Set. Count them and remove them all from the Set. Repeat until the Set is empty. Time complexity O(n + n) = O(n).","position":{"start":{"line":1367,"column":1,"offset":38366},"end":{"line":1367,"column":208,"offset":38573},"indent":[]}}],"position":{"start":{"line":1367,"column":1,"offset":38366},"end":{"line":1367,"column":208,"offset":38573},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} nums\n * @return {number}\n */\nlet longestConsecutive = function (nums) {\n    const numSet = new Set(nums);\n    let maxCount = 0;\n    while (numSet.size > 0) {\n        const num = numSet.values().next().value;\n        numSet.delete(num);\n        let count = 1;\n        for (let n = num + 1; numSet.delete(n); n++) {\n            count++;\n        }\n        for (let n = num - 1; numSet.delete(n); n--) {\n            count++;\n        }\n        if (count > maxCount) {\n            maxCount = count;\n        }\n    }\n    return maxCount;\n};","position":{"start":{"line":1369,"column":1,"offset":38577},"end":{"line":1393,"column":4,"offset":39168},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1395,"column":1,"offset":39172},"end":{"line":1395,"column":4,"offset":39175},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":1397,"column":1,"offset":39179},"end":{"line":1399,"column":9,"offset":39224},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":1399,"column":10,"offset":39225},"end":{"line":1399,"column":39,"offset":39254},"indent":[]}}],"position":{"start":{"line":1399,"column":9,"offset":39224},"end":{"line":1399,"column":40,"offset":39255},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":1399,"column":40,"offset":39255},"end":{"line":1400,"column":23,"offset":39279},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1400,"column":24,"offset":39280},"end":{"line":1400,"column":67,"offset":39323},"indent":[]}}],"position":{"start":{"line":1400,"column":23,"offset":39279},"end":{"line":1400,"column":68,"offset":39324},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":1400,"column":68,"offset":39324},"end":{"line":1402,"column":13,"offset":39358},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":1402,"column":14,"offset":39359},"end":{"line":1402,"column":52,"offset":39397},"indent":[]}}],"position":{"start":{"line":1402,"column":13,"offset":39358},"end":{"line":1402,"column":53,"offset":39398},"indent":[]}},{"type":"text","value":"\n\"Binary Tree Maximum Path Sum\": ","position":{"start":{"line":1402,"column":53,"offset":39398},"end":{"line":1403,"column":33,"offset":39432},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-maximum-path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-maximum-path-sum","position":{"start":{"line":1403,"column":34,"offset":39433},"end":{"line":1403,"column":92,"offset":39491},"indent":[]}}],"position":{"start":{"line":1403,"column":33,"offset":39432},"end":{"line":1403,"column":93,"offset":39492},"indent":[]}}],"position":{"start":{"line":1397,"column":1,"offset":39179},"end":{"line":1403,"column":93,"offset":39492},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1405,"column":1,"offset":39496},"end":{"line":1405,"column":4,"offset":39499},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#129-sum-root-to-leaf-numbershttpsleetcodecomproblemssum-root-to-leaf-numbersdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1407,"column":2,"offset":39504},"end":{"line":1407,"column":142,"offset":39644},"indent":[]}}],"position":{"start":{"line":1407,"column":1,"offset":39503},"end":{"line":1407,"column":233,"offset":39735},"indent":[]}}],"position":{"start":{"line":1407,"column":1,"offset":39503},"end":{"line":1407,"column":233,"offset":39735},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1409,"column":4,"offset":39742},"end":{"line":1409,"column":6,"offset":39744},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/sum-root-to-leaf-numbers/description/","children":[{"type":"text","value":"129. Sum Root to Leaf Numbers","position":{"start":{"line":1409,"column":7,"offset":39745},"end":{"line":1409,"column":36,"offset":39774},"indent":[]}}],"position":{"start":{"line":1409,"column":6,"offset":39744},"end":{"line":1409,"column":106,"offset":39844},"indent":[]}}],"position":{"start":{"line":1409,"column":1,"offset":39739},"end":{"line":1409,"column":106,"offset":39844},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1411,"column":5,"offset":39852},"end":{"line":1411,"column":12,"offset":39859},"indent":[]}}],"position":{"start":{"line":1411,"column":1,"offset":39848},"end":{"line":1411,"column":12,"offset":39859},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree containing digits from ","position":{"start":{"line":1413,"column":1,"offset":39863},"end":{"line":1413,"column":44,"offset":39906},"indent":[]}},{"type":"inlineCode","value":"0-9","position":{"start":{"line":1413,"column":44,"offset":39906},"end":{"line":1413,"column":49,"offset":39911},"indent":[]}},{"type":"text","value":" only, each root-to-leaf path could represent a number.","position":{"start":{"line":1413,"column":49,"offset":39911},"end":{"line":1413,"column":104,"offset":39966},"indent":[]}}],"position":{"start":{"line":1413,"column":1,"offset":39863},"end":{"line":1413,"column":104,"offset":39966},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An example is the root-to-leaf path ","position":{"start":{"line":1415,"column":1,"offset":39970},"end":{"line":1415,"column":37,"offset":40006},"indent":[]}},{"type":"inlineCode","value":"1->2->3","position":{"start":{"line":1415,"column":37,"offset":40006},"end":{"line":1415,"column":46,"offset":40015},"indent":[]}},{"type":"text","value":" which represents the number ","position":{"start":{"line":1415,"column":46,"offset":40015},"end":{"line":1415,"column":75,"offset":40044},"indent":[]}},{"type":"inlineCode","value":"123","position":{"start":{"line":1415,"column":75,"offset":40044},"end":{"line":1415,"column":80,"offset":40049},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1415,"column":80,"offset":40049},"end":{"line":1415,"column":81,"offset":40050},"indent":[]}}],"position":{"start":{"line":1415,"column":1,"offset":39970},"end":{"line":1415,"column":81,"offset":40050},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find the total sum of all root-to-leaf numbers.","position":{"start":{"line":1417,"column":1,"offset":40054},"end":{"line":1417,"column":48,"offset":40101},"indent":[]}}],"position":{"start":{"line":1417,"column":1,"offset":40054},"end":{"line":1417,"column":48,"offset":40101},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1419,"column":3,"offset":40107},"end":{"line":1419,"column":8,"offset":40112},"indent":[]}}],"position":{"start":{"line":1419,"column":1,"offset":40105},"end":{"line":1419,"column":10,"offset":40114},"indent":[]}},{"type":"text","value":" A leaf is a node with no children.","position":{"start":{"line":1419,"column":10,"offset":40114},"end":{"line":1419,"column":45,"offset":40149},"indent":[]}}],"position":{"start":{"line":1419,"column":1,"offset":40105},"end":{"line":1419,"column":45,"offset":40149},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1421,"column":3,"offset":40155},"end":{"line":1421,"column":11,"offset":40163},"indent":[]}}],"position":{"start":{"line":1421,"column":1,"offset":40153},"end":{"line":1421,"column":13,"offset":40165},"indent":[]}}],"position":{"start":{"line":1421,"column":1,"offset":40153},"end":{"line":1421,"column":13,"offset":40165},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3]\n    1\n   / \\\n  2   3\nOutput: 25\nExplanation:\nThe root-to-leaf path 1->2 represents the number 12.\nThe root-to-leaf path 1->3 represents the number 13.\nTherefore, sum = 12 + 13 = 25.","position":{"start":{"line":1423,"column":1,"offset":40169},"end":{"line":1431,"column":35,"offset":40409},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1433,"column":3,"offset":40415},"end":{"line":1433,"column":13,"offset":40425},"indent":[]}}],"position":{"start":{"line":1433,"column":1,"offset":40413},"end":{"line":1433,"column":15,"offset":40427},"indent":[]}}],"position":{"start":{"line":1433,"column":1,"offset":40413},"end":{"line":1433,"column":15,"offset":40427},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [4,9,0,5,1]\n    4\n   / \\\n  9   0\n / \\\n5   1\nOutput: 1026\nExplanation:\nThe root-to-leaf path 4->9->5 represents the number 495.\nThe root-to-leaf path 4->9->1 represents the number 491.\nThe root-to-leaf path 4->0 represents the number 40.\nTherefore, sum = 495 + 491 + 40 = 1026.","position":{"start":{"line":1435,"column":1,"offset":40431},"end":{"line":1446,"column":44,"offset":40773},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1448,"column":5,"offset":40781},"end":{"line":1448,"column":13,"offset":40789},"indent":[]}}],"position":{"start":{"line":1448,"column":1,"offset":40777},"end":{"line":1448,"column":13,"offset":40789},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To write a clean solution for this promblem, use ","position":{"start":{"line":1450,"column":1,"offset":40793},"end":{"line":1450,"column":50,"offset":40842},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1450,"column":50,"offset":40842},"end":{"line":1450,"column":53,"offset":40845},"indent":[]}},{"type":"text","value":" as indicator of leaf node. If all the children get ","position":{"start":{"line":1450,"column":53,"offset":40845},"end":{"line":1450,"column":105,"offset":40897},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1450,"column":105,"offset":40897},"end":{"line":1450,"column":108,"offset":40900},"indent":[]}},{"type":"text","value":", it is a leaf node, return the sum of current level.","position":{"start":{"line":1450,"column":108,"offset":40900},"end":{"line":1450,"column":161,"offset":40953},"indent":[]}}],"position":{"start":{"line":1450,"column":1,"offset":40793},"end":{"line":1450,"column":161,"offset":40953},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet sumNumbers = function (root, sum = 0) {\n    if (!root) {\n        return 0;\n    }\n    sum = sum * 10 + root.val;\n    return sumNumbers(root.left, sum) + sumNumbers(root.right, sum) || sum;\n};","position":{"start":{"line":1452,"column":1,"offset":40957},"end":{"line":1471,"column":4,"offset":41374},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1473,"column":1,"offset":41378},"end":{"line":1473,"column":4,"offset":41381},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1475,"column":1,"offset":41385},"end":{"line":1477,"column":23,"offset":41444},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1477,"column":24,"offset":41445},"end":{"line":1477,"column":67,"offset":41488},"indent":[]}}],"position":{"start":{"line":1477,"column":23,"offset":41444},"end":{"line":1477,"column":68,"offset":41489},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1477,"column":68,"offset":41489},"end":{"line":1478,"column":25,"offset":41515},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1478,"column":26,"offset":41516},"end":{"line":1478,"column":71,"offset":41561},"indent":[]}}],"position":{"start":{"line":1478,"column":25,"offset":41515},"end":{"line":1478,"column":72,"offset":41562},"indent":[]}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1478,"column":72,"offset":41562},"end":{"line":1479,"column":15,"offset":41578},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/union-find","children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1479,"column":16,"offset":41579},"end":{"line":1479,"column":51,"offset":41614},"indent":[]}}],"position":{"start":{"line":1479,"column":15,"offset":41578},"end":{"line":1479,"column":52,"offset":41615},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Number of Islands\": ","position":{"start":{"line":1479,"column":52,"offset":41615},"end":{"line":1481,"column":22,"offset":41658},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/number-of-islands","children":[{"type":"text","value":"https://leetcode.com/problems/number-of-islands","position":{"start":{"line":1481,"column":23,"offset":41659},"end":{"line":1481,"column":70,"offset":41706},"indent":[]}}],"position":{"start":{"line":1481,"column":22,"offset":41658},"end":{"line":1481,"column":71,"offset":41707},"indent":[]}},{"type":"text","value":"\n\"Walls and Gates\": ","position":{"start":{"line":1481,"column":71,"offset":41707},"end":{"line":1482,"column":20,"offset":41728},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/walls-and-gates","children":[{"type":"text","value":"https://leetcode.com/problems/walls-and-gates","position":{"start":{"line":1482,"column":21,"offset":41729},"end":{"line":1482,"column":66,"offset":41774},"indent":[]}}],"position":{"start":{"line":1482,"column":20,"offset":41728},"end":{"line":1482,"column":67,"offset":41775},"indent":[]}}],"position":{"start":{"line":1475,"column":1,"offset":41385},"end":{"line":1482,"column":67,"offset":41775},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1484,"column":1,"offset":41779},"end":{"line":1484,"column":4,"offset":41782},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#130-surrounded-regionshttpsleetcodecomproblemssurrounded-regionsdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1486,"column":2,"offset":41787},"end":{"line":1486,"column":142,"offset":41927},"indent":[]}}],"position":{"start":{"line":1486,"column":1,"offset":41786},"end":{"line":1486,"column":221,"offset":42006},"indent":[]}}],"position":{"start":{"line":1486,"column":1,"offset":41786},"end":{"line":1486,"column":221,"offset":42006},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1488,"column":4,"offset":42013},"end":{"line":1488,"column":6,"offset":42015},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/surrounded-regions/description/","children":[{"type":"text","value":"130. Surrounded Regions","position":{"start":{"line":1488,"column":7,"offset":42016},"end":{"line":1488,"column":30,"offset":42039},"indent":[]}}],"position":{"start":{"line":1488,"column":6,"offset":42015},"end":{"line":1488,"column":94,"offset":42103},"indent":[]}}],"position":{"start":{"line":1488,"column":1,"offset":42010},"end":{"line":1488,"column":94,"offset":42103},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1490,"column":5,"offset":42111},"end":{"line":1490,"column":12,"offset":42118},"indent":[]}}],"position":{"start":{"line":1490,"column":1,"offset":42107},"end":{"line":1490,"column":12,"offset":42118},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a 2D board containing ","position":{"start":{"line":1492,"column":1,"offset":42122},"end":{"line":1492,"column":29,"offset":42150},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1492,"column":29,"offset":42150},"end":{"line":1492,"column":34,"offset":42155},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1492,"column":34,"offset":42155},"end":{"line":1492,"column":39,"offset":42160},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1492,"column":39,"offset":42160},"end":{"line":1492,"column":44,"offset":42165},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":1492,"column":44,"offset":42165},"end":{"line":1492,"column":46,"offset":42167},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"the letter O","position":{"start":{"line":1492,"column":48,"offset":42169},"end":{"line":1492,"column":60,"offset":42181},"indent":[]}}],"position":{"start":{"line":1492,"column":46,"offset":42167},"end":{"line":1492,"column":62,"offset":42183},"indent":[]}},{"type":"text","value":"), capture all regions surrounded by ","position":{"start":{"line":1492,"column":62,"offset":42183},"end":{"line":1492,"column":99,"offset":42220},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1492,"column":99,"offset":42220},"end":{"line":1492,"column":104,"offset":42225},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1492,"column":104,"offset":42225},"end":{"line":1492,"column":105,"offset":42226},"indent":[]}}],"position":{"start":{"line":1492,"column":1,"offset":42122},"end":{"line":1492,"column":105,"offset":42226},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A region is captured by flipping all ","position":{"start":{"line":1494,"column":1,"offset":42230},"end":{"line":1494,"column":38,"offset":42267},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1494,"column":38,"offset":42267},"end":{"line":1494,"column":43,"offset":42272},"indent":[]}},{"type":"text","value":"s into ","position":{"start":{"line":1494,"column":43,"offset":42272},"end":{"line":1494,"column":50,"offset":42279},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1494,"column":50,"offset":42279},"end":{"line":1494,"column":55,"offset":42284},"indent":[]}},{"type":"text","value":"s in that surrounded region.","position":{"start":{"line":1494,"column":55,"offset":42284},"end":{"line":1494,"column":83,"offset":42312},"indent":[]}}],"position":{"start":{"line":1494,"column":1,"offset":42230},"end":{"line":1494,"column":83,"offset":42312},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1496,"column":3,"offset":42318},"end":{"line":1496,"column":11,"offset":42326},"indent":[]}}],"position":{"start":{"line":1496,"column":1,"offset":42316},"end":{"line":1496,"column":13,"offset":42328},"indent":[]}}],"position":{"start":{"line":1496,"column":1,"offset":42316},"end":{"line":1496,"column":13,"offset":42328},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"X X X X\nX O O X\nX X O X\nX O X X","position":{"start":{"line":1498,"column":1,"offset":42332},"end":{"line":1504,"column":4,"offset":42378},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After running your function, the board should be:","position":{"start":{"line":1506,"column":1,"offset":42382},"end":{"line":1506,"column":50,"offset":42431},"indent":[]}}],"position":{"start":{"line":1506,"column":1,"offset":42382},"end":{"line":1506,"column":50,"offset":42431},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"X X X X\nX X X X\nX X X X\nX O X X","position":{"start":{"line":1508,"column":1,"offset":42435},"end":{"line":1514,"column":4,"offset":42481},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1516,"column":3,"offset":42487},"end":{"line":1516,"column":15,"offset":42499},"indent":[]}}],"position":{"start":{"line":1516,"column":1,"offset":42485},"end":{"line":1516,"column":17,"offset":42501},"indent":[]}}],"position":{"start":{"line":1516,"column":1,"offset":42485},"end":{"line":1516,"column":17,"offset":42501},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Surrounded regions shouldn't be on the border, which means that any ","position":{"start":{"line":1518,"column":1,"offset":42505},"end":{"line":1518,"column":69,"offset":42573},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1518,"column":69,"offset":42573},"end":{"line":1518,"column":74,"offset":42578},"indent":[]}},{"type":"text","value":" on the border of the board are not flipped to ","position":{"start":{"line":1518,"column":74,"offset":42578},"end":{"line":1518,"column":121,"offset":42625},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1518,"column":121,"offset":42625},"end":{"line":1518,"column":126,"offset":42630},"indent":[]}},{"type":"text","value":". Any ","position":{"start":{"line":1518,"column":126,"offset":42630},"end":{"line":1518,"column":132,"offset":42636},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1518,"column":132,"offset":42636},"end":{"line":1518,"column":137,"offset":42641},"indent":[]}},{"type":"text","value":" that is not on the border and it is not connected to an ","position":{"start":{"line":1518,"column":137,"offset":42641},"end":{"line":1518,"column":194,"offset":42698},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1518,"column":194,"offset":42698},"end":{"line":1518,"column":199,"offset":42703},"indent":[]}},{"type":"text","value":" on the border will be flipped to ","position":{"start":{"line":1518,"column":199,"offset":42703},"end":{"line":1518,"column":233,"offset":42737},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1518,"column":233,"offset":42737},"end":{"line":1518,"column":238,"offset":42742},"indent":[]}},{"type":"text","value":". Two cells are connected if they are adjacent cells connected horizontally or vertically.","position":{"start":{"line":1518,"column":238,"offset":42742},"end":{"line":1518,"column":328,"offset":42832},"indent":[]}}],"position":{"start":{"line":1518,"column":1,"offset":42505},"end":{"line":1518,"column":328,"offset":42832},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1520,"column":5,"offset":42840},"end":{"line":1520,"column":13,"offset":42848},"indent":[]}}],"position":{"start":{"line":1520,"column":1,"offset":42836},"end":{"line":1520,"column":13,"offset":42848},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find all the ","position":{"start":{"line":1522,"column":1,"offset":42852},"end":{"line":1522,"column":14,"offset":42865},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":14,"offset":42865},"end":{"line":1522,"column":17,"offset":42868},"indent":[]}},{"type":"text","value":"s that are connected to the ","position":{"start":{"line":1522,"column":17,"offset":42868},"end":{"line":1522,"column":45,"offset":42896},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":45,"offset":42896},"end":{"line":1522,"column":48,"offset":42899},"indent":[]}},{"type":"text","value":"s on the border, change them to ","position":{"start":{"line":1522,"column":48,"offset":42899},"end":{"line":1522,"column":80,"offset":42931},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1522,"column":80,"offset":42931},"end":{"line":1522,"column":83,"offset":42934},"indent":[]}},{"type":"text","value":". Then scan the board, change ","position":{"start":{"line":1522,"column":83,"offset":42934},"end":{"line":1522,"column":113,"offset":42964},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":113,"offset":42964},"end":{"line":1522,"column":116,"offset":42967},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1522,"column":116,"offset":42967},"end":{"line":1522,"column":120,"offset":42971},"indent":[]}},{"type":"inlineCode","value":"X","position":{"start":{"line":1522,"column":120,"offset":42971},"end":{"line":1522,"column":123,"offset":42974},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1522,"column":123,"offset":42974},"end":{"line":1522,"column":128,"offset":42979},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1522,"column":128,"offset":42979},"end":{"line":1522,"column":131,"offset":42982},"indent":[]}},{"type":"text","value":" back to ","position":{"start":{"line":1522,"column":131,"offset":42982},"end":{"line":1522,"column":140,"offset":42991},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":140,"offset":42991},"end":{"line":1522,"column":143,"offset":42994},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1522,"column":143,"offset":42994},"end":{"line":1522,"column":144,"offset":42995},"indent":[]}}],"position":{"start":{"line":1522,"column":1,"offset":42852},"end":{"line":1522,"column":144,"offset":42995},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The process of finding the connected ","position":{"start":{"line":1524,"column":1,"offset":42999},"end":{"line":1524,"column":38,"offset":43036},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1524,"column":38,"offset":43036},"end":{"line":1524,"column":41,"offset":43039},"indent":[]}},{"type":"text","value":"s is just like tree traversal. ","position":{"start":{"line":1524,"column":41,"offset":43039},"end":{"line":1524,"column":72,"offset":43070},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1524,"column":72,"offset":43070},"end":{"line":1524,"column":75,"offset":43073},"indent":[]}},{"type":"text","value":"s on the border are the same level. Their children are the second level. And so on.","position":{"start":{"line":1524,"column":75,"offset":43073},"end":{"line":1524,"column":158,"offset":43156},"indent":[]}}],"position":{"start":{"line":1524,"column":1,"offset":42999},"end":{"line":1524,"column":158,"offset":43156},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So both BFS and DFS are good. I prefer BFS when pruning is not needed in favor of its readability.","position":{"start":{"line":1526,"column":1,"offset":43160},"end":{"line":1526,"column":99,"offset":43258},"indent":[]}}],"position":{"start":{"line":1526,"column":1,"offset":43160},"end":{"line":1526,"column":99,"offset":43258},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */\nlet solve = function (board) {\n    const height = board.length;\n    if (height <= 1) {\n        return;\n    }\n    const width = board[0].length;\n    if (width <= 1) {\n        return;\n    }\n\n    const rowend = height - 1;\n    const colend = width - 1;\n\n    const queue = [];\n\n    for (let row = 0; row < height; row++) {\n        if (board[row][0] === 'O') {\n            board[row][0] = '#';\n            queue.push(row, 0);\n        }\n        if (board[row][colend] === 'O') {\n            board[row][colend] = '#';\n            queue.push(row, colend);\n        }\n    }\n\n    for (let col = 0; col < width; col++) {\n        if (board[0][col] === 'O') {\n            board[0][col] = '#';\n            queue.push(0, col);\n        }\n        if (board[rowend][col] === 'O') {\n            board[rowend][col] = '#';\n            queue.push(rowend, col);\n        }\n    }\n\n    while (queue.length > 0) {\n        const row = queue.shift();\n        const col = queue.shift();\n        if (row < rowend && board[row + 1][col] === 'O') {\n            board[row + 1][col] = '#';\n            queue.push(row + 1, col);\n        }\n        if (row > 0 && board[row - 1][col] === 'O') {\n            board[row - 1][col] = '#';\n            queue.push(row - 1, col);\n        }\n        if (board[row][col + 1] === 'O') {\n            board[row][col + 1] = '#';\n            queue.push(row, col + 1);\n        }\n        if (board[row][col - 1] === 'O') {\n            board[row][col - 1] = '#';\n            queue.push(row, col - 1);\n        }\n    }\n\n    for (let row = 0; row < height; row++) {\n        for (let col = 0; col < width; col++) {\n            if (board[row][col] === '#') {\n                board[row][col] = 'O';\n            } else if (board[row][col] === 'O') {\n                board[row][col] = 'X';\n            }\n        }\n    }\n};","position":{"start":{"line":1528,"column":1,"offset":43262},"end":{"line":1601,"column":4,"offset":45264},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1603,"column":1,"offset":45268},"end":{"line":1603,"column":4,"offset":45271},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1605,"column":1,"offset":45275},"end":{"line":1607,"column":23,"offset":45334},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1607,"column":24,"offset":45335},"end":{"line":1607,"column":67,"offset":45378},"indent":[]}}],"position":{"start":{"line":1607,"column":23,"offset":45334},"end":{"line":1607,"column":68,"offset":45379},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1607,"column":68,"offset":45379},"end":{"line":1608,"column":25,"offset":45405},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1608,"column":26,"offset":45406},"end":{"line":1608,"column":71,"offset":45451},"indent":[]}}],"position":{"start":{"line":1608,"column":25,"offset":45405},"end":{"line":1608,"column":72,"offset":45452},"indent":[]}},{"type":"text","value":"\n\"Graph\": ","position":{"start":{"line":1608,"column":72,"offset":45452},"end":{"line":1609,"column":10,"offset":45463},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/graph","children":[{"type":"text","value":"https://leetcode.com/tag/graph","position":{"start":{"line":1609,"column":11,"offset":45464},"end":{"line":1609,"column":41,"offset":45494},"indent":[]}}],"position":{"start":{"line":1609,"column":10,"offset":45463},"end":{"line":1609,"column":42,"offset":45495},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Copy List with Random Pointer\": ","position":{"start":{"line":1609,"column":42,"offset":45495},"end":{"line":1611,"column":34,"offset":45550},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/copy-list-with-random-pointer","children":[{"type":"text","value":"https://leetcode.com/problems/copy-list-with-random-pointer","position":{"start":{"line":1611,"column":35,"offset":45551},"end":{"line":1611,"column":94,"offset":45610},"indent":[]}}],"position":{"start":{"line":1611,"column":34,"offset":45550},"end":{"line":1611,"column":95,"offset":45611},"indent":[]}}],"position":{"start":{"line":1605,"column":1,"offset":45275},"end":{"line":1611,"column":95,"offset":45611},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1613,"column":1,"offset":45615},"end":{"line":1613,"column":4,"offset":45618},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#133-clone-graphhttpsleetcodecomproblemsclone-graphdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1615,"column":2,"offset":45623},"end":{"line":1615,"column":142,"offset":45763},"indent":[]}}],"position":{"start":{"line":1615,"column":1,"offset":45622},"end":{"line":1615,"column":207,"offset":45828},"indent":[]}}],"position":{"start":{"line":1615,"column":1,"offset":45622},"end":{"line":1615,"column":207,"offset":45828},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1617,"column":4,"offset":45835},"end":{"line":1617,"column":6,"offset":45837},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/clone-graph/description/","children":[{"type":"text","value":"133. Clone Graph","position":{"start":{"line":1617,"column":7,"offset":45838},"end":{"line":1617,"column":23,"offset":45854},"indent":[]}}],"position":{"start":{"line":1617,"column":6,"offset":45837},"end":{"line":1617,"column":80,"offset":45911},"indent":[]}}],"position":{"start":{"line":1617,"column":1,"offset":45832},"end":{"line":1617,"column":80,"offset":45911},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1619,"column":5,"offset":45919},"end":{"line":1619,"column":12,"offset":45926},"indent":[]}}],"position":{"start":{"line":1619,"column":1,"offset":45915},"end":{"line":1619,"column":12,"offset":45926},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the head of a graph, return a deep copy (clone) of the graph. Each node in the graph contains a ","position":{"start":{"line":1621,"column":1,"offset":45930},"end":{"line":1621,"column":103,"offset":46032},"indent":[]}},{"type":"inlineCode","value":"label","position":{"start":{"line":1621,"column":103,"offset":46032},"end":{"line":1621,"column":110,"offset":46039},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":1621,"column":110,"offset":46039},"end":{"line":1621,"column":112,"offset":46041},"indent":[]}},{"type":"inlineCode","value":"int","position":{"start":{"line":1621,"column":112,"offset":46041},"end":{"line":1621,"column":117,"offset":46046},"indent":[]}},{"type":"text","value":") and a list (","position":{"start":{"line":1621,"column":117,"offset":46046},"end":{"line":1621,"column":131,"offset":46060},"indent":[]}},{"type":"inlineCode","value":"List[UndirectedGraphNode]","position":{"start":{"line":1621,"column":131,"offset":46060},"end":{"line":1621,"column":158,"offset":46087},"indent":[]}},{"type":"text","value":") of its ","position":{"start":{"line":1621,"column":158,"offset":46087},"end":{"line":1621,"column":167,"offset":46096},"indent":[]}},{"type":"inlineCode","value":"neighbors","position":{"start":{"line":1621,"column":167,"offset":46096},"end":{"line":1621,"column":178,"offset":46107},"indent":[]}},{"type":"text","value":". There is an edge between the given node and each of the nodes in its neighbors.","position":{"start":{"line":1621,"column":178,"offset":46107},"end":{"line":1621,"column":259,"offset":46188},"indent":[]}}],"position":{"start":{"line":1621,"column":1,"offset":45930},"end":{"line":1621,"column":259,"offset":46188},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"OJ's undirected graph serialization (so you can understand error output):","position":{"start":{"line":1623,"column":1,"offset":46192},"end":{"line":1623,"column":74,"offset":46265},"indent":[]}}],"position":{"start":{"line":1623,"column":1,"offset":46192},"end":{"line":1623,"column":74,"offset":46265},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nodes are labeled uniquely.","position":{"start":{"line":1625,"column":1,"offset":46269},"end":{"line":1625,"column":28,"offset":46296},"indent":[]}}],"position":{"start":{"line":1625,"column":1,"offset":46269},"end":{"line":1625,"column":28,"offset":46296},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":1627,"column":1,"offset":46300},"end":{"line":1627,"column":8,"offset":46307},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1627,"column":8,"offset":46307},"end":{"line":1627,"column":11,"offset":46310},"indent":[]}},{"type":"text","value":" as a separator for each node, and ","position":{"start":{"line":1627,"column":11,"offset":46310},"end":{"line":1627,"column":46,"offset":46345},"indent":[]}},{"type":"inlineCode","value":",","position":{"start":{"line":1627,"column":46,"offset":46345},"end":{"line":1627,"column":49,"offset":46348},"indent":[]}},{"type":"text","value":" as a separator for node label and each neighbor of the node.","position":{"start":{"line":1627,"column":49,"offset":46348},"end":{"line":1627,"column":110,"offset":46409},"indent":[]}}],"position":{"start":{"line":1627,"column":1,"offset":46300},"end":{"line":1627,"column":110,"offset":46409},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As an example, consider the serialized graph ","position":{"start":{"line":1629,"column":1,"offset":46413},"end":{"line":1629,"column":46,"offset":46458},"indent":[]}},{"type":"inlineCode","value":"{0,1,2#1,2#2,2}","position":{"start":{"line":1629,"column":46,"offset":46458},"end":{"line":1629,"column":63,"offset":46475},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1629,"column":63,"offset":46475},"end":{"line":1629,"column":64,"offset":46476},"indent":[]}}],"position":{"start":{"line":1629,"column":1,"offset":46413},"end":{"line":1629,"column":64,"offset":46476},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The graph has a total of three nodes, and therefore contains three parts as separated by ","position":{"start":{"line":1631,"column":1,"offset":46480},"end":{"line":1631,"column":90,"offset":46569},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1631,"column":90,"offset":46569},"end":{"line":1631,"column":93,"offset":46572},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1631,"column":93,"offset":46572},"end":{"line":1631,"column":94,"offset":46573},"indent":[]}}],"position":{"start":{"line":1631,"column":1,"offset":46480},"end":{"line":1631,"column":94,"offset":46573},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"First node is labeled as ","position":{"start":{"line":1633,"column":5,"offset":46581},"end":{"line":1633,"column":30,"offset":46606},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1633,"column":30,"offset":46606},"end":{"line":1633,"column":33,"offset":46609},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1633,"column":33,"offset":46609},"end":{"line":1633,"column":48,"offset":46624},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1633,"column":48,"offset":46624},"end":{"line":1633,"column":51,"offset":46627},"indent":[]}},{"type":"text","value":" to both nodes ","position":{"start":{"line":1633,"column":51,"offset":46627},"end":{"line":1633,"column":66,"offset":46642},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1633,"column":66,"offset":46642},"end":{"line":1633,"column":69,"offset":46645},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1633,"column":69,"offset":46645},"end":{"line":1633,"column":74,"offset":46650},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1633,"column":74,"offset":46650},"end":{"line":1633,"column":77,"offset":46653},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1633,"column":77,"offset":46653},"end":{"line":1633,"column":78,"offset":46654},"indent":[]}}],"position":{"start":{"line":1633,"column":5,"offset":46581},"end":{"line":1633,"column":78,"offset":46654},"indent":[]}}],"position":{"start":{"line":1633,"column":1,"offset":46577},"end":{"line":1633,"column":78,"offset":46654},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Second node is labeled as ","position":{"start":{"line":1634,"column":5,"offset":46660},"end":{"line":1634,"column":31,"offset":46686},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1634,"column":31,"offset":46686},"end":{"line":1634,"column":34,"offset":46689},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1634,"column":34,"offset":46689},"end":{"line":1634,"column":49,"offset":46704},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1634,"column":49,"offset":46704},"end":{"line":1634,"column":52,"offset":46707},"indent":[]}},{"type":"text","value":" to node ","position":{"start":{"line":1634,"column":52,"offset":46707},"end":{"line":1634,"column":61,"offset":46716},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1634,"column":61,"offset":46716},"end":{"line":1634,"column":64,"offset":46719},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1634,"column":64,"offset":46719},"end":{"line":1634,"column":65,"offset":46720},"indent":[]}}],"position":{"start":{"line":1634,"column":5,"offset":46660},"end":{"line":1634,"column":65,"offset":46720},"indent":[]}}],"position":{"start":{"line":1634,"column":1,"offset":46656},"end":{"line":1634,"column":65,"offset":46720},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Third node is labeled as ","position":{"start":{"line":1635,"column":5,"offset":46726},"end":{"line":1635,"column":30,"offset":46751},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1635,"column":30,"offset":46751},"end":{"line":1635,"column":33,"offset":46754},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1635,"column":33,"offset":46754},"end":{"line":1635,"column":48,"offset":46769},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1635,"column":48,"offset":46769},"end":{"line":1635,"column":51,"offset":46772},"indent":[]}},{"type":"text","value":" to node ","position":{"start":{"line":1635,"column":51,"offset":46772},"end":{"line":1635,"column":60,"offset":46781},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1635,"column":60,"offset":46781},"end":{"line":1635,"column":63,"offset":46784},"indent":[]}},{"type":"text","value":" (itself), thus forming a self-cycle.","position":{"start":{"line":1635,"column":63,"offset":46784},"end":{"line":1635,"column":100,"offset":46821},"indent":[]}}],"position":{"start":{"line":1635,"column":5,"offset":46726},"end":{"line":1635,"column":100,"offset":46821},"indent":[]}}],"position":{"start":{"line":1635,"column":1,"offset":46722},"end":{"line":1635,"column":100,"offset":46821},"indent":[]}}],"position":{"start":{"line":1633,"column":1,"offset":46577},"end":{"line":1635,"column":100,"offset":46821},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Visually, the graph looks like the following:","position":{"start":{"line":1637,"column":1,"offset":46825},"end":{"line":1637,"column":46,"offset":46870},"indent":[]}}],"position":{"start":{"line":1637,"column":1,"offset":46825},"end":{"line":1637,"column":46,"offset":46870},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"       1\n      / \\\n     /   \\\n    0 --- 2\n         / \\\n         \\_/","position":{"start":{"line":1639,"column":1,"offset":46874},"end":{"line":1647,"column":4,"offset":46958},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note","position":{"start":{"line":1649,"column":3,"offset":46964},"end":{"line":1649,"column":7,"offset":46968},"indent":[]}}],"position":{"start":{"line":1649,"column":1,"offset":46962},"end":{"line":1649,"column":9,"offset":46970},"indent":[]}},{"type":"text","value":": The information about the tree serialization is only meant so that you can understand error output if you get a wrong answer. You don't need to understand the serialization to solve the problem.","position":{"start":{"line":1649,"column":9,"offset":46970},"end":{"line":1649,"column":205,"offset":47166},"indent":[]}}],"position":{"start":{"line":1649,"column":1,"offset":46962},"end":{"line":1649,"column":205,"offset":47166},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1651,"column":5,"offset":47174},"end":{"line":1651,"column":13,"offset":47182},"indent":[]}}],"position":{"start":{"line":1651,"column":1,"offset":47170},"end":{"line":1651,"column":13,"offset":47182},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"DFS. Cache the visited node before entering the next recursion.","position":{"start":{"line":1653,"column":1,"offset":47186},"end":{"line":1653,"column":64,"offset":47249},"indent":[]}}],"position":{"start":{"line":1653,"column":1,"offset":47186},"end":{"line":1653,"column":64,"offset":47249},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for undirected graph.\n * function UndirectedGraphNode(label) {\n *     this.label = label;\n *     this.neighbors = [];   // Array of UndirectedGraphNode\n * }\n */\n\n/**\n * @param {UndirectedGraphNode} graph\n * @return {UndirectedGraphNode}\n */\nlet cloneGraph = function (graph) {\n    const cache = {};\n    return _clone(graph);\n\n    function _clone(graph) {\n        if (!graph) {\n            return graph;\n        }\n        const label = graph.label;\n        if (!cache[label]) {\n            cache[label] = new UndirectedGraphNode(label);\n            cache[label].neighbors = graph.neighbors.map(_clone);\n        }\n        return cache[label];\n    }\n};","position":{"start":{"line":1655,"column":1,"offset":47253},"end":{"line":1684,"column":4,"offset":47959},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":"binary-tree-upside-down","url":"https://github.com/everthis/leetcode-js/blob/master/images/binary-tree-upside-down.webp","alt":"alt text","position":{"start":{"line":1686,"column":1,"offset":47963},"end":{"line":1686,"column":127,"offset":48089},"indent":[]}}],"position":{"start":{"line":1686,"column":1,"offset":47963},"end":{"line":1686,"column":127,"offset":48089},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nconst upsideDownBinaryTree = function (root) {\n    let curr = root;\n    let next = null;\n    let temp = null;\n    let prev = null;\n    while (curr !== null) {\n        next = curr.left;\n        curr.left = temp;\n        temp = curr.right;\n        curr.right = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n};\n\n// another\n\nconst upsideDownBinaryTree = function (root) {\n    if (root == null || root.left == null) {\n        return root;\n    }\n    const newRoot = upsideDownBinaryTree(root.left);\n    root.left.left = root.right;\n    root.left.right = root;\n    root.left = null;\n    root.right = null;\n    return newRoot;\n};","position":{"start":{"line":1688,"column":1,"offset":48093},"end":{"line":1729,"column":4,"offset":48986},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":"maximum-sum-circular-subarray","url":"https://github.com/everthis/leetcode-js/blob/master/images/maximum-sum-circular-subarray.png","alt":"alt text","position":{"start":{"line":1731,"column":1,"offset":48990},"end":{"line":1731,"column":138,"offset":49127},"indent":[]}}],"position":{"start":{"line":1731,"column":1,"offset":48990},"end":{"line":1731,"column":138,"offset":49127},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} A\n * @return {number}\n */\nconst maxSubarraySumCircular = function (A) {\n    let minSum = Infinity,\n        sum = 0,\n        maxSum = -Infinity,\n        curMax = 0,\n        curMin = 0;\n    for (let a of A) {\n        sum += a;\n        curMax = Math.max(curMax + a, a);\n        maxSum = Math.max(maxSum, curMax);\n        curMin = Math.min(curMin + a, a);\n        minSum = Math.min(minSum, curMin);\n    }\n    return maxSum > 0 ? Math.max(maxSum, sum - minSum) : maxSum;\n};","position":{"start":{"line":1733,"column":1,"offset":49131},"end":{"line":1753,"column":4,"offset":49654},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#balanced-binary-tree---leetcode","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1755,"column":2,"offset":49659},"end":{"line":1755,"column":142,"offset":49799},"indent":[]}}],"position":{"start":{"line":1755,"column":1,"offset":49658},"end":{"line":1755,"column":177,"offset":49834},"indent":[]}}],"position":{"start":{"line":1755,"column":1,"offset":49658},"end":{"line":1755,"column":177,"offset":49834},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"âž¤ Balanced Binary Tree - LeetCode","position":{"start":{"line":1757,"column":3,"offset":49840},"end":{"line":1757,"column":36,"offset":49873},"indent":[]}}],"position":{"start":{"line":1757,"column":1,"offset":49838},"end":{"line":1757,"column":36,"offset":49873},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1759,"column":3,"offset":49879},"end":{"line":1759,"column":144,"offset":50020},"indent":[]}}],"position":{"start":{"line":1759,"column":3,"offset":49879},"end":{"line":1759,"column":144,"offset":50020},"indent":[]}}],"position":{"start":{"line":1759,"column":1,"offset":49877},"end":{"line":1759,"column":144,"offset":50020},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree, determine if it is height-balanced.","position":{"start":{"line":1761,"column":1,"offset":50024},"end":{"line":1761,"column":57,"offset":50080},"indent":[]}}],"position":{"start":{"line":1761,"column":1,"offset":50024},"end":{"line":1761,"column":57,"offset":50080},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as:","position":{"start":{"line":1763,"column":1,"offset":50084},"end":{"line":1763,"column":63,"offset":50146},"indent":[]}}],"position":{"start":{"line":1763,"column":1,"offset":50084},"end":{"line":1763,"column":63,"offset":50146},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"a binary tree in which the left and right subtrees of ","position":{"start":{"line":1765,"column":3,"offset":50152},"end":{"line":1765,"column":57,"offset":50206},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"every","position":{"start":{"line":1765,"column":58,"offset":50207},"end":{"line":1765,"column":63,"offset":50212},"indent":[]}}],"position":{"start":{"line":1765,"column":57,"offset":50206},"end":{"line":1765,"column":64,"offset":50213},"indent":[]}},{"type":"text","value":" node differ in height by no more than 1.","position":{"start":{"line":1765,"column":64,"offset":50213},"end":{"line":1765,"column":105,"offset":50254},"indent":[]}}],"position":{"start":{"line":1765,"column":3,"offset":50152},"end":{"line":1765,"column":105,"offset":50254},"indent":[]}}],"position":{"start":{"line":1765,"column":1,"offset":50150},"end":{"line":1765,"column":105,"offset":50254},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1767,"column":3,"offset":50260},"end":{"line":1767,"column":13,"offset":50270},"indent":[]}}],"position":{"start":{"line":1767,"column":1,"offset":50258},"end":{"line":1767,"column":15,"offset":50272},"indent":[]}}],"position":{"start":{"line":1767,"column":1,"offset":50258},"end":{"line":1767,"column":15,"offset":50272},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg","alt":null,"position":{"start":{"line":1769,"column":1,"offset":50276},"end":{"line":1769,"column":66,"offset":50341},"indent":[]}}],"position":{"start":{"line":1769,"column":1,"offset":50276},"end":{"line":1769,"column":66,"offset":50341},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1771,"column":3,"offset":50347},"end":{"line":1771,"column":9,"offset":50353},"indent":[]}}],"position":{"start":{"line":1771,"column":1,"offset":50345},"end":{"line":1771,"column":11,"offset":50355},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1771,"column":11,"offset":50355},"end":{"line":1771,"column":19,"offset":50363},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1771,"column":19,"offset":50363},"end":{"line":1771,"column":21,"offset":50365},"indent":[]}},{"type":"text","value":"3,9,20,null,null,15,7]\n","position":{"start":{"line":1771,"column":21,"offset":50365},"end":{"line":1772,"column":1,"offset":50389},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1772,"column":3,"offset":50391},"end":{"line":1772,"column":10,"offset":50398},"indent":[]}}],"position":{"start":{"line":1772,"column":1,"offset":50389},"end":{"line":1772,"column":12,"offset":50400},"indent":[]}},{"type":"text","value":" true","position":{"start":{"line":1772,"column":12,"offset":50400},"end":{"line":1772,"column":17,"offset":50405},"indent":[]}}],"position":{"start":{"line":1771,"column":1,"offset":50345},"end":{"line":1772,"column":17,"offset":50405},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1774,"column":3,"offset":50411},"end":{"line":1774,"column":13,"offset":50421},"indent":[]}}],"position":{"start":{"line":1774,"column":1,"offset":50409},"end":{"line":1774,"column":15,"offset":50423},"indent":[]}}],"position":{"start":{"line":1774,"column":1,"offset":50409},"end":{"line":1774,"column":15,"offset":50423},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg","alt":null,"position":{"start":{"line":1776,"column":1,"offset":50427},"end":{"line":1776,"column":66,"offset":50492},"indent":[]}}],"position":{"start":{"line":1776,"column":1,"offset":50427},"end":{"line":1776,"column":66,"offset":50492},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1778,"column":3,"offset":50498},"end":{"line":1778,"column":9,"offset":50504},"indent":[]}}],"position":{"start":{"line":1778,"column":1,"offset":50496},"end":{"line":1778,"column":11,"offset":50506},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1778,"column":11,"offset":50506},"end":{"line":1778,"column":19,"offset":50514},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1778,"column":19,"offset":50514},"end":{"line":1778,"column":21,"offset":50516},"indent":[]}},{"type":"text","value":"1,2,2,3,3,null,null,4,4]\n","position":{"start":{"line":1778,"column":21,"offset":50516},"end":{"line":1779,"column":1,"offset":50542},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1779,"column":3,"offset":50544},"end":{"line":1779,"column":10,"offset":50551},"indent":[]}}],"position":{"start":{"line":1779,"column":1,"offset":50542},"end":{"line":1779,"column":12,"offset":50553},"indent":[]}},{"type":"text","value":" false","position":{"start":{"line":1779,"column":12,"offset":50553},"end":{"line":1779,"column":18,"offset":50559},"indent":[]}}],"position":{"start":{"line":1778,"column":1,"offset":50496},"end":{"line":1779,"column":18,"offset":50559},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1781,"column":3,"offset":50565},"end":{"line":1781,"column":13,"offset":50575},"indent":[]}}],"position":{"start":{"line":1781,"column":1,"offset":50563},"end":{"line":1781,"column":15,"offset":50577},"indent":[]}}],"position":{"start":{"line":1781,"column":1,"offset":50563},"end":{"line":1781,"column":15,"offset":50577},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1783,"column":3,"offset":50583},"end":{"line":1783,"column":9,"offset":50589},"indent":[]}}],"position":{"start":{"line":1783,"column":1,"offset":50581},"end":{"line":1783,"column":11,"offset":50591},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1783,"column":11,"offset":50591},"end":{"line":1783,"column":19,"offset":50599},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1783,"column":19,"offset":50599},"end":{"line":1783,"column":21,"offset":50601},"indent":[]}},{"type":"text","value":"]\n","position":{"start":{"line":1783,"column":21,"offset":50601},"end":{"line":1784,"column":1,"offset":50604},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1784,"column":3,"offset":50606},"end":{"line":1784,"column":10,"offset":50613},"indent":[]}}],"position":{"start":{"line":1784,"column":1,"offset":50604},"end":{"line":1784,"column":12,"offset":50615},"indent":[]}},{"type":"text","value":" true","position":{"start":{"line":1784,"column":12,"offset":50615},"end":{"line":1784,"column":17,"offset":50620},"indent":[]}}],"position":{"start":{"line":1783,"column":1,"offset":50581},"end":{"line":1784,"column":17,"offset":50620},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1786,"column":3,"offset":50626},"end":{"line":1786,"column":15,"offset":50638},"indent":[]}}],"position":{"start":{"line":1786,"column":1,"offset":50624},"end":{"line":1786,"column":17,"offset":50640},"indent":[]}}],"position":{"start":{"line":1786,"column":1,"offset":50624},"end":{"line":1786,"column":17,"offset":50640},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1788,"column":3,"offset":50646},"end":{"line":1788,"column":51,"offset":50694},"indent":[]}},{"type":"inlineCode","value":"[0, 5000]","position":{"start":{"line":1788,"column":51,"offset":50694},"end":{"line":1788,"column":62,"offset":50705},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1788,"column":62,"offset":50705},"end":{"line":1788,"column":63,"offset":50706},"indent":[]}}],"position":{"start":{"line":1788,"column":3,"offset":50646},"end":{"line":1788,"column":63,"offset":50706},"indent":[]}}],"position":{"start":{"line":1788,"column":1,"offset":50644},"end":{"line":1788,"column":63,"offset":50706},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-104 <= Node.val <= 104","position":{"start":{"line":1789,"column":3,"offset":50710},"end":{"line":1789,"column":28,"offset":50735},"indent":[]}}],"position":{"start":{"line":1789,"column":3,"offset":50710},"end":{"line":1789,"column":28,"offset":50735},"indent":[]}}],"position":{"start":{"line":1789,"column":1,"offset":50708},"end":{"line":1789,"column":28,"offset":50735},"indent":[]}}],"position":{"start":{"line":1788,"column":1,"offset":50644},"end":{"line":1789,"column":28,"offset":50735},"indent":[1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/balanced-binary-tree/","children":[{"type":"text","value":"Source","position":{"start":{"line":1791,"column":2,"offset":50740},"end":{"line":1791,"column":8,"offset":50746},"indent":[]}}],"position":{"start":{"line":1791,"column":1,"offset":50739},"end":{"line":1791,"column":62,"offset":50800},"indent":[]}},{"type":"text","value":"# Convert Sorted Array to Binary Search Tree","position":{"start":{"line":1791,"column":62,"offset":50800},"end":{"line":1791,"column":106,"offset":50844},"indent":[]}}],"position":{"start":{"line":1791,"column":1,"offset":50739},"end":{"line":1791,"column":106,"offset":50844},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1793,"column":3,"offset":50850},"end":{"line":1793,"column":144,"offset":50991},"indent":[]}}],"position":{"start":{"line":1793,"column":3,"offset":50850},"end":{"line":1793,"column":144,"offset":50991},"indent":[]}}],"position":{"start":{"line":1793,"column":1,"offset":50848},"end":{"line":1793,"column":144,"offset":50991},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given an array where elements are sorted in ascending order, convert it to a height balanced BST.","position":{"start":{"line":1795,"column":1,"offset":50995},"end":{"line":1795,"column":98,"offset":51092},"indent":[]}}],"position":{"start":{"line":1795,"column":1,"offset":50995},"end":{"line":1795,"column":98,"offset":51092},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of ","position":{"start":{"line":1797,"column":1,"offset":51096},"end":{"line":1797,"column":119,"offset":51214},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"every","position":{"start":{"line":1797,"column":120,"offset":51215},"end":{"line":1797,"column":125,"offset":51220},"indent":[]}}],"position":{"start":{"line":1797,"column":119,"offset":51214},"end":{"line":1797,"column":126,"offset":51221},"indent":[]}},{"type":"text","value":" node never differ by more than 1.","position":{"start":{"line":1797,"column":126,"offset":51221},"end":{"line":1797,"column":160,"offset":51255},"indent":[]}}],"position":{"start":{"line":1797,"column":1,"offset":51096},"end":{"line":1797,"column":160,"offset":51255},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1799,"column":3,"offset":51261},"end":{"line":1799,"column":11,"offset":51269},"indent":[]}}],"position":{"start":{"line":1799,"column":1,"offset":51259},"end":{"line":1799,"column":13,"offset":51271},"indent":[]}}],"position":{"start":{"line":1799,"column":1,"offset":51259},"end":{"line":1799,"column":13,"offset":51271},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the sorted array: ","position":{"start":{"line":1801,"column":1,"offset":51275},"end":{"line":1801,"column":25,"offset":51299},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1801,"column":25,"offset":51299},"end":{"line":1801,"column":27,"offset":51301},"indent":[]}},{"type":"text","value":"-10,-3,0,5,9],","position":{"start":{"line":1801,"column":27,"offset":51301},"end":{"line":1801,"column":41,"offset":51315},"indent":[]}}],"position":{"start":{"line":1801,"column":1,"offset":51275},"end":{"line":1801,"column":41,"offset":51315},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One possible answer is: ","position":{"start":{"line":1803,"column":1,"offset":51319},"end":{"line":1803,"column":25,"offset":51343},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1803,"column":25,"offset":51343},"end":{"line":1803,"column":27,"offset":51345},"indent":[]}},{"type":"text","value":"0,-3,9,-10,null,5], which represents the following height balanced BST:","position":{"start":{"line":1803,"column":27,"offset":51345},"end":{"line":1803,"column":98,"offset":51416},"indent":[]}}],"position":{"start":{"line":1803,"column":1,"offset":51319},"end":{"line":1803,"column":98,"offset":51416},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"  0\n / \\\\","position":{"start":{"line":1805,"column":1,"offset":51420},"end":{"line":1806,"column":10,"offset":51438},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":1808,"column":1,"offset":51442},"end":{"line":1808,"column":3,"offset":51444},"indent":[]}},{"type":"text","value":"3 9\n/ /\n","position":{"start":{"line":1808,"column":3,"offset":51444},"end":{"line":1810,"column":1,"offset":51454},"indent":[1,1]}},{"type":"text","value":"-","position":{"start":{"line":1810,"column":1,"offset":51454},"end":{"line":1810,"column":3,"offset":51456},"indent":[]}},{"type":"text","value":"10 5","position":{"start":{"line":1810,"column":3,"offset":51456},"end":{"line":1810,"column":7,"offset":51460},"indent":[]}}],"position":{"start":{"line":1808,"column":1,"offset":51442},"end":{"line":1810,"column":7,"offset":51460},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/","children":[{"type":"text","value":"Source","position":{"start":{"line":1812,"column":2,"offset":51465},"end":{"line":1812,"column":8,"offset":51471},"indent":[]}}],"position":{"start":{"line":1812,"column":1,"offset":51464},"end":{"line":1812,"column":84,"offset":51547},"indent":[]}},{"type":"text","value":"# Delete Node in a BST","position":{"start":{"line":1812,"column":84,"offset":51547},"end":{"line":1812,"column":106,"offset":51569},"indent":[]}}],"position":{"start":{"line":1812,"column":1,"offset":51464},"end":{"line":1812,"column":106,"offset":51569},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1814,"column":3,"offset":51575},"end":{"line":1814,"column":144,"offset":51716},"indent":[]}}],"position":{"start":{"line":1814,"column":3,"offset":51575},"end":{"line":1814,"column":144,"offset":51716},"indent":[]}}],"position":{"start":{"line":1814,"column":1,"offset":51573},"end":{"line":1814,"column":144,"offset":51716},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.","position":{"start":{"line":1816,"column":1,"offset":51720},"end":{"line":1816,"column":157,"offset":51876},"indent":[]}}],"position":{"start":{"line":1816,"column":1,"offset":51720},"end":{"line":1816,"column":157,"offset":51876},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Basically, the deletion can be divided into two stages:","position":{"start":{"line":1818,"column":1,"offset":51880},"end":{"line":1818,"column":56,"offset":51935},"indent":[]}}],"position":{"start":{"line":1818,"column":1,"offset":51880},"end":{"line":1818,"column":56,"offset":51935},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Search for a node to remove.","position":{"start":{"line":1820,"column":5,"offset":51943},"end":{"line":1820,"column":33,"offset":51971},"indent":[]}}],"position":{"start":{"line":1820,"column":5,"offset":51943},"end":{"line":1820,"column":33,"offset":51971},"indent":[]}}],"position":{"start":{"line":1820,"column":1,"offset":51939},"end":{"line":1820,"column":33,"offset":51971},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If the node is found, delete the node.","position":{"start":{"line":1821,"column":5,"offset":51977},"end":{"line":1821,"column":43,"offset":52015},"indent":[]}}],"position":{"start":{"line":1821,"column":5,"offset":51977},"end":{"line":1821,"column":43,"offset":52015},"indent":[]}}],"position":{"start":{"line":1821,"column":1,"offset":51973},"end":{"line":1821,"column":43,"offset":52015},"indent":[]}}],"position":{"start":{"line":1820,"column":1,"offset":51939},"end":{"line":1821,"column":43,"offset":52015},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Follow up:","position":{"start":{"line":1823,"column":3,"offset":52021},"end":{"line":1823,"column":13,"offset":52031},"indent":[]}}],"position":{"start":{"line":1823,"column":1,"offset":52019},"end":{"line":1823,"column":15,"offset":52033},"indent":[]}},{"type":"text","value":" Can you solve it with time complexity ","position":{"start":{"line":1823,"column":15,"offset":52033},"end":{"line":1823,"column":54,"offset":52072},"indent":[]}},{"type":"inlineCode","value":"O(height of tree)","position":{"start":{"line":1823,"column":54,"offset":52072},"end":{"line":1823,"column":73,"offset":52091},"indent":[]}},{"type":"text","value":"?","position":{"start":{"line":1823,"column":73,"offset":52091},"end":{"line":1823,"column":74,"offset":52092},"indent":[]}}],"position":{"start":{"line":1823,"column":1,"offset":52019},"end":{"line":1823,"column":74,"offset":52092},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1825,"column":3,"offset":52098},"end":{"line":1825,"column":13,"offset":52108},"indent":[]}}],"position":{"start":{"line":1825,"column":1,"offset":52096},"end":{"line":1825,"column":15,"offset":52110},"indent":[]}}],"position":{"start":{"line":1825,"column":1,"offset":52096},"end":{"line":1825,"column":15,"offset":52110},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg","alt":null,"position":{"start":{"line":1827,"column":1,"offset":52114},"end":{"line":1827,"column":67,"offset":52180},"indent":[]}}],"position":{"start":{"line":1827,"column":1,"offset":52114},"end":{"line":1827,"column":67,"offset":52180},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1829,"column":3,"offset":52186},"end":{"line":1829,"column":9,"offset":52192},"indent":[]}}],"position":{"start":{"line":1829,"column":1,"offset":52184},"end":{"line":1829,"column":11,"offset":52194},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1829,"column":11,"offset":52194},"end":{"line":1829,"column":19,"offset":52202},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1829,"column":19,"offset":52202},"end":{"line":1829,"column":21,"offset":52204},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7], key = 3\n","position":{"start":{"line":1829,"column":21,"offset":52204},"end":{"line":1830,"column":1,"offset":52232},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1830,"column":3,"offset":52234},"end":{"line":1830,"column":10,"offset":52241},"indent":[]}}],"position":{"start":{"line":1830,"column":1,"offset":52232},"end":{"line":1830,"column":12,"offset":52243},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1830,"column":12,"offset":52243},"end":{"line":1830,"column":13,"offset":52244},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1830,"column":13,"offset":52244},"end":{"line":1830,"column":15,"offset":52246},"indent":[]}},{"type":"text","value":"5,4,6,2,null,null,7]\n","position":{"start":{"line":1830,"column":15,"offset":52246},"end":{"line":1831,"column":1,"offset":52268},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1831,"column":3,"offset":52270},"end":{"line":1831,"column":15,"offset":52282},"indent":[]}}],"position":{"start":{"line":1831,"column":1,"offset":52268},"end":{"line":1831,"column":17,"offset":52284},"indent":[]}},{"type":"text","value":" Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is ","position":{"start":{"line":1831,"column":17,"offset":52284},"end":{"line":1832,"column":21,"offset":52380},"indent":[1]}},{"type":"text","value":"[","position":{"start":{"line":1832,"column":21,"offset":52380},"end":{"line":1832,"column":23,"offset":52382},"indent":[]}},{"type":"text","value":"5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is ","position":{"start":{"line":1832,"column":23,"offset":52382},"end":{"line":1833,"column":44,"offset":52472},"indent":[1]}},{"type":"text","value":"[","position":{"start":{"line":1833,"column":44,"offset":52472},"end":{"line":1833,"column":46,"offset":52474},"indent":[]}},{"type":"text","value":"5,2,6,null,4,null,7] and it's also accepted.\n","position":{"start":{"line":1833,"column":46,"offset":52474},"end":{"line":1834,"column":1,"offset":52520},"indent":[1]}},{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg","alt":null,"position":{"start":{"line":1834,"column":1,"offset":52520},"end":{"line":1834,"column":70,"offset":52589},"indent":[]}}],"position":{"start":{"line":1829,"column":1,"offset":52184},"end":{"line":1834,"column":70,"offset":52589},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1836,"column":3,"offset":52595},"end":{"line":1836,"column":13,"offset":52605},"indent":[]}}],"position":{"start":{"line":1836,"column":1,"offset":52593},"end":{"line":1836,"column":15,"offset":52607},"indent":[]}}],"position":{"start":{"line":1836,"column":1,"offset":52593},"end":{"line":1836,"column":15,"offset":52607},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1838,"column":3,"offset":52613},"end":{"line":1838,"column":9,"offset":52619},"indent":[]}}],"position":{"start":{"line":1838,"column":1,"offset":52611},"end":{"line":1838,"column":11,"offset":52621},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1838,"column":11,"offset":52621},"end":{"line":1838,"column":19,"offset":52629},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1838,"column":19,"offset":52629},"end":{"line":1838,"column":21,"offset":52631},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7], key = 0\n","position":{"start":{"line":1838,"column":21,"offset":52631},"end":{"line":1839,"column":1,"offset":52659},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1839,"column":3,"offset":52661},"end":{"line":1839,"column":10,"offset":52668},"indent":[]}}],"position":{"start":{"line":1839,"column":1,"offset":52659},"end":{"line":1839,"column":12,"offset":52670},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1839,"column":12,"offset":52670},"end":{"line":1839,"column":13,"offset":52671},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1839,"column":13,"offset":52671},"end":{"line":1839,"column":15,"offset":52673},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7]\n","position":{"start":{"line":1839,"column":15,"offset":52673},"end":{"line":1840,"column":1,"offset":52692},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1840,"column":3,"offset":52694},"end":{"line":1840,"column":15,"offset":52706},"indent":[]}}],"position":{"start":{"line":1840,"column":1,"offset":52692},"end":{"line":1840,"column":17,"offset":52708},"indent":[]}},{"type":"text","value":" The tree does not contain a node with value = 0.","position":{"start":{"line":1840,"column":17,"offset":52708},"end":{"line":1840,"column":66,"offset":52757},"indent":[]}}],"position":{"start":{"line":1838,"column":1,"offset":52611},"end":{"line":1840,"column":66,"offset":52757},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1842,"column":3,"offset":52763},"end":{"line":1842,"column":13,"offset":52773},"indent":[]}}],"position":{"start":{"line":1842,"column":1,"offset":52761},"end":{"line":1842,"column":15,"offset":52775},"indent":[]}}],"position":{"start":{"line":1842,"column":1,"offset":52761},"end":{"line":1842,"column":15,"offset":52775},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1844,"column":3,"offset":52781},"end":{"line":1844,"column":9,"offset":52787},"indent":[]}}],"position":{"start":{"line":1844,"column":1,"offset":52779},"end":{"line":1844,"column":11,"offset":52789},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1844,"column":11,"offset":52789},"end":{"line":1844,"column":19,"offset":52797},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1844,"column":19,"offset":52797},"end":{"line":1844,"column":21,"offset":52799},"indent":[]}},{"type":"text","value":"], key = 0\n","position":{"start":{"line":1844,"column":21,"offset":52799},"end":{"line":1845,"column":1,"offset":52811},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1845,"column":3,"offset":52813},"end":{"line":1845,"column":10,"offset":52820},"indent":[]}}],"position":{"start":{"line":1845,"column":1,"offset":52811},"end":{"line":1845,"column":12,"offset":52822},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1845,"column":12,"offset":52822},"end":{"line":1845,"column":13,"offset":52823},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1845,"column":13,"offset":52823},"end":{"line":1845,"column":15,"offset":52825},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1845,"column":15,"offset":52825},"end":{"line":1845,"column":16,"offset":52826},"indent":[]}}],"position":{"start":{"line":1844,"column":1,"offset":52779},"end":{"line":1845,"column":16,"offset":52826},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1847,"column":3,"offset":52832},"end":{"line":1847,"column":15,"offset":52844},"indent":[]}}],"position":{"start":{"line":1847,"column":1,"offset":52830},"end":{"line":1847,"column":17,"offset":52846},"indent":[]}}],"position":{"start":{"line":1847,"column":1,"offset":52830},"end":{"line":1847,"column":17,"offset":52846},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1849,"column":3,"offset":52852},"end":{"line":1849,"column":51,"offset":52900},"indent":[]}},{"type":"inlineCode","value":"[0, 104]","position":{"start":{"line":1849,"column":51,"offset":52900},"end":{"line":1849,"column":61,"offset":52910},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1849,"column":61,"offset":52910},"end":{"line":1849,"column":62,"offset":52911},"indent":[]}}],"position":{"start":{"line":1849,"column":3,"offset":52852},"end":{"line":1849,"column":62,"offset":52911},"indent":[]}}],"position":{"start":{"line":1849,"column":1,"offset":52850},"end":{"line":1849,"column":62,"offset":52911},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-105 <= Node.val <= 105","position":{"start":{"line":1850,"column":3,"offset":52915},"end":{"line":1850,"column":28,"offset":52940},"indent":[]}}],"position":{"start":{"line":1850,"column":3,"offset":52915},"end":{"line":1850,"column":28,"offset":52940},"indent":[]}}],"position":{"start":{"line":1850,"column":1,"offset":52913},"end":{"line":1850,"column":28,"offset":52940},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each node has a ","position":{"start":{"line":1851,"column":3,"offset":52944},"end":{"line":1851,"column":19,"offset":52960},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"unique","position":{"start":{"line":1851,"column":21,"offset":52962},"end":{"line":1851,"column":27,"offset":52968},"indent":[]}}],"position":{"start":{"line":1851,"column":19,"offset":52960},"end":{"line":1851,"column":29,"offset":52970},"indent":[]}},{"type":"text","value":" value.","position":{"start":{"line":1851,"column":29,"offset":52970},"end":{"line":1851,"column":36,"offset":52977},"indent":[]}}],"position":{"start":{"line":1851,"column":3,"offset":52944},"end":{"line":1851,"column":36,"offset":52977},"indent":[]}}],"position":{"start":{"line":1851,"column":1,"offset":52942},"end":{"line":1851,"column":36,"offset":52977},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"root","position":{"start":{"line":1852,"column":3,"offset":52981},"end":{"line":1852,"column":9,"offset":52987},"indent":[]}},{"type":"text","value":" is a valid binary search tree.","position":{"start":{"line":1852,"column":9,"offset":52987},"end":{"line":1852,"column":40,"offset":53018},"indent":[]}}],"position":{"start":{"line":1852,"column":3,"offset":52981},"end":{"line":1852,"column":40,"offset":53018},"indent":[]}}],"position":{"start":{"line":1852,"column":1,"offset":52979},"end":{"line":1852,"column":40,"offset":53018},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-105 <= key <= 105","position":{"start":{"line":1853,"column":3,"offset":53022},"end":{"line":1853,"column":23,"offset":53042},"indent":[]}}],"position":{"start":{"line":1853,"column":3,"offset":53022},"end":{"line":1853,"column":23,"offset":53042},"indent":[]}}],"position":{"start":{"line":1853,"column":1,"offset":53020},"end":{"line":1853,"column":23,"offset":53042},"indent":[]}}],"position":{"start":{"line":1849,"column":1,"offset":52850},"end":{"line":1853,"column":23,"offset":53042},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/delete-node-in-a-bst/","children":[{"type":"text","value":"Source","position":{"start":{"line":1855,"column":2,"offset":53047},"end":{"line":1855,"column":8,"offset":53053},"indent":[]}}],"position":{"start":{"line":1855,"column":1,"offset":53046},"end":{"line":1855,"column":62,"offset":53107},"indent":[]}},{"type":"image","title":"meeting-room-ii","url":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-0.jpg","alt":"alt text","position":{"start":{"line":1855,"column":62,"offset":53107},"end":{"line":1855,"column":173,"offset":53218},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":1855,"column":173,"offset":53218},"end":{"line":1856,"column":1,"offset":53220},"indent":[1]}},{"type":"image","title":"meeting-room-ii","url":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-1.jpg","alt":"alt text","position":{"start":{"line":1856,"column":1,"offset":53220},"end":{"line":1856,"column":112,"offset":53331},"indent":[]}}],"position":{"start":{"line":1855,"column":1,"offset":53046},"end":{"line":1856,"column":112,"offset":53331},"indent":[1]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[][]} intervals\n * @return {number}\n */\nconst minMeetingRooms = function (intervals) {\n    const len = intervals.length;\n    const starts = new Array(len);\n    const ends = new Array(len);\n    for (let i = 0; i < len; i++) {\n        starts[i] = intervals[i][0];\n        ends[i] = intervals[i][1];\n    }\n    starts.sort((a, b) => a - b);\n    ends.sort((a, b) => a - b);\n    let rooms = 0;\n    let endsIdx = 0;\n    for (let i = 0; i < len; i++) {\n        if (starts[i] < ends[endsIdx]) rooms++;\n        else endsIdx++;\n    }\n    return rooms;\n};","position":{"start":{"line":1858,"column":1,"offset":53335},"end":{"line":1881,"column":4,"offset":53932},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1883,"column":2,"offset":53937},"end":{"line":1883,"column":142,"offset":54077},"indent":[]}}],"position":{"start":{"line":1883,"column":1,"offset":53936},"end":{"line":1883,"column":147,"offset":54082},"indent":[]}}],"position":{"start":{"line":1883,"column":1,"offset":53936},"end":{"line":1883,"column":147,"offset":54082},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1884,"column":1,"offset":54084}}}}