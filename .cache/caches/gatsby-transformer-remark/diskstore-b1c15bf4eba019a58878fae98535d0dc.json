{"expireTime":9007200907895518000,"key":"transformer-remark-markdown-ast-e3212f95c863e8378a2a13d2e5789bf1--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Leetcode","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":11,"offset":11},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":11,"offset":11},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":4,"column":4,"offset":16},"end":{"line":4,"column":32,"offset":44},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":13},"end":{"line":4,"column":32,"offset":44},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Data-Structures-Algos-Codebase","children":[{"type":"text","value":"DS Algo Codebase","position":{"start":{"line":6,"column":2,"offset":47},"end":{"line":6,"column":18,"offset":63},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":46},"end":{"line":6,"column":77,"offset":122},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":46},"end":{"line":6,"column":77,"offset":122},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#115-distinct-subsequenceshttpsleetcodecomproblemsdistinct-subsequencesdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":8,"column":2,"offset":125},"end":{"line":8,"column":142,"offset":265},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":124},"end":{"line":8,"column":227,"offset":350},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":124},"end":{"line":8,"column":227,"offset":350},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":10,"column":4,"offset":355},"end":{"line":10,"column":6,"offset":357},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/distinct-subsequences/description/","children":[{"type":"text","value":"115. Distinct Subsequences","position":{"start":{"line":10,"column":7,"offset":358},"end":{"line":10,"column":33,"offset":384},"indent":[]}}],"position":{"start":{"line":10,"column":6,"offset":357},"end":{"line":10,"column":100,"offset":451},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":352},"end":{"line":10,"column":100,"offset":451},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":12,"column":5,"offset":457},"end":{"line":12,"column":12,"offset":464},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":453},"end":{"line":12,"column":12,"offset":464},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a string ","position":{"start":{"line":14,"column":1,"offset":466},"end":{"line":14,"column":16,"offset":481},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"S","position":{"start":{"line":14,"column":18,"offset":483},"end":{"line":14,"column":19,"offset":484},"indent":[]}}],"position":{"start":{"line":14,"column":16,"offset":481},"end":{"line":14,"column":21,"offset":486},"indent":[]}},{"type":"text","value":" and a string ","position":{"start":{"line":14,"column":21,"offset":486},"end":{"line":14,"column":35,"offset":500},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"T","position":{"start":{"line":14,"column":37,"offset":502},"end":{"line":14,"column":38,"offset":503},"indent":[]}}],"position":{"start":{"line":14,"column":35,"offset":500},"end":{"line":14,"column":40,"offset":505},"indent":[]}},{"type":"text","value":", count the number of distinct subsequences of ","position":{"start":{"line":14,"column":40,"offset":505},"end":{"line":14,"column":87,"offset":552},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"S","position":{"start":{"line":14,"column":89,"offset":554},"end":{"line":14,"column":90,"offset":555},"indent":[]}}],"position":{"start":{"line":14,"column":87,"offset":552},"end":{"line":14,"column":92,"offset":557},"indent":[]}},{"type":"text","value":" which equals ","position":{"start":{"line":14,"column":92,"offset":557},"end":{"line":14,"column":106,"offset":571},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"T","position":{"start":{"line":14,"column":108,"offset":573},"end":{"line":14,"column":109,"offset":574},"indent":[]}}],"position":{"start":{"line":14,"column":106,"offset":571},"end":{"line":14,"column":111,"offset":576},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":14,"column":111,"offset":576},"end":{"line":14,"column":112,"offset":577},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":466},"end":{"line":14,"column":112,"offset":577},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, ","position":{"start":{"line":16,"column":1,"offset":579},"end":{"line":16,"column":209,"offset":787},"indent":[]}},{"type":"inlineCode","value":"\"ACE\"","position":{"start":{"line":16,"column":209,"offset":787},"end":{"line":16,"column":216,"offset":794},"indent":[]}},{"type":"text","value":" is a subsequence of ","position":{"start":{"line":16,"column":216,"offset":794},"end":{"line":16,"column":237,"offset":815},"indent":[]}},{"type":"inlineCode","value":"\"ABCDE\"","position":{"start":{"line":16,"column":237,"offset":815},"end":{"line":16,"column":246,"offset":824},"indent":[]}},{"type":"text","value":" while ","position":{"start":{"line":16,"column":246,"offset":824},"end":{"line":16,"column":253,"offset":831},"indent":[]}},{"type":"inlineCode","value":"\"AEC\"","position":{"start":{"line":16,"column":253,"offset":831},"end":{"line":16,"column":260,"offset":838},"indent":[]}},{"type":"text","value":" is not).","position":{"start":{"line":16,"column":260,"offset":838},"end":{"line":16,"column":269,"offset":847},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":579},"end":{"line":16,"column":269,"offset":847},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":18,"column":3,"offset":851},"end":{"line":18,"column":13,"offset":861},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":849},"end":{"line":18,"column":15,"offset":863},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":849},"end":{"line":18,"column":15,"offset":863},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: S = \"rabbbit\", T = \"rabbit\"\nOutput: 3\nExplanation:\n\nAs shown below, there are 3 ways you can generate \"rabbit\" from S.\n(The caret symbol ^ means the chosen letters)\n\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^","position":{"start":{"line":20,"column":1,"offset":865},"end":{"line":32,"column":12,"offset":1129},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":34,"column":3,"offset":1133},"end":{"line":34,"column":13,"offset":1143},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1131},"end":{"line":34,"column":15,"offset":1145},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1131},"end":{"line":34,"column":15,"offset":1145},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: S = \"babgbag\", T = \"bag\"\nOutput: 5\nExplanation:\n\nAs shown below, there are 5 ways you can generate \"bag\" from S.\n(The caret symbol ^ means the chosen letters)\n\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^","position":{"start":{"line":36,"column":1,"offset":1147},"end":{"line":52,"column":12,"offset":1450},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":54,"column":5,"offset":1456},"end":{"line":54,"column":13,"offset":1464},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1452},"end":{"line":54,"column":13,"offset":1464},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":56,"column":1,"offset":1466},"end":{"line":56,"column":8,"offset":1473},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":56,"column":8,"offset":1473},"end":{"line":56,"column":17,"offset":1482},"indent":[]}},{"type":"text","value":" to be the number of ways that generate ","position":{"start":{"line":56,"column":17,"offset":1482},"end":{"line":56,"column":57,"offset":1522},"indent":[]}},{"type":"inlineCode","value":"T[0...j)","position":{"start":{"line":56,"column":57,"offset":1522},"end":{"line":56,"column":67,"offset":1532},"indent":[]}},{"type":"text","value":" from ","position":{"start":{"line":56,"column":67,"offset":1532},"end":{"line":56,"column":73,"offset":1538},"indent":[]}},{"type":"inlineCode","value":"S[0...i)","position":{"start":{"line":56,"column":73,"offset":1538},"end":{"line":56,"column":83,"offset":1548},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":56,"column":83,"offset":1548},"end":{"line":56,"column":84,"offset":1549},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1466},"end":{"line":56,"column":84,"offset":1549},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For ","position":{"start":{"line":58,"column":1,"offset":1551},"end":{"line":58,"column":5,"offset":1555},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":58,"column":5,"offset":1555},"end":{"line":58,"column":14,"offset":1564},"indent":[]}},{"type":"text","value":" you can always skip ","position":{"start":{"line":58,"column":14,"offset":1564},"end":{"line":58,"column":35,"offset":1585},"indent":[]}},{"type":"inlineCode","value":"S[i-1]","position":{"start":{"line":58,"column":35,"offset":1585},"end":{"line":58,"column":43,"offset":1593},"indent":[]}},{"type":"text","value":", but can only take it when ","position":{"start":{"line":58,"column":43,"offset":1593},"end":{"line":58,"column":71,"offset":1621},"indent":[]}},{"type":"inlineCode","value":"S[i-1] === T[j-1]","position":{"start":{"line":58,"column":71,"offset":1621},"end":{"line":58,"column":90,"offset":1640},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":58,"column":90,"offset":1640},"end":{"line":58,"column":91,"offset":1641},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1551},"end":{"line":58,"column":91,"offset":1641},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"f(0, j) = 0, j > 0 // nothing to delete\nf(i, 0) = 1 // delete all\nf(i, j) = f(i-1, j) + (S[i-1] === T[j-1] ? f(i-1, j-1) : 0)","position":{"start":{"line":60,"column":1,"offset":1643},"end":{"line":64,"column":4,"offset":1778},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":66,"column":1,"offset":1780},"end":{"line":66,"column":27,"offset":1806},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1780},"end":{"line":66,"column":27,"offset":1806},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @param {string} t\n * @return {number}\n */\nlet numDistinct = function (s, t) {\n    const lens = s.length;\n    const lent = t.length;\n    const dp = new Array(lent + 1).fill(0);\n    dp[0] = 1;\n    for (let i = 1; i <= lens; i++) {\n        for (let j = lent; j >= 1; j--) {\n            if (s[i - 1] === t[j - 1]) {\n                dp[j] += dp[j - 1];\n            }\n        }\n    }\n    return dp[lent];\n};","position":{"start":{"line":68,"column":1,"offset":1808},"end":{"line":88,"column":4,"offset":2247},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":90,"column":1,"offset":2249},"end":{"line":90,"column":4,"offset":2252},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":92,"column":1,"offset":2254},"end":{"line":94,"column":9,"offset":2297},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":94,"column":10,"offset":2298},"end":{"line":94,"column":39,"offset":2327},"indent":[]}}],"position":{"start":{"line":94,"column":9,"offset":2297},"end":{"line":94,"column":40,"offset":2328},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":94,"column":40,"offset":2328},"end":{"line":95,"column":23,"offset":2351},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":95,"column":24,"offset":2352},"end":{"line":95,"column":67,"offset":2395},"indent":[]}}],"position":{"start":{"line":95,"column":23,"offset":2351},"end":{"line":95,"column":68,"offset":2396},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node II\": ","position":{"start":{"line":95,"column":68,"offset":2396},"end":{"line":97,"column":51,"offset":2466},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","position":{"start":{"line":97,"column":52,"offset":2467},"end":{"line":97,"column":128,"offset":2543},"indent":[]}}],"position":{"start":{"line":97,"column":51,"offset":2466},"end":{"line":97,"column":129,"offset":2544},"indent":[]}},{"type":"text","value":"\n\"Binary Tree Right Side View\": ","position":{"start":{"line":97,"column":129,"offset":2544},"end":{"line":98,"column":32,"offset":2576},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-right-side-view","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-right-side-view","position":{"start":{"line":98,"column":33,"offset":2577},"end":{"line":98,"column":90,"offset":2634},"indent":[]}}],"position":{"start":{"line":98,"column":32,"offset":2576},"end":{"line":98,"column":91,"offset":2635},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2254},"end":{"line":98,"column":91,"offset":2635},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":100,"column":1,"offset":2637},"end":{"line":100,"column":4,"offset":2640},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#116-populating-next-right-pointers-in-each-nodehttpsleetcodecomproblemspopulating-next-right-pointers-in-each-nodedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":102,"column":2,"offset":2643},"end":{"line":102,"column":142,"offset":2783},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2642},"end":{"line":102,"column":271,"offset":2912},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2642},"end":{"line":102,"column":271,"offset":2912},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":104,"column":4,"offset":2917},"end":{"line":104,"column":6,"offset":2919},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":104,"column":7,"offset":2920},"end":{"line":104,"column":55,"offset":2968},"indent":[]}}],"position":{"start":{"line":104,"column":6,"offset":2919},"end":{"line":104,"column":144,"offset":3057},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2914},"end":{"line":104,"column":144,"offset":3057},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":106,"column":5,"offset":3063},"end":{"line":106,"column":12,"offset":3070},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3059},"end":{"line":106,"column":12,"offset":3070},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":108,"column":1,"offset":3072},"end":{"line":108,"column":20,"offset":3091},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3072},"end":{"line":108,"column":20,"offset":3091},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}","position":{"start":{"line":110,"column":1,"offset":3093},"end":{"line":117,"column":4,"offset":3192},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":119,"column":1,"offset":3194},"end":{"line":119,"column":127,"offset":3320},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":119,"column":127,"offset":3320},"end":{"line":119,"column":133,"offset":3326},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":119,"column":133,"offset":3326},"end":{"line":119,"column":134,"offset":3327},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":3194},"end":{"line":119,"column":134,"offset":3327},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":121,"column":1,"offset":3329},"end":{"line":121,"column":41,"offset":3369},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":121,"column":41,"offset":3369},"end":{"line":121,"column":47,"offset":3375},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":121,"column":47,"offset":3375},"end":{"line":121,"column":48,"offset":3376},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3329},"end":{"line":121,"column":48,"offset":3376},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":123,"column":3,"offset":3380},"end":{"line":123,"column":8,"offset":3385},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3378},"end":{"line":123,"column":10,"offset":3387},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3378},"end":{"line":123,"column":10,"offset":3387},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":125,"column":3,"offset":3391},"end":{"line":125,"column":41,"offset":3429},"indent":[]}}],"position":{"start":{"line":125,"column":3,"offset":3391},"end":{"line":125,"column":41,"offset":3429},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3389},"end":{"line":125,"column":41,"offset":3429},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":126,"column":3,"offset":3432},"end":{"line":126,"column":99,"offset":3528},"indent":[]}}],"position":{"start":{"line":126,"column":3,"offset":3432},"end":{"line":126,"column":99,"offset":3528},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":3430},"end":{"line":126,"column":99,"offset":3528},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).","position":{"start":{"line":127,"column":3,"offset":3531},"end":{"line":127,"column":125,"offset":3653},"indent":[]}}],"position":{"start":{"line":127,"column":3,"offset":3531},"end":{"line":127,"column":125,"offset":3653},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3529},"end":{"line":127,"column":125,"offset":3653},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3389},"end":{"line":127,"column":125,"offset":3653},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":129,"column":3,"offset":3657},"end":{"line":129,"column":11,"offset":3665},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3655},"end":{"line":129,"column":13,"offset":3667},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3655},"end":{"line":129,"column":13,"offset":3667},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the following perfect binary tree,","position":{"start":{"line":131,"column":1,"offset":3669},"end":{"line":131,"column":41,"offset":3709},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3669},"end":{"line":131,"column":41,"offset":3709},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1\n   /  \\\n  2    3\n / \\  / \\\n4  5  6  7","position":{"start":{"line":133,"column":1,"offset":3711},"end":{"line":140,"column":4,"offset":3764},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":142,"column":1,"offset":3766},"end":{"line":142,"column":56,"offset":3821},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":3766},"end":{"line":142,"column":56,"offset":3821},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\  / \\\n4->5->6->7 -> NULL","position":{"start":{"line":144,"column":1,"offset":3823},"end":{"line":151,"column":4,"offset":3900},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":153,"column":5,"offset":3906},"end":{"line":153,"column":13,"offset":3914},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":3902},"end":{"line":153,"column":13,"offset":3914},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":155,"column":6,"offset":3921},"end":{"line":155,"column":9,"offset":3924},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":3916},"end":{"line":155,"column":9,"offset":3924},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursive.","position":{"start":{"line":157,"column":1,"offset":3926},"end":{"line":157,"column":11,"offset":3936},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":3926},"end":{"line":157,"column":11,"offset":3936},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For every ","position":{"start":{"line":159,"column":1,"offset":3938},"end":{"line":159,"column":11,"offset":3948},"indent":[]}},{"type":"inlineCode","value":"node","position":{"start":{"line":159,"column":11,"offset":3948},"end":{"line":159,"column":17,"offset":3954},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":159,"column":17,"offset":3954},"end":{"line":159,"column":18,"offset":3955},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":3938},"end":{"line":159,"column":18,"offset":3955},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Left child: points to ","position":{"start":{"line":161,"column":3,"offset":3959},"end":{"line":161,"column":25,"offset":3981},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":161,"column":25,"offset":3981},"end":{"line":161,"column":37,"offset":3993},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":161,"column":37,"offset":3993},"end":{"line":161,"column":38,"offset":3994},"indent":[]}}],"position":{"start":{"line":161,"column":3,"offset":3959},"end":{"line":161,"column":38,"offset":3994},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":3957},"end":{"line":161,"column":38,"offset":3994},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Right child: points to ","position":{"start":{"line":162,"column":3,"offset":3997},"end":{"line":162,"column":26,"offset":4020},"indent":[]}},{"type":"inlineCode","value":"node.next.left","position":{"start":{"line":162,"column":26,"offset":4020},"end":{"line":162,"column":42,"offset":4036},"indent":[]}},{"type":"text","value":" if ","position":{"start":{"line":162,"column":42,"offset":4036},"end":{"line":162,"column":46,"offset":4040},"indent":[]}},{"type":"inlineCode","value":"node.next","position":{"start":{"line":162,"column":46,"offset":4040},"end":{"line":162,"column":57,"offset":4051},"indent":[]}},{"type":"text","value":" exists.","position":{"start":{"line":162,"column":57,"offset":4051},"end":{"line":162,"column":65,"offset":4059},"indent":[]}}],"position":{"start":{"line":162,"column":3,"offset":3997},"end":{"line":162,"column":65,"offset":4059},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":3995},"end":{"line":162,"column":65,"offset":4059},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":3957},"end":{"line":162,"column":65,"offset":4059},"indent":[1]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right;\n        connect(root.left);\n    }\n    if (root.right !== null) {\n        if (root.next !== null) {\n            root.right.next = root.next.left;\n        }\n        connect(root.right);\n    }\n};","position":{"start":{"line":164,"column":1,"offset":4061},"end":{"line":192,"column":4,"offset":4679},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":194,"column":6,"offset":4686},"end":{"line":194,"column":9,"offset":4689},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":4681},"end":{"line":194,"column":9,"offset":4689},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Level order traversal.","position":{"start":{"line":196,"column":1,"offset":4691},"end":{"line":196,"column":23,"offset":4713},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":4691},"end":{"line":196,"column":23,"offset":4713},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};","position":{"start":{"line":198,"column":1,"offset":4715},"end":{"line":234,"column":4,"offset":5571},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":236,"column":1,"offset":5573},"end":{"line":236,"column":4,"offset":5576},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":238,"column":1,"offset":5578},"end":{"line":240,"column":9,"offset":5621},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":240,"column":10,"offset":5622},"end":{"line":240,"column":39,"offset":5651},"indent":[]}}],"position":{"start":{"line":240,"column":9,"offset":5621},"end":{"line":240,"column":40,"offset":5652},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":240,"column":40,"offset":5652},"end":{"line":241,"column":23,"offset":5675},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":241,"column":24,"offset":5676},"end":{"line":241,"column":67,"offset":5719},"indent":[]}}],"position":{"start":{"line":241,"column":23,"offset":5675},"end":{"line":241,"column":68,"offset":5720},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node\": ","position":{"start":{"line":241,"column":68,"offset":5720},"end":{"line":243,"column":48,"offset":5787},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","position":{"start":{"line":243,"column":49,"offset":5788},"end":{"line":243,"column":122,"offset":5861},"indent":[]}}],"position":{"start":{"line":243,"column":48,"offset":5787},"end":{"line":243,"column":123,"offset":5862},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":5578},"end":{"line":243,"column":123,"offset":5862},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":245,"column":1,"offset":5864},"end":{"line":245,"column":4,"offset":5867},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#117-populating-next-right-pointers-in-each-node-iihttpsleetcodecomproblemspopulating-next-right-pointers-in-each-node-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":247,"column":2,"offset":5870},"end":{"line":247,"column":142,"offset":6010},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":5869},"end":{"line":247,"column":277,"offset":6145},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":5869},"end":{"line":247,"column":277,"offset":6145},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":249,"column":4,"offset":6150},"end":{"line":249,"column":6,"offset":6152},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description/","children":[{"type":"text","value":"117. Populating Next Right Pointers in Each Node II","position":{"start":{"line":249,"column":7,"offset":6153},"end":{"line":249,"column":58,"offset":6204},"indent":[]}}],"position":{"start":{"line":249,"column":6,"offset":6152},"end":{"line":249,"column":150,"offset":6296},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":6147},"end":{"line":249,"column":150,"offset":6296},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":251,"column":5,"offset":6302},"end":{"line":251,"column":12,"offset":6309},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":6298},"end":{"line":251,"column":12,"offset":6309},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":253,"column":1,"offset":6311},"end":{"line":253,"column":20,"offset":6330},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":6311},"end":{"line":253,"column":20,"offset":6330},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}","position":{"start":{"line":255,"column":1,"offset":6332},"end":{"line":262,"column":4,"offset":6431},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":264,"column":1,"offset":6433},"end":{"line":264,"column":127,"offset":6559},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":264,"column":127,"offset":6559},"end":{"line":264,"column":133,"offset":6565},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":264,"column":133,"offset":6565},"end":{"line":264,"column":134,"offset":6566},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":6433},"end":{"line":264,"column":134,"offset":6566},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":266,"column":1,"offset":6568},"end":{"line":266,"column":41,"offset":6608},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":266,"column":41,"offset":6608},"end":{"line":266,"column":47,"offset":6614},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":266,"column":47,"offset":6614},"end":{"line":266,"column":48,"offset":6615},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":6568},"end":{"line":266,"column":48,"offset":6615},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":268,"column":3,"offset":6619},"end":{"line":268,"column":8,"offset":6624},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":6617},"end":{"line":268,"column":10,"offset":6626},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":6617},"end":{"line":268,"column":10,"offset":6626},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":270,"column":3,"offset":6630},"end":{"line":270,"column":41,"offset":6668},"indent":[]}}],"position":{"start":{"line":270,"column":3,"offset":6630},"end":{"line":270,"column":41,"offset":6668},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":6628},"end":{"line":270,"column":41,"offset":6668},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":271,"column":3,"offset":6671},"end":{"line":271,"column":99,"offset":6767},"indent":[]}}],"position":{"start":{"line":271,"column":3,"offset":6671},"end":{"line":271,"column":99,"offset":6767},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":6669},"end":{"line":271,"column":99,"offset":6767},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":6628},"end":{"line":271,"column":99,"offset":6767},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":273,"column":3,"offset":6771},"end":{"line":273,"column":11,"offset":6779},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":6769},"end":{"line":273,"column":13,"offset":6781},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":6769},"end":{"line":273,"column":13,"offset":6781},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the following binary tree,","position":{"start":{"line":275,"column":1,"offset":6783},"end":{"line":275,"column":33,"offset":6815},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":6783},"end":{"line":275,"column":33,"offset":6815},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1\n   /  \\\n  2    3\n / \\    \\\n4   5    7","position":{"start":{"line":277,"column":1,"offset":6817},"end":{"line":284,"column":4,"offset":6870},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":286,"column":1,"offset":6872},"end":{"line":286,"column":56,"offset":6927},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":6872},"end":{"line":286,"column":56,"offset":6927},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\    \\\n4-> 5 -> 7 -> NULL","position":{"start":{"line":288,"column":1,"offset":6929},"end":{"line":295,"column":4,"offset":7006},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":297,"column":5,"offset":7012},"end":{"line":297,"column":13,"offset":7020},"indent":[]}}],"position":{"start":{"line":297,"column":1,"offset":7008},"end":{"line":297,"column":13,"offset":7020},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":299,"column":6,"offset":7027},"end":{"line":299,"column":9,"offset":7030},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":7022},"end":{"line":299,"column":9,"offset":7030},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursive. See ","position":{"start":{"line":301,"column":1,"offset":7032},"end":{"line":301,"column":16,"offset":7047},"indent":[]}},{"type":"link","title":null,"url":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":301,"column":17,"offset":7048},"end":{"line":301,"column":65,"offset":7096},"indent":[]}}],"position":{"start":{"line":301,"column":16,"offset":7047},"end":{"line":301,"column":135,"offset":7166},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":301,"column":135,"offset":7166},"end":{"line":301,"column":136,"offset":7167},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":7032},"end":{"line":301,"column":136,"offset":7167},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The tree may not be perfect now. So keep finding ","position":{"start":{"line":303,"column":1,"offset":7169},"end":{"line":303,"column":50,"offset":7218},"indent":[]}},{"type":"inlineCode","value":"next","position":{"start":{"line":303,"column":50,"offset":7218},"end":{"line":303,"column":56,"offset":7224},"indent":[]}},{"type":"text","value":" until there is a node with children, or ","position":{"start":{"line":303,"column":56,"offset":7224},"end":{"line":303,"column":97,"offset":7265},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":303,"column":97,"offset":7265},"end":{"line":303,"column":103,"offset":7271},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":303,"column":103,"offset":7271},"end":{"line":303,"column":104,"offset":7272},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":7169},"end":{"line":303,"column":104,"offset":7272},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This also means post-order traversal is required.","position":{"start":{"line":305,"column":1,"offset":7274},"end":{"line":305,"column":50,"offset":7323},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":7274},"end":{"line":305,"column":50,"offset":7323},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    let next = null;\n    for (let node = root.next; node !== null; node = node.next) {\n        if (node.left !== null) {\n            next = node.left;\n            break;\n        }\n        if (node.right !== null) {\n            next = node.right;\n            break;\n        }\n    }\n    if (root.right !== null) {\n        root.right.next = next;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right || next;\n    }\n    connect(root.right);\n    connect(root.left);\n};","position":{"start":{"line":307,"column":1,"offset":7325},"end":{"line":344,"column":4,"offset":8166},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":346,"column":6,"offset":8173},"end":{"line":346,"column":9,"offset":8176},"indent":[]}}],"position":{"start":{"line":346,"column":1,"offset":8168},"end":{"line":346,"column":9,"offset":8176},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Level order traversal. Exact same as ","position":{"start":{"line":348,"column":1,"offset":8178},"end":{"line":348,"column":38,"offset":8215},"indent":[]}},{"type":"link","title":null,"url":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":348,"column":39,"offset":8216},"end":{"line":348,"column":87,"offset":8264},"indent":[]}}],"position":{"start":{"line":348,"column":38,"offset":8215},"end":{"line":348,"column":157,"offset":8334},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":348,"column":157,"offset":8334},"end":{"line":348,"column":158,"offset":8335},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":8178},"end":{"line":348,"column":158,"offset":8335},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};","position":{"start":{"line":350,"column":1,"offset":8337},"end":{"line":386,"column":4,"offset":9193},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":388,"column":1,"offset":9195},"end":{"line":388,"column":4,"offset":9198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":390,"column":1,"offset":9200},"end":{"line":392,"column":10,"offset":9242},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":392,"column":11,"offset":9243},"end":{"line":392,"column":41,"offset":9273},"indent":[]}}],"position":{"start":{"line":392,"column":10,"offset":9242},"end":{"line":392,"column":42,"offset":9274},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle II\": ","position":{"start":{"line":392,"column":42,"offset":9274},"end":{"line":394,"column":25,"offset":9318},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle-ii","children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle-ii","position":{"start":{"line":394,"column":26,"offset":9319},"end":{"line":394,"column":75,"offset":9368},"indent":[]}}],"position":{"start":{"line":394,"column":25,"offset":9318},"end":{"line":394,"column":76,"offset":9369},"indent":[]}}],"position":{"start":{"line":390,"column":1,"offset":9200},"end":{"line":394,"column":76,"offset":9369},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":396,"column":1,"offset":9371},"end":{"line":396,"column":4,"offset":9374},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#118-pascals-trianglehttpsleetcodecomproblemspascals-triangledescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":398,"column":2,"offset":9377},"end":{"line":398,"column":142,"offset":9517},"indent":[]}}],"position":{"start":{"line":398,"column":1,"offset":9376},"end":{"line":398,"column":217,"offset":9592},"indent":[]}}],"position":{"start":{"line":398,"column":1,"offset":9376},"end":{"line":398,"column":217,"offset":9592},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":400,"column":4,"offset":9597},"end":{"line":400,"column":6,"offset":9599},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle/description/","children":[{"type":"text","value":"118. Pascal's Triangle","position":{"start":{"line":400,"column":7,"offset":9600},"end":{"line":400,"column":29,"offset":9622},"indent":[]}}],"position":{"start":{"line":400,"column":6,"offset":9599},"end":{"line":400,"column":91,"offset":9684},"indent":[]}}],"position":{"start":{"line":400,"column":1,"offset":9594},"end":{"line":400,"column":91,"offset":9684},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":402,"column":5,"offset":9690},"end":{"line":402,"column":12,"offset":9697},"indent":[]}}],"position":{"start":{"line":402,"column":1,"offset":9686},"end":{"line":402,"column":12,"offset":9697},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a non-negative integer ","position":{"start":{"line":404,"column":1,"offset":9699},"end":{"line":404,"column":30,"offset":9728},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"numRows","position":{"start":{"line":404,"column":31,"offset":9729},"end":{"line":404,"column":38,"offset":9736},"indent":[]}}],"position":{"start":{"line":404,"column":30,"offset":9728},"end":{"line":404,"column":39,"offset":9737},"indent":[]}},{"type":"text","value":", generate the first ","position":{"start":{"line":404,"column":39,"offset":9737},"end":{"line":404,"column":60,"offset":9758},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"numRows","position":{"start":{"line":404,"column":61,"offset":9759},"end":{"line":404,"column":68,"offset":9766},"indent":[]}}],"position":{"start":{"line":404,"column":60,"offset":9758},"end":{"line":404,"column":69,"offset":9767},"indent":[]}},{"type":"text","value":" of Pascal's triangle.","position":{"start":{"line":404,"column":69,"offset":9767},"end":{"line":404,"column":91,"offset":9789},"indent":[]}}],"position":{"start":{"line":404,"column":1,"offset":9699},"end":{"line":404,"column":91,"offset":9789},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif","position":{"start":{"line":406,"column":1,"offset":9791},"end":{"line":406,"column":112,"offset":9902},"indent":[]}}],"position":{"start":{"line":406,"column":1,"offset":9791},"end":{"line":406,"column":112,"offset":9902},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":408,"column":1,"offset":9904},"end":{"line":408,"column":83,"offset":9986},"indent":[]}}],"position":{"start":{"line":408,"column":1,"offset":9904},"end":{"line":408,"column":83,"offset":9986},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":410,"column":3,"offset":9990},"end":{"line":410,"column":11,"offset":9998},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":9988},"end":{"line":410,"column":13,"offset":10000},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":9988},"end":{"line":410,"column":13,"offset":10000},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: 5\nOutput:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]","position":{"start":{"line":412,"column":1,"offset":10002},"end":{"line":423,"column":4,"offset":10090},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":425,"column":5,"offset":10096},"end":{"line":425,"column":13,"offset":10104},"indent":[]}}],"position":{"start":{"line":425,"column":1,"offset":10092},"end":{"line":425,"column":13,"offset":10104},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic Programming 101.","position":{"start":{"line":427,"column":1,"offset":10106},"end":{"line":427,"column":25,"offset":10130},"indent":[]}}],"position":{"start":{"line":427,"column":1,"offset":10106},"end":{"line":427,"column":25,"offset":10130},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number} numRows\n * @return {number[][]}\n */\nlet generate = function (numRows) {\n    if (numRows <= 0) {\n        return [];\n    }\n\n    const result = [[1]];\n    for (let i = 1; i < numRows; i++) {\n        const lastRow = result[i - 1];\n        const row = [1];\n        for (let j = 1; j < i; j++) {\n            row[j] = lastRow[j] + lastRow[j - 1];\n        }\n        row.push(1);\n        result.push(row);\n    }\n\n    return result;\n};","position":{"start":{"line":429,"column":1,"offset":10132},"end":{"line":452,"column":4,"offset":10590},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":454,"column":1,"offset":10592},"end":{"line":454,"column":4,"offset":10595},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":456,"column":1,"offset":10597},"end":{"line":458,"column":10,"offset":10639},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":458,"column":11,"offset":10640},"end":{"line":458,"column":41,"offset":10670},"indent":[]}}],"position":{"start":{"line":458,"column":10,"offset":10639},"end":{"line":458,"column":42,"offset":10671},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle\": ","position":{"start":{"line":458,"column":42,"offset":10671},"end":{"line":460,"column":22,"offset":10712},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle","children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle","position":{"start":{"line":460,"column":23,"offset":10713},"end":{"line":460,"column":69,"offset":10759},"indent":[]}}],"position":{"start":{"line":460,"column":22,"offset":10712},"end":{"line":460,"column":70,"offset":10760},"indent":[]}}],"position":{"start":{"line":456,"column":1,"offset":10597},"end":{"line":460,"column":70,"offset":10760},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":462,"column":1,"offset":10762},"end":{"line":462,"column":4,"offset":10765},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#119-pascals-triangle-iihttpsleetcodecomproblemspascals-triangle-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":464,"column":2,"offset":10768},"end":{"line":464,"column":142,"offset":10908},"indent":[]}}],"position":{"start":{"line":464,"column":1,"offset":10767},"end":{"line":464,"column":223,"offset":10989},"indent":[]}}],"position":{"start":{"line":464,"column":1,"offset":10767},"end":{"line":464,"column":223,"offset":10989},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":466,"column":4,"offset":10994},"end":{"line":466,"column":6,"offset":10996},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle-ii/description/","children":[{"type":"text","value":"119. Pascal's Triangle II","position":{"start":{"line":466,"column":7,"offset":10997},"end":{"line":466,"column":32,"offset":11022},"indent":[]}}],"position":{"start":{"line":466,"column":6,"offset":10996},"end":{"line":466,"column":97,"offset":11087},"indent":[]}}],"position":{"start":{"line":466,"column":1,"offset":10991},"end":{"line":466,"column":97,"offset":11087},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":468,"column":5,"offset":11093},"end":{"line":468,"column":12,"offset":11100},"indent":[]}}],"position":{"start":{"line":468,"column":1,"offset":11089},"end":{"line":468,"column":12,"offset":11100},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a non-negative index ","position":{"start":{"line":470,"column":1,"offset":11102},"end":{"line":470,"column":28,"offset":11129},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":470,"column":29,"offset":11130},"end":{"line":470,"column":30,"offset":11131},"indent":[]}}],"position":{"start":{"line":470,"column":28,"offset":11129},"end":{"line":470,"column":31,"offset":11132},"indent":[]}},{"type":"text","value":" where ","position":{"start":{"line":470,"column":31,"offset":11132},"end":{"line":470,"column":38,"offset":11139},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":470,"column":39,"offset":11140},"end":{"line":470,"column":40,"offset":11141},"indent":[]}}],"position":{"start":{"line":470,"column":38,"offset":11139},"end":{"line":470,"column":41,"offset":11142},"indent":[]}},{"type":"text","value":" â‰¤ 33, return the ","position":{"start":{"line":470,"column":41,"offset":11142},"end":{"line":470,"column":59,"offset":11160},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":470,"column":60,"offset":11161},"end":{"line":470,"column":61,"offset":11162},"indent":[]}}],"position":{"start":{"line":470,"column":59,"offset":11160},"end":{"line":470,"column":62,"offset":11163},"indent":[]}},{"type":"text","value":"th index row of the Pascal's triangle.","position":{"start":{"line":470,"column":62,"offset":11163},"end":{"line":470,"column":100,"offset":11201},"indent":[]}}],"position":{"start":{"line":470,"column":1,"offset":11102},"end":{"line":470,"column":100,"offset":11201},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that the row index starts from 0.","position":{"start":{"line":472,"column":1,"offset":11203},"end":{"line":472,"column":39,"offset":11241},"indent":[]}}],"position":{"start":{"line":472,"column":1,"offset":11203},"end":{"line":472,"column":39,"offset":11241},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif","position":{"start":{"line":474,"column":1,"offset":11243},"end":{"line":474,"column":112,"offset":11354},"indent":[]}}],"position":{"start":{"line":474,"column":1,"offset":11243},"end":{"line":474,"column":112,"offset":11354},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":476,"column":1,"offset":11356},"end":{"line":476,"column":83,"offset":11438},"indent":[]}}],"position":{"start":{"line":476,"column":1,"offset":11356},"end":{"line":476,"column":83,"offset":11438},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":478,"column":3,"offset":11442},"end":{"line":478,"column":11,"offset":11450},"indent":[]}}],"position":{"start":{"line":478,"column":1,"offset":11440},"end":{"line":478,"column":13,"offset":11452},"indent":[]}}],"position":{"start":{"line":478,"column":1,"offset":11440},"end":{"line":478,"column":13,"offset":11452},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: 3\nOutput: [1,3,3,1]","position":{"start":{"line":480,"column":1,"offset":11454},"end":{"line":484,"column":4,"offset":11489},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Follow up:","position":{"start":{"line":486,"column":3,"offset":11493},"end":{"line":486,"column":13,"offset":11503},"indent":[]}}],"position":{"start":{"line":486,"column":1,"offset":11491},"end":{"line":486,"column":15,"offset":11505},"indent":[]}}],"position":{"start":{"line":486,"column":1,"offset":11491},"end":{"line":486,"column":15,"offset":11505},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Could you optimize your algorithm to use only ","position":{"start":{"line":488,"column":1,"offset":11507},"end":{"line":488,"column":47,"offset":11553},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"O","position":{"start":{"line":488,"column":48,"offset":11554},"end":{"line":488,"column":49,"offset":11555},"indent":[]}}],"position":{"start":{"line":488,"column":47,"offset":11553},"end":{"line":488,"column":50,"offset":11556},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":488,"column":50,"offset":11556},"end":{"line":488,"column":51,"offset":11557},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":488,"column":52,"offset":11558},"end":{"line":488,"column":53,"offset":11559},"indent":[]}}],"position":{"start":{"line":488,"column":51,"offset":11557},"end":{"line":488,"column":54,"offset":11560},"indent":[]}},{"type":"text","value":") extra space?","position":{"start":{"line":488,"column":54,"offset":11560},"end":{"line":488,"column":68,"offset":11574},"indent":[]}}],"position":{"start":{"line":488,"column":1,"offset":11507},"end":{"line":488,"column":68,"offset":11574},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":490,"column":5,"offset":11580},"end":{"line":490,"column":13,"offset":11588},"indent":[]}}],"position":{"start":{"line":490,"column":1,"offset":11576},"end":{"line":490,"column":13,"offset":11588},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic Programming 101 with dynamic array.","position":{"start":{"line":492,"column":1,"offset":11590},"end":{"line":492,"column":44,"offset":11633},"indent":[]}}],"position":{"start":{"line":492,"column":1,"offset":11590},"end":{"line":492,"column":44,"offset":11633},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"State ","position":{"start":{"line":494,"column":1,"offset":11635},"end":{"line":494,"column":7,"offset":11641},"indent":[]}},{"type":"inlineCode","value":"(i, j)","position":{"start":{"line":494,"column":7,"offset":11641},"end":{"line":494,"column":15,"offset":11649},"indent":[]}},{"type":"text","value":" depends on ","position":{"start":{"line":494,"column":15,"offset":11649},"end":{"line":494,"column":27,"offset":11661},"indent":[]}},{"type":"inlineCode","value":"(i-1, j)","position":{"start":{"line":494,"column":27,"offset":11661},"end":{"line":494,"column":37,"offset":11671},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":494,"column":37,"offset":11671},"end":{"line":494,"column":42,"offset":11676},"indent":[]}},{"type":"inlineCode","value":"(i-1, j-1)","position":{"start":{"line":494,"column":42,"offset":11676},"end":{"line":494,"column":54,"offset":11688},"indent":[]}},{"type":"text","value":". So to access ","position":{"start":{"line":494,"column":54,"offset":11688},"end":{"line":494,"column":69,"offset":11703},"indent":[]}},{"type":"inlineCode","value":"(i-1, j-1)","position":{"start":{"line":494,"column":69,"offset":11703},"end":{"line":494,"column":81,"offset":11715},"indent":[]}},{"type":"text","value":" iteration must be from right to left.","position":{"start":{"line":494,"column":81,"offset":11715},"end":{"line":494,"column":119,"offset":11753},"indent":[]}}],"position":{"start":{"line":494,"column":1,"offset":11635},"end":{"line":494,"column":119,"offset":11753},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number} rowIndex\n * @return {number[]}\n */\nlet getRow = function (rowIndex) {\n    if (rowIndex < 0) {\n        return [];\n    }\n\n    const row = [1];\n    for (let i = 1; i <= rowIndex; i++) {\n        for (let j = i - 1; j > 0; j--) {\n            row[j] += row[j - 1];\n        }\n        row.push(1);\n    }\n\n    return row;\n};","position":{"start":{"line":496,"column":1,"offset":11755},"end":{"line":516,"column":4,"offset":12103},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":518,"column":1,"offset":12105},"end":{"line":518,"column":4,"offset":12108},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Array\": ","position":{"start":{"line":520,"column":1,"offset":12110},"end":{"line":522,"column":10,"offset":12154},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":522,"column":11,"offset":12155},"end":{"line":522,"column":41,"offset":12185},"indent":[]}}],"position":{"start":{"line":522,"column":10,"offset":12154},"end":{"line":522,"column":42,"offset":12186},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":522,"column":42,"offset":12186},"end":{"line":523,"column":24,"offset":12210},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":523,"column":25,"offset":12211},"end":{"line":523,"column":69,"offset":12255},"indent":[]}}],"position":{"start":{"line":523,"column":24,"offset":12210},"end":{"line":523,"column":70,"offset":12256},"indent":[]}}],"position":{"start":{"line":520,"column":1,"offset":12110},"end":{"line":523,"column":70,"offset":12256},"indent":[1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":525,"column":1,"offset":12258},"end":{"line":525,"column":4,"offset":12261},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#120-trianglehttpsleetcodecomproblemstriangledescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":527,"column":2,"offset":12264},"end":{"line":527,"column":142,"offset":12404},"indent":[]}}],"position":{"start":{"line":527,"column":1,"offset":12263},"end":{"line":527,"column":201,"offset":12463},"indent":[]}}],"position":{"start":{"line":527,"column":1,"offset":12263},"end":{"line":527,"column":201,"offset":12463},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":529,"column":4,"offset":12468},"end":{"line":529,"column":6,"offset":12470},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/triangle/description/","children":[{"type":"text","value":"120. Triangle","position":{"start":{"line":529,"column":7,"offset":12471},"end":{"line":529,"column":20,"offset":12484},"indent":[]}}],"position":{"start":{"line":529,"column":6,"offset":12470},"end":{"line":529,"column":74,"offset":12538},"indent":[]}}],"position":{"start":{"line":529,"column":1,"offset":12465},"end":{"line":529,"column":74,"offset":12538},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":531,"column":5,"offset":12544},"end":{"line":531,"column":12,"offset":12551},"indent":[]}}],"position":{"start":{"line":531,"column":1,"offset":12540},"end":{"line":531,"column":12,"offset":12551},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.","position":{"start":{"line":533,"column":1,"offset":12553},"end":{"line":533,"column":125,"offset":12677},"indent":[]}}],"position":{"start":{"line":533,"column":1,"offset":12553},"end":{"line":533,"column":125,"offset":12677},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, given the following triangle","position":{"start":{"line":535,"column":1,"offset":12679},"end":{"line":535,"column":42,"offset":12720},"indent":[]}}],"position":{"start":{"line":535,"column":1,"offset":12679},"end":{"line":535,"column":42,"offset":12720},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]","position":{"start":{"line":537,"column":1,"offset":12722},"end":{"line":545,"column":4,"offset":12779},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The minimum path sum from top to bottom is ","position":{"start":{"line":547,"column":1,"offset":12781},"end":{"line":547,"column":44,"offset":12824},"indent":[]}},{"type":"inlineCode","value":"11","position":{"start":{"line":547,"column":44,"offset":12824},"end":{"line":547,"column":48,"offset":12828},"indent":[]}},{"type":"text","value":" (i.e., ","position":{"start":{"line":547,"column":48,"offset":12828},"end":{"line":547,"column":56,"offset":12836},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"2","position":{"start":{"line":547,"column":58,"offset":12838},"end":{"line":547,"column":59,"offset":12839},"indent":[]}}],"position":{"start":{"line":547,"column":56,"offset":12836},"end":{"line":547,"column":61,"offset":12841},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":547,"column":61,"offset":12841},"end":{"line":547,"column":64,"offset":12844},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"3","position":{"start":{"line":547,"column":66,"offset":12846},"end":{"line":547,"column":67,"offset":12847},"indent":[]}}],"position":{"start":{"line":547,"column":64,"offset":12844},"end":{"line":547,"column":69,"offset":12849},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":547,"column":69,"offset":12849},"end":{"line":547,"column":72,"offset":12852},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"5","position":{"start":{"line":547,"column":74,"offset":12854},"end":{"line":547,"column":75,"offset":12855},"indent":[]}}],"position":{"start":{"line":547,"column":72,"offset":12852},"end":{"line":547,"column":77,"offset":12857},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":547,"column":77,"offset":12857},"end":{"line":547,"column":80,"offset":12860},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"1","position":{"start":{"line":547,"column":82,"offset":12862},"end":{"line":547,"column":83,"offset":12863},"indent":[]}}],"position":{"start":{"line":547,"column":80,"offset":12860},"end":{"line":547,"column":85,"offset":12865},"indent":[]}},{"type":"text","value":" = 11).","position":{"start":{"line":547,"column":85,"offset":12865},"end":{"line":547,"column":92,"offset":12872},"indent":[]}}],"position":{"start":{"line":547,"column":1,"offset":12781},"end":{"line":547,"column":92,"offset":12872},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":549,"column":3,"offset":12876},"end":{"line":549,"column":8,"offset":12881},"indent":[]}}],"position":{"start":{"line":549,"column":1,"offset":12874},"end":{"line":549,"column":10,"offset":12883},"indent":[]}}],"position":{"start":{"line":549,"column":1,"offset":12874},"end":{"line":549,"column":10,"offset":12883},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Bonus point if you are able to do this using only ","position":{"start":{"line":551,"column":1,"offset":12885},"end":{"line":551,"column":51,"offset":12935},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"O","position":{"start":{"line":551,"column":52,"offset":12936},"end":{"line":551,"column":53,"offset":12937},"indent":[]}}],"position":{"start":{"line":551,"column":51,"offset":12935},"end":{"line":551,"column":54,"offset":12938},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":551,"column":54,"offset":12938},"end":{"line":551,"column":55,"offset":12939},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":551,"column":56,"offset":12940},"end":{"line":551,"column":57,"offset":12941},"indent":[]}}],"position":{"start":{"line":551,"column":55,"offset":12939},"end":{"line":551,"column":58,"offset":12942},"indent":[]}},{"type":"text","value":") extra space, where ","position":{"start":{"line":551,"column":58,"offset":12942},"end":{"line":551,"column":79,"offset":12963},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":551,"column":80,"offset":12964},"end":{"line":551,"column":81,"offset":12965},"indent":[]}}],"position":{"start":{"line":551,"column":79,"offset":12963},"end":{"line":551,"column":82,"offset":12966},"indent":[]}},{"type":"text","value":" is the total number of rows in the triangle.","position":{"start":{"line":551,"column":82,"offset":12966},"end":{"line":551,"column":127,"offset":13011},"indent":[]}}],"position":{"start":{"line":551,"column":1,"offset":12885},"end":{"line":551,"column":127,"offset":13011},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":553,"column":5,"offset":13017},"end":{"line":553,"column":13,"offset":13025},"indent":[]}}],"position":{"start":{"line":553,"column":1,"offset":13013},"end":{"line":553,"column":13,"offset":13025},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":555,"column":1,"offset":13027},"end":{"line":555,"column":8,"offset":13034},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":555,"column":8,"offset":13034},"end":{"line":555,"column":17,"offset":13043},"indent":[]}},{"type":"text","value":" to be the minimum path sum from ","position":{"start":{"line":555,"column":17,"offset":13043},"end":{"line":555,"column":50,"offset":13076},"indent":[]}},{"type":"inlineCode","value":"triangle[0][0]","position":{"start":{"line":555,"column":50,"offset":13076},"end":{"line":555,"column":66,"offset":13092},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":555,"column":66,"offset":13092},"end":{"line":555,"column":70,"offset":13096},"indent":[]}},{"type":"inlineCode","value":"triangle[i][j]","position":{"start":{"line":555,"column":70,"offset":13096},"end":{"line":555,"column":86,"offset":13112},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":555,"column":86,"offset":13112},"end":{"line":555,"column":87,"offset":13113},"indent":[]}}],"position":{"start":{"line":555,"column":1,"offset":13027},"end":{"line":555,"column":87,"offset":13113},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"f(i, 0) = f(i-1, j) + triangle[i][0]\nf(i, j) = min( f(i-1, j-1), f(i-1, j) ) + triangle[i][j], 0 < j < i\nf(i, i) = f(i-1, i-1) + triangle[i][i], i > 0","position":{"start":{"line":557,"column":1,"offset":13115},"end":{"line":559,"column":50,"offset":13277},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":561,"column":1,"offset":13279},"end":{"line":561,"column":27,"offset":13305},"indent":[]}}],"position":{"start":{"line":561,"column":1,"offset":13279},"end":{"line":561,"column":27,"offset":13305},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[][]} triangle\n * @return {number}\n */\nlet minimumTotal = function (triangle) {\n    if (triangle.length <= 0) {\n        return 0;\n    }\n\n    const dp = [triangle[0][0]];\n    for (let i = 1; i < triangle.length; i++) {\n        dp[i] = dp[i - 1] + triangle[i][i];\n        for (let j = i - 1; j >= 1; j--) {\n            dp[j] = Math.min(dp[j], dp[j - 1]) + triangle[i][j];\n        }\n        dp[0] += triangle[i][0];\n    }\n    return Math.min(...dp);\n};","position":{"start":{"line":563,"column":1,"offset":13307},"end":{"line":583,"column":4,"offset":13787},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":585,"column":1,"offset":13789},"end":{"line":585,"column":4,"offset":13792},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":587,"column":1,"offset":13794},"end":{"line":589,"column":10,"offset":13836},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":589,"column":11,"offset":13837},"end":{"line":589,"column":41,"offset":13867},"indent":[]}}],"position":{"start":{"line":589,"column":10,"offset":13836},"end":{"line":589,"column":42,"offset":13868},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":589,"column":42,"offset":13868},"end":{"line":590,"column":24,"offset":13892},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":590,"column":25,"offset":13893},"end":{"line":590,"column":69,"offset":13937},"indent":[]}}],"position":{"start":{"line":590,"column":24,"offset":13892},"end":{"line":590,"column":70,"offset":13938},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Maximum Subarray\": ","position":{"start":{"line":590,"column":70,"offset":13938},"end":{"line":592,"column":21,"offset":13978},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/maximum-subarray","children":[{"type":"text","value":"https://leetcode.com/problems/maximum-subarray","position":{"start":{"line":592,"column":22,"offset":13979},"end":{"line":592,"column":68,"offset":14025},"indent":[]}}],"position":{"start":{"line":592,"column":21,"offset":13978},"end":{"line":592,"column":69,"offset":14026},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":592,"column":69,"offset":14026},"end":{"line":593,"column":39,"offset":14065},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":593,"column":40,"offset":14066},"end":{"line":593,"column":104,"offset":14130},"indent":[]}}],"position":{"start":{"line":593,"column":39,"offset":14065},"end":{"line":593,"column":105,"offset":14131},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":593,"column":105,"offset":14131},"end":{"line":594,"column":40,"offset":14171},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":594,"column":41,"offset":14172},"end":{"line":594,"column":106,"offset":14237},"indent":[]}}],"position":{"start":{"line":594,"column":40,"offset":14171},"end":{"line":594,"column":107,"offset":14238},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":594,"column":107,"offset":14238},"end":{"line":595,"column":39,"offset":14277},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":595,"column":40,"offset":14278},"end":{"line":595,"column":104,"offset":14342},"indent":[]}}],"position":{"start":{"line":595,"column":39,"offset":14277},"end":{"line":595,"column":105,"offset":14343},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":595,"column":105,"offset":14343},"end":{"line":596,"column":50,"offset":14393},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":596,"column":51,"offset":14394},"end":{"line":596,"column":126,"offset":14469},"indent":[]}}],"position":{"start":{"line":596,"column":50,"offset":14393},"end":{"line":596,"column":127,"offset":14470},"indent":[]}}],"position":{"start":{"line":587,"column":1,"offset":13794},"end":{"line":596,"column":127,"offset":14470},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":598,"column":1,"offset":14472},"end":{"line":598,"column":4,"offset":14475},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#121-best-time-to-buy-and-sell-stockhttpsleetcodecomproblemsbest-time-to-buy-and-sell-stockdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":600,"column":2,"offset":14478},"end":{"line":600,"column":142,"offset":14618},"indent":[]}}],"position":{"start":{"line":600,"column":1,"offset":14477},"end":{"line":600,"column":247,"offset":14723},"indent":[]}}],"position":{"start":{"line":600,"column":1,"offset":14477},"end":{"line":600,"column":247,"offset":14723},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":602,"column":4,"offset":14728},"end":{"line":602,"column":6,"offset":14730},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/","children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":602,"column":7,"offset":14731},"end":{"line":602,"column":43,"offset":14767},"indent":[]}}],"position":{"start":{"line":602,"column":6,"offset":14730},"end":{"line":602,"column":120,"offset":14844},"indent":[]}}],"position":{"start":{"line":602,"column":1,"offset":14725},"end":{"line":602,"column":120,"offset":14844},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":604,"column":5,"offset":14850},"end":{"line":604,"column":12,"offset":14857},"indent":[]}}],"position":{"start":{"line":604,"column":1,"offset":14846},"end":{"line":604,"column":12,"offset":14857},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":606,"column":1,"offset":14859},"end":{"line":606,"column":37,"offset":14895},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":606,"column":38,"offset":14896},"end":{"line":606,"column":39,"offset":14897},"indent":[]}}],"position":{"start":{"line":606,"column":37,"offset":14895},"end":{"line":606,"column":40,"offset":14898},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day","position":{"start":{"line":606,"column":40,"offset":14898},"end":{"line":606,"column":87,"offset":14945},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":606,"column":88,"offset":14946},"end":{"line":606,"column":89,"offset":14947},"indent":[]}}],"position":{"start":{"line":606,"column":87,"offset":14945},"end":{"line":606,"column":90,"offset":14948},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":606,"column":90,"offset":14948},"end":{"line":606,"column":91,"offset":14949},"indent":[]}}],"position":{"start":{"line":606,"column":1,"offset":14859},"end":{"line":606,"column":91,"offset":14949},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.","position":{"start":{"line":608,"column":1,"offset":14951},"end":{"line":608,"column":160,"offset":15110},"indent":[]}}],"position":{"start":{"line":608,"column":1,"offset":14951},"end":{"line":608,"column":160,"offset":15110},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that you cannot sell a stock before you buy one.","position":{"start":{"line":610,"column":1,"offset":15112},"end":{"line":610,"column":54,"offset":15165},"indent":[]}}],"position":{"start":{"line":610,"column":1,"offset":15112},"end":{"line":610,"column":54,"offset":15165},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":612,"column":3,"offset":15169},"end":{"line":612,"column":13,"offset":15179},"indent":[]}}],"position":{"start":{"line":612,"column":1,"offset":15167},"end":{"line":612,"column":15,"offset":15181},"indent":[]}}],"position":{"start":{"line":612,"column":1,"offset":15167},"end":{"line":612,"column":15,"offset":15181},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n             Not 7-1 = 6, as selling price needs to be larger than buying price.","position":{"start":{"line":614,"column":1,"offset":15183},"end":{"line":620,"column":4,"offset":15390},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":622,"column":3,"offset":15394},"end":{"line":622,"column":13,"offset":15404},"indent":[]}}],"position":{"start":{"line":622,"column":1,"offset":15392},"end":{"line":622,"column":15,"offset":15406},"indent":[]}}],"position":{"start":{"line":622,"column":1,"offset":15392},"end":{"line":622,"column":15,"offset":15406},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":624,"column":1,"offset":15408},"end":{"line":629,"column":4,"offset":15517},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":631,"column":5,"offset":15523},"end":{"line":631,"column":13,"offset":15531},"indent":[]}}],"position":{"start":{"line":631,"column":1,"offset":15519},"end":{"line":631,"column":13,"offset":15531},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Only care about positive profits. Take the frist item as base and scan to the right. If we encounter an item ","position":{"start":{"line":633,"column":1,"offset":15533},"end":{"line":633,"column":110,"offset":15642},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":633,"column":110,"offset":15642},"end":{"line":633,"column":113,"offset":15645},"indent":[]}},{"type":"text","value":" whose price ","position":{"start":{"line":633,"column":113,"offset":15645},"end":{"line":633,"column":126,"offset":15658},"indent":[]}},{"type":"inlineCode","value":"price[j]","position":{"start":{"line":633,"column":126,"offset":15658},"end":{"line":633,"column":136,"offset":15668},"indent":[]}},{"type":"text","value":" is lower than the base (which means if we sell now the profit would be negative), we sell ","position":{"start":{"line":633,"column":136,"offset":15668},"end":{"line":633,"column":227,"offset":15759},"indent":[]}},{"type":"inlineCode","value":"j-1","position":{"start":{"line":633,"column":227,"offset":15759},"end":{"line":633,"column":232,"offset":15764},"indent":[]}},{"type":"text","value":" instead and make ","position":{"start":{"line":633,"column":232,"offset":15764},"end":{"line":633,"column":250,"offset":15782},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":633,"column":250,"offset":15782},"end":{"line":633,"column":253,"offset":15785},"indent":[]}},{"type":"text","value":" the new base.","position":{"start":{"line":633,"column":253,"offset":15785},"end":{"line":633,"column":267,"offset":15799},"indent":[]}}],"position":{"start":{"line":633,"column":1,"offset":15533},"end":{"line":633,"column":267,"offset":15799},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Because ","position":{"start":{"line":635,"column":1,"offset":15801},"end":{"line":635,"column":9,"offset":15809},"indent":[]}},{"type":"inlineCode","value":"price[j]","position":{"start":{"line":635,"column":9,"offset":15809},"end":{"line":635,"column":19,"offset":15819},"indent":[]}},{"type":"text","value":" is lower that the base, using ","position":{"start":{"line":635,"column":19,"offset":15819},"end":{"line":635,"column":50,"offset":15850},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":635,"column":50,"offset":15850},"end":{"line":635,"column":53,"offset":15853},"indent":[]}},{"type":"text","value":" as new base is guaranteed to gain more profit comparing to the old one.","position":{"start":{"line":635,"column":53,"offset":15853},"end":{"line":635,"column":125,"offset":15925},"indent":[]}}],"position":{"start":{"line":635,"column":1,"offset":15801},"end":{"line":635,"column":125,"offset":15925},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    let base = prices[0];\n    for (let i = 1; i < prices.length; i++) {\n        const profit = prices[i] - base;\n        if (profit > max) {\n            max = profit;\n        } else if (profit < 0) {\n            base = prices[i];\n        }\n    }\n    return max;\n};","position":{"start":{"line":637,"column":1,"offset":15927},"end":{"line":655,"column":4,"offset":16310},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":657,"column":1,"offset":16312},"end":{"line":657,"column":4,"offset":16315},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":659,"column":1,"offset":16317},"end":{"line":661,"column":10,"offset":16359},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":661,"column":11,"offset":16360},"end":{"line":661,"column":41,"offset":16390},"indent":[]}}],"position":{"start":{"line":661,"column":10,"offset":16359},"end":{"line":661,"column":42,"offset":16391},"indent":[]}},{"type":"text","value":"\n\"Greedy\": ","position":{"start":{"line":661,"column":42,"offset":16391},"end":{"line":662,"column":11,"offset":16402},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/greedy","children":[{"type":"text","value":"https://leetcode.com/tag/greedy","position":{"start":{"line":662,"column":12,"offset":16403},"end":{"line":662,"column":43,"offset":16434},"indent":[]}}],"position":{"start":{"line":662,"column":11,"offset":16402},"end":{"line":662,"column":44,"offset":16435},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":662,"column":44,"offset":16435},"end":{"line":664,"column":36,"offset":16490},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":664,"column":37,"offset":16491},"end":{"line":664,"column":98,"offset":16552},"indent":[]}}],"position":{"start":{"line":664,"column":36,"offset":16490},"end":{"line":664,"column":99,"offset":16553},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":664,"column":99,"offset":16553},"end":{"line":665,"column":40,"offset":16593},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":665,"column":41,"offset":16594},"end":{"line":665,"column":106,"offset":16659},"indent":[]}}],"position":{"start":{"line":665,"column":40,"offset":16593},"end":{"line":665,"column":107,"offset":16660},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":665,"column":107,"offset":16660},"end":{"line":666,"column":39,"offset":16699},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":666,"column":40,"offset":16700},"end":{"line":666,"column":104,"offset":16764},"indent":[]}}],"position":{"start":{"line":666,"column":39,"offset":16699},"end":{"line":666,"column":105,"offset":16765},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":666,"column":105,"offset":16765},"end":{"line":667,"column":50,"offset":16815},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":667,"column":51,"offset":16816},"end":{"line":667,"column":126,"offset":16891},"indent":[]}}],"position":{"start":{"line":667,"column":50,"offset":16815},"end":{"line":667,"column":127,"offset":16892},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Transaction Fee\": ","position":{"start":{"line":667,"column":127,"offset":16892},"end":{"line":668,"column":57,"offset":16949},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","position":{"start":{"line":668,"column":58,"offset":16950},"end":{"line":668,"column":140,"offset":17032},"indent":[]}}],"position":{"start":{"line":668,"column":57,"offset":16949},"end":{"line":668,"column":141,"offset":17033},"indent":[]}}],"position":{"start":{"line":659,"column":1,"offset":16317},"end":{"line":668,"column":141,"offset":17033},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":670,"column":1,"offset":17035},"end":{"line":670,"column":4,"offset":17038},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#122-best-time-to-buy-and-sell-stock-iihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":672,"column":2,"offset":17041},"end":{"line":672,"column":142,"offset":17181},"indent":[]}}],"position":{"start":{"line":672,"column":1,"offset":17040},"end":{"line":672,"column":253,"offset":17292},"indent":[]}}],"position":{"start":{"line":672,"column":1,"offset":17040},"end":{"line":672,"column":253,"offset":17292},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":674,"column":4,"offset":17297},"end":{"line":674,"column":6,"offset":17299},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/","children":[{"type":"text","value":"122. Best Time to Buy and Sell Stock II","position":{"start":{"line":674,"column":7,"offset":17300},"end":{"line":674,"column":46,"offset":17339},"indent":[]}}],"position":{"start":{"line":674,"column":6,"offset":17299},"end":{"line":674,"column":126,"offset":17419},"indent":[]}}],"position":{"start":{"line":674,"column":1,"offset":17294},"end":{"line":674,"column":126,"offset":17419},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":676,"column":5,"offset":17425},"end":{"line":676,"column":12,"offset":17432},"indent":[]}}],"position":{"start":{"line":676,"column":1,"offset":17421},"end":{"line":676,"column":12,"offset":17432},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":678,"column":1,"offset":17434},"end":{"line":678,"column":37,"offset":17470},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":678,"column":38,"offset":17471},"end":{"line":678,"column":39,"offset":17472},"indent":[]}}],"position":{"start":{"line":678,"column":37,"offset":17470},"end":{"line":678,"column":40,"offset":17473},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day","position":{"start":{"line":678,"column":40,"offset":17473},"end":{"line":678,"column":87,"offset":17520},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":678,"column":88,"offset":17521},"end":{"line":678,"column":89,"offset":17522},"indent":[]}}],"position":{"start":{"line":678,"column":87,"offset":17520},"end":{"line":678,"column":90,"offset":17523},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":678,"column":90,"offset":17523},"end":{"line":678,"column":91,"offset":17524},"indent":[]}}],"position":{"start":{"line":678,"column":1,"offset":17434},"end":{"line":678,"column":91,"offset":17524},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).","position":{"start":{"line":680,"column":1,"offset":17526},"end":{"line":680,"column":162,"offset":17687},"indent":[]}}],"position":{"start":{"line":680,"column":1,"offset":17526},"end":{"line":680,"column":162,"offset":17687},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":682,"column":3,"offset":17691},"end":{"line":682,"column":8,"offset":17696},"indent":[]}}],"position":{"start":{"line":682,"column":1,"offset":17689},"end":{"line":682,"column":10,"offset":17698},"indent":[]}},{"type":"text","value":" You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":682,"column":10,"offset":17698},"end":{"line":682,"column":125,"offset":17813},"indent":[]}}],"position":{"start":{"line":682,"column":1,"offset":17689},"end":{"line":682,"column":125,"offset":17813},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":684,"column":3,"offset":17817},"end":{"line":684,"column":13,"offset":17827},"indent":[]}}],"position":{"start":{"line":684,"column":1,"offset":17815},"end":{"line":684,"column":15,"offset":17829},"indent":[]}}],"position":{"start":{"line":684,"column":1,"offset":17815},"end":{"line":684,"column":15,"offset":17829},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.","position":{"start":{"line":686,"column":1,"offset":17831},"end":{"line":692,"column":4,"offset":18049},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":694,"column":3,"offset":18053},"end":{"line":694,"column":13,"offset":18063},"indent":[]}}],"position":{"start":{"line":694,"column":1,"offset":18051},"end":{"line":694,"column":15,"offset":18065},"indent":[]}}],"position":{"start":{"line":694,"column":1,"offset":18051},"end":{"line":694,"column":15,"offset":18065},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.","position":{"start":{"line":696,"column":1,"offset":18067},"end":{"line":703,"column":4,"offset":18381},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":705,"column":3,"offset":18385},"end":{"line":705,"column":13,"offset":18395},"indent":[]}}],"position":{"start":{"line":705,"column":1,"offset":18383},"end":{"line":705,"column":15,"offset":18397},"indent":[]}}],"position":{"start":{"line":705,"column":1,"offset":18383},"end":{"line":705,"column":15,"offset":18397},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":707,"column":1,"offset":18399},"end":{"line":709,"column":76,"offset":18511},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":711,"column":5,"offset":18517},"end":{"line":711,"column":13,"offset":18525},"indent":[]}}],"position":{"start":{"line":711,"column":1,"offset":18513},"end":{"line":711,"column":13,"offset":18525},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Sell immediately after the price drops. Or in other perspective, it is the sum of all the incremental pairs (buy in then immediately sell out).","position":{"start":{"line":713,"column":1,"offset":18527},"end":{"line":713,"column":144,"offset":18670},"indent":[]}}],"position":{"start":{"line":713,"column":1,"offset":18527},"end":{"line":713,"column":144,"offset":18670},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    for (let i = 1; i < prices.length; i++) {\n        if (prices[i] > prices[i - 1]) {\n            max += prices[i] - prices[i - 1];\n        }\n    }\n    return max;\n};","position":{"start":{"line":715,"column":1,"offset":18672},"end":{"line":729,"column":4,"offset":18958},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":731,"column":1,"offset":18960},"end":{"line":731,"column":4,"offset":18963},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":733,"column":1,"offset":18965},"end":{"line":735,"column":10,"offset":19007},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":735,"column":11,"offset":19008},"end":{"line":735,"column":41,"offset":19038},"indent":[]}}],"position":{"start":{"line":735,"column":10,"offset":19007},"end":{"line":735,"column":42,"offset":19039},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":735,"column":42,"offset":19039},"end":{"line":736,"column":24,"offset":19063},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":736,"column":25,"offset":19064},"end":{"line":736,"column":69,"offset":19108},"indent":[]}}],"position":{"start":{"line":736,"column":24,"offset":19063},"end":{"line":736,"column":70,"offset":19109},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":736,"column":70,"offset":19109},"end":{"line":738,"column":36,"offset":19164},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":738,"column":37,"offset":19165},"end":{"line":738,"column":98,"offset":19226},"indent":[]}}],"position":{"start":{"line":738,"column":36,"offset":19164},"end":{"line":738,"column":99,"offset":19227},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":738,"column":99,"offset":19227},"end":{"line":739,"column":39,"offset":19266},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":739,"column":40,"offset":19267},"end":{"line":739,"column":104,"offset":19331},"indent":[]}}],"position":{"start":{"line":739,"column":39,"offset":19266},"end":{"line":739,"column":105,"offset":19332},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":739,"column":105,"offset":19332},"end":{"line":740,"column":39,"offset":19371},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":740,"column":40,"offset":19372},"end":{"line":740,"column":104,"offset":19436},"indent":[]}}],"position":{"start":{"line":740,"column":39,"offset":19371},"end":{"line":740,"column":105,"offset":19437},"indent":[]}},{"type":"text","value":"\n\"Maximum Sum of 3 Non-Overlapping Subarrays\": ","position":{"start":{"line":740,"column":105,"offset":19437},"end":{"line":741,"column":47,"offset":19484},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","children":[{"type":"text","value":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","position":{"start":{"line":741,"column":48,"offset":19485},"end":{"line":741,"column":120,"offset":19557},"indent":[]}}],"position":{"start":{"line":741,"column":47,"offset":19484},"end":{"line":741,"column":121,"offset":19558},"indent":[]}}],"position":{"start":{"line":733,"column":1,"offset":18965},"end":{"line":741,"column":121,"offset":19558},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":743,"column":1,"offset":19560},"end":{"line":743,"column":4,"offset":19563},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#123-best-time-to-buy-and-sell-stock-iiihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iiidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":745,"column":2,"offset":19566},"end":{"line":745,"column":142,"offset":19706},"indent":[]}}],"position":{"start":{"line":745,"column":1,"offset":19565},"end":{"line":745,"column":255,"offset":19819},"indent":[]}}],"position":{"start":{"line":745,"column":1,"offset":19565},"end":{"line":745,"column":255,"offset":19819},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":747,"column":4,"offset":19824},"end":{"line":747,"column":6,"offset":19826},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/","children":[{"type":"text","value":"123. Best Time to Buy and Sell Stock III","position":{"start":{"line":747,"column":7,"offset":19827},"end":{"line":747,"column":47,"offset":19867},"indent":[]}}],"position":{"start":{"line":747,"column":6,"offset":19826},"end":{"line":747,"column":128,"offset":19948},"indent":[]}}],"position":{"start":{"line":747,"column":1,"offset":19821},"end":{"line":747,"column":128,"offset":19948},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":749,"column":5,"offset":19954},"end":{"line":749,"column":12,"offset":19961},"indent":[]}}],"position":{"start":{"line":749,"column":1,"offset":19950},"end":{"line":749,"column":12,"offset":19961},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":751,"column":1,"offset":19963},"end":{"line":751,"column":37,"offset":19999},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":751,"column":38,"offset":20000},"end":{"line":751,"column":39,"offset":20001},"indent":[]}}],"position":{"start":{"line":751,"column":37,"offset":19999},"end":{"line":751,"column":40,"offset":20002},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day","position":{"start":{"line":751,"column":40,"offset":20002},"end":{"line":751,"column":87,"offset":20049},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":751,"column":88,"offset":20050},"end":{"line":751,"column":89,"offset":20051},"indent":[]}}],"position":{"start":{"line":751,"column":87,"offset":20049},"end":{"line":751,"column":90,"offset":20052},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":751,"column":90,"offset":20052},"end":{"line":751,"column":91,"offset":20053},"indent":[]}}],"position":{"start":{"line":751,"column":1,"offset":19963},"end":{"line":751,"column":91,"offset":20053},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete at most ","position":{"start":{"line":753,"column":1,"offset":20055},"end":{"line":753,"column":74,"offset":20128},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"two","position":{"start":{"line":753,"column":75,"offset":20129},"end":{"line":753,"column":78,"offset":20132},"indent":[]}}],"position":{"start":{"line":753,"column":74,"offset":20128},"end":{"line":753,"column":79,"offset":20133},"indent":[]}},{"type":"text","value":" transactions.","position":{"start":{"line":753,"column":79,"offset":20133},"end":{"line":753,"column":93,"offset":20147},"indent":[]}}],"position":{"start":{"line":753,"column":1,"offset":20055},"end":{"line":753,"column":93,"offset":20147},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"*","position":{"start":{"line":755,"column":1,"offset":20149},"end":{"line":755,"column":3,"offset":20151},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":755,"column":3,"offset":20151},"end":{"line":755,"column":5,"offset":20153},"indent":[]}},{"type":"text","value":"Note:","position":{"start":{"line":755,"column":5,"offset":20153},"end":{"line":755,"column":10,"offset":20158},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":755,"column":10,"offset":20158},"end":{"line":755,"column":12,"offset":20160},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":755,"column":12,"offset":20160},"end":{"line":755,"column":14,"offset":20162},"indent":[]}},{"type":"text","value":"You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":755,"column":14,"offset":20162},"end":{"line":755,"column":128,"offset":20276},"indent":[]}}],"position":{"start":{"line":755,"column":1,"offset":20149},"end":{"line":755,"column":128,"offset":20276},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":757,"column":3,"offset":20280},"end":{"line":757,"column":13,"offset":20290},"indent":[]}}],"position":{"start":{"line":757,"column":1,"offset":20278},"end":{"line":757,"column":15,"offset":20292},"indent":[]}}],"position":{"start":{"line":757,"column":1,"offset":20278},"end":{"line":757,"column":15,"offset":20292},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n             Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.","position":{"start":{"line":759,"column":1,"offset":20294},"end":{"line":762,"column":96,"offset":20523},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":764,"column":3,"offset":20527},"end":{"line":764,"column":13,"offset":20537},"indent":[]}}],"position":{"start":{"line":764,"column":1,"offset":20525},"end":{"line":764,"column":15,"offset":20539},"indent":[]}}],"position":{"start":{"line":764,"column":1,"offset":20525},"end":{"line":764,"column":15,"offset":20539},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.","position":{"start":{"line":766,"column":1,"offset":20541},"end":{"line":773,"column":4,"offset":20855},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":775,"column":3,"offset":20859},"end":{"line":775,"column":13,"offset":20869},"indent":[]}}],"position":{"start":{"line":775,"column":1,"offset":20857},"end":{"line":775,"column":15,"offset":20871},"indent":[]}}],"position":{"start":{"line":775,"column":1,"offset":20857},"end":{"line":775,"column":15,"offset":20871},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":777,"column":1,"offset":20873},"end":{"line":779,"column":76,"offset":20985},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":781,"column":5,"offset":20991},"end":{"line":781,"column":13,"offset":20999},"indent":[]}}],"position":{"start":{"line":781,"column":1,"offset":20987},"end":{"line":781,"column":13,"offset":20999},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Multiple transactions may not be engaged in at the same time. That means if we view the days that involed in the same transaction as a group, there won't be any intersection. We may complete at most ","position":{"start":{"line":783,"column":1,"offset":21001},"end":{"line":783,"column":200,"offset":21200},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"two","position":{"start":{"line":783,"column":201,"offset":21201},"end":{"line":783,"column":204,"offset":21204},"indent":[]}}],"position":{"start":{"line":783,"column":200,"offset":21200},"end":{"line":783,"column":205,"offset":21205},"indent":[]}},{"type":"text","value":" transactions, so divide the days into two groups, ","position":{"start":{"line":783,"column":205,"offset":21205},"end":{"line":783,"column":256,"offset":21256},"indent":[]}},{"type":"inlineCode","value":"[0...k]","position":{"start":{"line":783,"column":256,"offset":21256},"end":{"line":783,"column":265,"offset":21265},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":783,"column":265,"offset":21265},"end":{"line":783,"column":270,"offset":21270},"indent":[]}},{"type":"inlineCode","value":"[k...n-1]","position":{"start":{"line":783,"column":270,"offset":21270},"end":{"line":783,"column":281,"offset":21281},"indent":[]}},{"type":"text","value":". Notice ","position":{"start":{"line":783,"column":281,"offset":21281},"end":{"line":783,"column":290,"offset":21290},"indent":[]}},{"type":"inlineCode","value":"k","position":{"start":{"line":783,"column":290,"offset":21290},"end":{"line":783,"column":293,"offset":21293},"indent":[]}},{"type":"text","value":" exists in both groups because technically we can sell out then immediately buy in at the same day.","position":{"start":{"line":783,"column":293,"offset":21293},"end":{"line":783,"column":392,"offset":21392},"indent":[]}}],"position":{"start":{"line":783,"column":1,"offset":21001},"end":{"line":783,"column":392,"offset":21392},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":785,"column":1,"offset":21394},"end":{"line":785,"column":8,"offset":21401},"indent":[]}},{"type":"inlineCode","value":"p1(i)","position":{"start":{"line":785,"column":8,"offset":21401},"end":{"line":785,"column":15,"offset":21408},"indent":[]}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":785,"column":15,"offset":21408},"end":{"line":785,"column":44,"offset":21437},"indent":[]}},{"type":"inlineCode","value":"[0...i]","position":{"start":{"line":785,"column":44,"offset":21437},"end":{"line":785,"column":53,"offset":21446},"indent":[]}},{"type":"text","value":". This is just like the problem of ","position":{"start":{"line":785,"column":53,"offset":21446},"end":{"line":785,"column":88,"offset":21481},"indent":[]}},{"type":"link","title":null,"url":"./121.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock.md","children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":785,"column":89,"offset":21482},"end":{"line":785,"column":125,"offset":21518},"indent":[]}}],"position":{"start":{"line":785,"column":88,"offset":21481},"end":{"line":785,"column":183,"offset":21576},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":785,"column":183,"offset":21576},"end":{"line":785,"column":184,"offset":21577},"indent":[]}}],"position":{"start":{"line":785,"column":1,"offset":21394},"end":{"line":785,"column":184,"offset":21577},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"p1(0) = 0\np1(i) = max( p1(i-1), prices[i] - min(prices[0], ..., prices[i-1]) ), 0 < i <= n-1","position":{"start":{"line":787,"column":1,"offset":21579},"end":{"line":788,"column":87,"offset":21679},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":790,"column":1,"offset":21681},"end":{"line":790,"column":8,"offset":21688},"indent":[]}},{"type":"inlineCode","value":"p2(i)","position":{"start":{"line":790,"column":8,"offset":21688},"end":{"line":790,"column":15,"offset":21695},"indent":[]}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":790,"column":15,"offset":21695},"end":{"line":790,"column":44,"offset":21724},"indent":[]}},{"type":"inlineCode","value":"[i...n-1]","position":{"start":{"line":790,"column":44,"offset":21724},"end":{"line":790,"column":55,"offset":21735},"indent":[]}},{"type":"text","value":". This is the mirror of ","position":{"start":{"line":790,"column":55,"offset":21735},"end":{"line":790,"column":79,"offset":21759},"indent":[]}},{"type":"inlineCode","value":"p1","position":{"start":{"line":790,"column":79,"offset":21759},"end":{"line":790,"column":83,"offset":21763},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":790,"column":83,"offset":21763},"end":{"line":790,"column":84,"offset":21764},"indent":[]}}],"position":{"start":{"line":790,"column":1,"offset":21681},"end":{"line":790,"column":84,"offset":21764},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"p2(n-1) = 0\np2(i) = max( p2(i+1), max(prices[i], ..., prices[n-1]) - prices[i] ), n-1 > i >= 0","position":{"start":{"line":792,"column":1,"offset":21766},"end":{"line":793,"column":87,"offset":21868},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":795,"column":1,"offset":21870},"end":{"line":795,"column":8,"offset":21877},"indent":[]}},{"type":"inlineCode","value":"f(k)","position":{"start":{"line":795,"column":8,"offset":21877},"end":{"line":795,"column":14,"offset":21883},"indent":[]}},{"type":"text","value":" to be ","position":{"start":{"line":795,"column":14,"offset":21883},"end":{"line":795,"column":21,"offset":21890},"indent":[]}},{"type":"inlineCode","value":"p1(k) + p2(k)","position":{"start":{"line":795,"column":21,"offset":21890},"end":{"line":795,"column":36,"offset":21905},"indent":[]}},{"type":"text","value":". We need to get ","position":{"start":{"line":795,"column":36,"offset":21905},"end":{"line":795,"column":53,"offset":21922},"indent":[]}},{"type":"inlineCode","value":"max( f(0), ..., f(n-1) )","position":{"start":{"line":795,"column":53,"offset":21922},"end":{"line":795,"column":79,"offset":21948},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":795,"column":79,"offset":21948},"end":{"line":795,"column":80,"offset":21949},"indent":[]}}],"position":{"start":{"line":795,"column":1,"offset":21870},"end":{"line":795,"column":80,"offset":21949},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    const len = prices.length;\n    if (len <= 1) {\n        return 0;\n    }\n\n    const dp = [0];\n\n    let min = prices[0];\n    for (let i = 1; i < len; i++) {\n        dp[i] = Math.max(dp[i - 1], prices[i] - min);\n        min = Math.min(prices[i], min);\n    }\n\n    let p2 = 0;\n    let max = prices[len - 1];\n    for (let i = len - 2; i >= 0; i--) {\n        max = Math.max(prices[i], max);\n        p2 = Math.max(p2, max - prices[i]);\n        dp[i] += p2;\n    }\n\n    return Math.max(...dp);\n};","position":{"start":{"line":797,"column":1,"offset":21951},"end":{"line":826,"column":4,"offset":22542},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":828,"column":1,"offset":22544},"end":{"line":828,"column":4,"offset":22547},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":830,"column":1,"offset":22549},"end":{"line":832,"column":9,"offset":22590},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":832,"column":10,"offset":22591},"end":{"line":832,"column":39,"offset":22620},"indent":[]}}],"position":{"start":{"line":832,"column":9,"offset":22590},"end":{"line":832,"column":40,"offset":22621},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":832,"column":40,"offset":22621},"end":{"line":833,"column":23,"offset":22644},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":833,"column":24,"offset":22645},"end":{"line":833,"column":67,"offset":22688},"indent":[]}}],"position":{"start":{"line":833,"column":23,"offset":22644},"end":{"line":833,"column":68,"offset":22689},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":833,"column":68,"offset":22689},"end":{"line":835,"column":13,"offset":22721},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":835,"column":14,"offset":22722},"end":{"line":835,"column":52,"offset":22760},"indent":[]}}],"position":{"start":{"line":835,"column":13,"offset":22721},"end":{"line":835,"column":53,"offset":22761},"indent":[]}},{"type":"text","value":"\n\"Sum Root to Leaf Numbers\": ","position":{"start":{"line":835,"column":53,"offset":22761},"end":{"line":836,"column":29,"offset":22790},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/sum-root-to-leaf-numbers","children":[{"type":"text","value":"https://leetcode.com/problems/sum-root-to-leaf-numbers","position":{"start":{"line":836,"column":30,"offset":22791},"end":{"line":836,"column":84,"offset":22845},"indent":[]}}],"position":{"start":{"line":836,"column":29,"offset":22790},"end":{"line":836,"column":85,"offset":22846},"indent":[]}},{"type":"text","value":"\n\"Path Sum IV\": ","position":{"start":{"line":836,"column":85,"offset":22846},"end":{"line":837,"column":16,"offset":22862},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum-iv","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum-iv","position":{"start":{"line":837,"column":17,"offset":22863},"end":{"line":837,"column":58,"offset":22904},"indent":[]}}],"position":{"start":{"line":837,"column":16,"offset":22862},"end":{"line":837,"column":59,"offset":22905},"indent":[]}},{"type":"text","value":"\n\"Longest Univalue Path\": ","position":{"start":{"line":837,"column":59,"offset":22905},"end":{"line":838,"column":26,"offset":22931},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/longest-univalue-path","children":[{"type":"text","value":"https://leetcode.com/problems/longest-univalue-path","position":{"start":{"line":838,"column":27,"offset":22932},"end":{"line":838,"column":78,"offset":22983},"indent":[]}}],"position":{"start":{"line":838,"column":26,"offset":22931},"end":{"line":838,"column":79,"offset":22984},"indent":[]}}],"position":{"start":{"line":830,"column":1,"offset":22549},"end":{"line":838,"column":79,"offset":22984},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":840,"column":1,"offset":22986},"end":{"line":840,"column":4,"offset":22989},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#124-binary-tree-maximum-path-sumhttpsleetcodecomproblemsbinary-tree-maximum-path-sumdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":842,"column":2,"offset":22992},"end":{"line":842,"column":142,"offset":23132},"indent":[]}}],"position":{"start":{"line":842,"column":1,"offset":22991},"end":{"line":842,"column":241,"offset":23231},"indent":[]}}],"position":{"start":{"line":842,"column":1,"offset":22991},"end":{"line":842,"column":241,"offset":23231},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":844,"column":4,"offset":23236},"end":{"line":844,"column":6,"offset":23238},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-maximum-path-sum/description/","children":[{"type":"text","value":"124. Binary Tree Maximum Path Sum","position":{"start":{"line":844,"column":7,"offset":23239},"end":{"line":844,"column":40,"offset":23272},"indent":[]}}],"position":{"start":{"line":844,"column":6,"offset":23238},"end":{"line":844,"column":114,"offset":23346},"indent":[]}}],"position":{"start":{"line":844,"column":1,"offset":23233},"end":{"line":844,"column":114,"offset":23346},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":846,"column":5,"offset":23352},"end":{"line":846,"column":12,"offset":23359},"indent":[]}}],"position":{"start":{"line":846,"column":1,"offset":23348},"end":{"line":846,"column":12,"offset":23359},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a ","position":{"start":{"line":848,"column":1,"offset":23361},"end":{"line":848,"column":9,"offset":23369},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"non-empty","position":{"start":{"line":848,"column":11,"offset":23371},"end":{"line":848,"column":20,"offset":23380},"indent":[]}}],"position":{"start":{"line":848,"column":9,"offset":23369},"end":{"line":848,"column":22,"offset":23382},"indent":[]}},{"type":"text","value":" binary tree, find the maximum path sum.","position":{"start":{"line":848,"column":22,"offset":23382},"end":{"line":848,"column":62,"offset":23422},"indent":[]}}],"position":{"start":{"line":848,"column":1,"offset":23361},"end":{"line":848,"column":62,"offset":23422},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain ","position":{"start":{"line":850,"column":1,"offset":23424},"end":{"line":850,"column":168,"offset":23591},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"at least one node","position":{"start":{"line":850,"column":170,"offset":23593},"end":{"line":850,"column":187,"offset":23610},"indent":[]}}],"position":{"start":{"line":850,"column":168,"offset":23591},"end":{"line":850,"column":189,"offset":23612},"indent":[]}},{"type":"text","value":" and does not need to go through the root.","position":{"start":{"line":850,"column":189,"offset":23612},"end":{"line":850,"column":231,"offset":23654},"indent":[]}}],"position":{"start":{"line":850,"column":1,"offset":23424},"end":{"line":850,"column":231,"offset":23654},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":852,"column":3,"offset":23658},"end":{"line":852,"column":13,"offset":23668},"indent":[]}}],"position":{"start":{"line":852,"column":1,"offset":23656},"end":{"line":852,"column":15,"offset":23670},"indent":[]}}],"position":{"start":{"line":852,"column":1,"offset":23656},"end":{"line":852,"column":15,"offset":23670},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3]\n\n       1\n      / \\\n     2   3\n\nOutput: 6","position":{"start":{"line":854,"column":1,"offset":23672},"end":{"line":863,"column":4,"offset":23737},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":865,"column":3,"offset":23741},"end":{"line":865,"column":13,"offset":23751},"indent":[]}}],"position":{"start":{"line":865,"column":1,"offset":23739},"end":{"line":865,"column":15,"offset":23753},"indent":[]}}],"position":{"start":{"line":865,"column":1,"offset":23739},"end":{"line":865,"column":15,"offset":23753},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [-10,9,20,null,null,15,7]\n\n   -10\n   / \\\n  9  20\n    /  \\\n   15   7\n\nOutput: 42","position":{"start":{"line":867,"column":1,"offset":23755},"end":{"line":878,"column":4,"offset":23850},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":880,"column":5,"offset":23856},"end":{"line":880,"column":13,"offset":23864},"indent":[]}}],"position":{"start":{"line":880,"column":1,"offset":23852},"end":{"line":880,"column":13,"offset":23864},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For every ","position":{"start":{"line":882,"column":1,"offset":23866},"end":{"line":882,"column":11,"offset":23876},"indent":[]}},{"type":"inlineCode","value":"node","position":{"start":{"line":882,"column":11,"offset":23876},"end":{"line":882,"column":17,"offset":23882},"indent":[]}},{"type":"text","value":", there are six possible ways to get the max path sum:","position":{"start":{"line":882,"column":17,"offset":23882},"end":{"line":882,"column":71,"offset":23936},"indent":[]}}],"position":{"start":{"line":882,"column":1,"offset":23866},"end":{"line":882,"column":71,"offset":23936},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"With ","position":{"start":{"line":884,"column":3,"offset":23940},"end":{"line":884,"column":8,"offset":23945},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":884,"column":8,"offset":23945},"end":{"line":884,"column":18,"offset":23955},"indent":[]}}],"position":{"start":{"line":884,"column":3,"offset":23940},"end":{"line":884,"column":18,"offset":23955},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":885,"column":9,"offset":23964},"end":{"line":885,"column":19,"offset":23974},"indent":[]}},{"type":"text","value":" plus the max sum of a path that ends with ","position":{"start":{"line":885,"column":19,"offset":23974},"end":{"line":885,"column":62,"offset":24017},"indent":[]}},{"type":"inlineCode","value":"node.left","position":{"start":{"line":885,"column":62,"offset":24017},"end":{"line":885,"column":73,"offset":24028},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":885,"column":73,"offset":24028},"end":{"line":885,"column":74,"offset":24029},"indent":[]}}],"position":{"start":{"line":885,"column":9,"offset":23964},"end":{"line":885,"column":74,"offset":24029},"indent":[]}}],"position":{"start":{"line":885,"column":5,"offset":23960},"end":{"line":885,"column":74,"offset":24029},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":886,"column":9,"offset":24038},"end":{"line":886,"column":19,"offset":24048},"indent":[]}},{"type":"text","value":" plus the max sum of a path that starts with ","position":{"start":{"line":886,"column":19,"offset":24048},"end":{"line":886,"column":64,"offset":24093},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":886,"column":64,"offset":24093},"end":{"line":886,"column":76,"offset":24105},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":886,"column":76,"offset":24105},"end":{"line":886,"column":77,"offset":24106},"indent":[]}}],"position":{"start":{"line":886,"column":9,"offset":24038},"end":{"line":886,"column":77,"offset":24106},"indent":[]}}],"position":{"start":{"line":886,"column":5,"offset":24034},"end":{"line":886,"column":77,"offset":24106},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":887,"column":9,"offset":24115},"end":{"line":887,"column":19,"offset":24125},"indent":[]}},{"type":"text","value":" plus the max sum of both paths.","position":{"start":{"line":887,"column":19,"offset":24125},"end":{"line":887,"column":51,"offset":24157},"indent":[]}}],"position":{"start":{"line":887,"column":9,"offset":24115},"end":{"line":887,"column":51,"offset":24157},"indent":[]}}],"position":{"start":{"line":887,"column":5,"offset":24111},"end":{"line":887,"column":51,"offset":24157},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Just ","position":{"start":{"line":888,"column":9,"offset":24166},"end":{"line":888,"column":14,"offset":24171},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":888,"column":14,"offset":24171},"end":{"line":888,"column":24,"offset":24181},"indent":[]}},{"type":"text","value":" (the max sum of both paths are negative).","position":{"start":{"line":888,"column":24,"offset":24181},"end":{"line":888,"column":66,"offset":24223},"indent":[]}}],"position":{"start":{"line":888,"column":9,"offset":24166},"end":{"line":888,"column":66,"offset":24223},"indent":[]}}],"position":{"start":{"line":888,"column":5,"offset":24162},"end":{"line":888,"column":66,"offset":24223},"indent":[]}}],"position":{"start":{"line":885,"column":5,"offset":23960},"end":{"line":888,"column":66,"offset":24223},"indent":[5,5,5]}}],"position":{"start":{"line":884,"column":1,"offset":23938},"end":{"line":888,"column":66,"offset":24223},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Without","position":{"start":{"line":889,"column":3,"offset":24226},"end":{"line":889,"column":10,"offset":24233},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":889,"column":10,"offset":24233},"end":{"line":889,"column":20,"offset":24243},"indent":[]}},{"type":"text","value":" (disconnected)","position":{"start":{"line":889,"column":20,"offset":24243},"end":{"line":889,"column":35,"offset":24258},"indent":[]}}],"position":{"start":{"line":889,"column":3,"offset":24226},"end":{"line":889,"column":35,"offset":24258},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":890,"column":9,"offset":24267},"end":{"line":890,"column":49,"offset":24307},"indent":[]}},{"type":"inlineCode","value":"node.left","position":{"start":{"line":890,"column":49,"offset":24307},"end":{"line":890,"column":60,"offset":24318},"indent":[]}},{"type":"text","value":" subtree.","position":{"start":{"line":890,"column":60,"offset":24318},"end":{"line":890,"column":69,"offset":24327},"indent":[]}}],"position":{"start":{"line":890,"column":9,"offset":24267},"end":{"line":890,"column":69,"offset":24327},"indent":[]}}],"position":{"start":{"line":890,"column":5,"offset":24263},"end":{"line":890,"column":69,"offset":24327},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":891,"column":9,"offset":24336},"end":{"line":891,"column":49,"offset":24376},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":891,"column":49,"offset":24376},"end":{"line":891,"column":61,"offset":24388},"indent":[]}},{"type":"text","value":" subtree.","position":{"start":{"line":891,"column":61,"offset":24388},"end":{"line":891,"column":70,"offset":24397},"indent":[]}}],"position":{"start":{"line":891,"column":9,"offset":24336},"end":{"line":891,"column":70,"offset":24397},"indent":[]}}],"position":{"start":{"line":891,"column":5,"offset":24332},"end":{"line":891,"column":70,"offset":24397},"indent":[]}}],"position":{"start":{"line":890,"column":5,"offset":24263},"end":{"line":891,"column":70,"offset":24397},"indent":[5]}}],"position":{"start":{"line":889,"column":1,"offset":24224},"end":{"line":891,"column":70,"offset":24397},"indent":[1,1]}}],"position":{"start":{"line":884,"column":1,"offset":23938},"end":{"line":891,"column":70,"offset":24397},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are two ways to implement this.","position":{"start":{"line":893,"column":1,"offset":24399},"end":{"line":893,"column":38,"offset":24436},"indent":[]}}],"position":{"start":{"line":893,"column":1,"offset":24399},"end":{"line":893,"column":38,"offset":24436},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":895,"column":6,"offset":24443},"end":{"line":895,"column":9,"offset":24446},"indent":[]}}],"position":{"start":{"line":895,"column":1,"offset":24438},"end":{"line":895,"column":9,"offset":24446},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define a function that returns two values. The max sum of a path that may or may not end with ","position":{"start":{"line":897,"column":1,"offset":24448},"end":{"line":897,"column":95,"offset":24542},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":897,"column":95,"offset":24542},"end":{"line":897,"column":101,"offset":24548},"indent":[]}},{"type":"text","value":" node, and the max sum of the path that ends with ","position":{"start":{"line":897,"column":101,"offset":24548},"end":{"line":897,"column":151,"offset":24598},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":897,"column":151,"offset":24598},"end":{"line":897,"column":157,"offset":24604},"indent":[]}},{"type":"text","value":" node.","position":{"start":{"line":897,"column":157,"offset":24604},"end":{"line":897,"column":163,"offset":24610},"indent":[]}}],"position":{"start":{"line":897,"column":1,"offset":24448},"end":{"line":897,"column":163,"offset":24610},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    return Math.max(..._maxPathSum(root));\n};\n\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nfunction _maxPathSum(root) {\n    if (!root) {\n        return [-Infinity, -Infinity];\n    }\n\n    const left = _maxPathSum(root.left);\n    const right = _maxPathSum(root.right);\n    return [Math.max(left[0], right[0], root.val + Math.max(0, left[1], right[1], left[1] + right[1])), Math.max(left[1], right[1], 0) + root.val];\n}","position":{"start":{"line":899,"column":1,"offset":24612},"end":{"line":928,"column":4,"offset":25279},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":930,"column":6,"offset":25286},"end":{"line":930,"column":9,"offset":25289},"indent":[]}}],"position":{"start":{"line":930,"column":1,"offset":25281},"end":{"line":930,"column":9,"offset":25289},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just return the later (max sum of a path that ends with ","position":{"start":{"line":932,"column":1,"offset":25291},"end":{"line":932,"column":57,"offset":25347},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":932,"column":57,"offset":25347},"end":{"line":932,"column":63,"offset":25353},"indent":[]}},{"type":"text","value":"). Maintain a global variable to store the disconnected max sum.","position":{"start":{"line":932,"column":63,"offset":25353},"end":{"line":932,"column":127,"offset":25417},"indent":[]}}],"position":{"start":{"line":932,"column":1,"offset":25291},"end":{"line":932,"column":127,"offset":25417},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    const global = { max: -Infinity };\n    _maxPathSum(root, global);\n    return global.max;\n};\n\n/**\n * @param {TreeNode} root\n * @param {object} global\n * @param {number} global.max\n * @return {number[]}\n */\nfunction _maxPathSum(root, global) {\n    if (!root) {\n        return -Infinity;\n    }\n\n    const left = _maxPathSum(root.left, global);\n    const right = _maxPathSum(root.right, global);\n    const localMax = Math.max(left, right, 0) + root.val;\n    global.max = Math.max(global.max, localMax, root.val + left + right);\n    return localMax;\n}","position":{"start":{"line":934,"column":1,"offset":25419},"end":{"line":969,"column":4,"offset":26208},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":971,"column":1,"offset":26210},"end":{"line":971,"column":4,"offset":26213},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Two Pointers\": ","position":{"start":{"line":973,"column":1,"offset":26215},"end":{"line":975,"column":17,"offset":26264},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/two-pointers","children":[{"type":"text","value":"https://leetcode.com/tag/two-pointers","position":{"start":{"line":975,"column":18,"offset":26265},"end":{"line":975,"column":55,"offset":26302},"indent":[]}}],"position":{"start":{"line":975,"column":17,"offset":26264},"end":{"line":975,"column":56,"offset":26303},"indent":[]}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":975,"column":56,"offset":26303},"end":{"line":976,"column":11,"offset":26314},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/string","children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":976,"column":12,"offset":26315},"end":{"line":976,"column":43,"offset":26346},"indent":[]}}],"position":{"start":{"line":976,"column":11,"offset":26314},"end":{"line":976,"column":44,"offset":26347},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Palindrome Linked List\": ","position":{"start":{"line":976,"column":44,"offset":26347},"end":{"line":978,"column":27,"offset":26393},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/palindrome-linked-list","children":[{"type":"text","value":"https://leetcode.com/problems/palindrome-linked-list","position":{"start":{"line":978,"column":28,"offset":26394},"end":{"line":978,"column":80,"offset":26446},"indent":[]}}],"position":{"start":{"line":978,"column":27,"offset":26393},"end":{"line":978,"column":81,"offset":26447},"indent":[]}},{"type":"text","value":"\n\"Valid Palindrome II\": ","position":{"start":{"line":978,"column":81,"offset":26447},"end":{"line":979,"column":24,"offset":26471},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/valid-palindrome-ii","children":[{"type":"text","value":"https://leetcode.com/problems/valid-palindrome-ii","position":{"start":{"line":979,"column":25,"offset":26472},"end":{"line":979,"column":74,"offset":26521},"indent":[]}}],"position":{"start":{"line":979,"column":24,"offset":26471},"end":{"line":979,"column":75,"offset":26522},"indent":[]}}],"position":{"start":{"line":973,"column":1,"offset":26215},"end":{"line":979,"column":75,"offset":26522},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":981,"column":1,"offset":26524},"end":{"line":981,"column":4,"offset":26527},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#125-valid-palindromehttpsleetcodecomproblemsvalid-palindromedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":983,"column":2,"offset":26530},"end":{"line":983,"column":142,"offset":26670},"indent":[]}}],"position":{"start":{"line":983,"column":1,"offset":26529},"end":{"line":983,"column":217,"offset":26745},"indent":[]}}],"position":{"start":{"line":983,"column":1,"offset":26529},"end":{"line":983,"column":217,"offset":26745},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":985,"column":4,"offset":26750},"end":{"line":985,"column":6,"offset":26752},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/valid-palindrome/description/","children":[{"type":"text","value":"125. Valid Palindrome","position":{"start":{"line":985,"column":7,"offset":26753},"end":{"line":985,"column":28,"offset":26774},"indent":[]}}],"position":{"start":{"line":985,"column":6,"offset":26752},"end":{"line":985,"column":90,"offset":26836},"indent":[]}}],"position":{"start":{"line":985,"column":1,"offset":26747},"end":{"line":985,"column":90,"offset":26836},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":987,"column":5,"offset":26842},"end":{"line":987,"column":12,"offset":26849},"indent":[]}}],"position":{"start":{"line":987,"column":1,"offset":26838},"end":{"line":987,"column":12,"offset":26849},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.","position":{"start":{"line":989,"column":1,"offset":26851},"end":{"line":989,"column":110,"offset":26960},"indent":[]}}],"position":{"start":{"line":989,"column":1,"offset":26851},"end":{"line":989,"column":110,"offset":26960},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":991,"column":3,"offset":26964},"end":{"line":991,"column":8,"offset":26969},"indent":[]}}],"position":{"start":{"line":991,"column":1,"offset":26962},"end":{"line":991,"column":10,"offset":26971},"indent":[]}},{"type":"text","value":" For the purpose of this problem, we define empty string as valid palindrome.","position":{"start":{"line":991,"column":10,"offset":26971},"end":{"line":991,"column":87,"offset":27048},"indent":[]}}],"position":{"start":{"line":991,"column":1,"offset":26962},"end":{"line":991,"column":87,"offset":27048},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":993,"column":3,"offset":27052},"end":{"line":993,"column":13,"offset":27062},"indent":[]}}],"position":{"start":{"line":993,"column":1,"offset":27050},"end":{"line":993,"column":15,"offset":27064},"indent":[]}}],"position":{"start":{"line":993,"column":1,"offset":27050},"end":{"line":993,"column":15,"offset":27064},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: \"A man, a plan, a canal: Panama\"\nOutput: true","position":{"start":{"line":995,"column":1,"offset":27066},"end":{"line":999,"column":4,"offset":27127},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1001,"column":3,"offset":27131},"end":{"line":1001,"column":13,"offset":27141},"indent":[]}}],"position":{"start":{"line":1001,"column":1,"offset":27129},"end":{"line":1001,"column":15,"offset":27143},"indent":[]}}],"position":{"start":{"line":1001,"column":1,"offset":27129},"end":{"line":1001,"column":15,"offset":27143},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: \"race a car\"\nOutput: false","position":{"start":{"line":1003,"column":1,"offset":27145},"end":{"line":1007,"column":4,"offset":27187},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1009,"column":5,"offset":27193},"end":{"line":1009,"column":13,"offset":27201},"indent":[]}}],"position":{"start":{"line":1009,"column":1,"offset":27189},"end":{"line":1009,"column":13,"offset":27201},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":1011,"column":6,"offset":27208},"end":{"line":1011,"column":9,"offset":27211},"indent":[]}}],"position":{"start":{"line":1011,"column":1,"offset":27203},"end":{"line":1011,"column":9,"offset":27211},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.toLowerCase().split(/[^a-z0-9]*/);\n    return clean.join('') === clean.reverse().join('');\n};","position":{"start":{"line":1013,"column":1,"offset":27213},"end":{"line":1022,"column":4,"offset":27420},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":1024,"column":6,"offset":27427},"end":{"line":1024,"column":9,"offset":27430},"indent":[]}}],"position":{"start":{"line":1024,"column":1,"offset":27422},"end":{"line":1024,"column":9,"offset":27430},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Remove non-alphanumeric characters then compare.","position":{"start":{"line":1026,"column":1,"offset":27432},"end":{"line":1026,"column":49,"offset":27480},"indent":[]}}],"position":{"start":{"line":1026,"column":1,"offset":27432},"end":{"line":1026,"column":49,"offset":27480},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    for (let i = 0, j = clean.length - 1; i < j; i++, j--) {\n        if (clean[i] !== clean[j]) {\n            return false;\n        }\n    }\n    return true;\n};","position":{"start":{"line":1028,"column":1,"offset":27482},"end":{"line":1042,"column":4,"offset":27799},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"THREE","position":{"start":{"line":1044,"column":6,"offset":27806},"end":{"line":1044,"column":11,"offset":27811},"indent":[]}}],"position":{"start":{"line":1044,"column":1,"offset":27801},"end":{"line":1044,"column":11,"offset":27811},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compare the char codes.","position":{"start":{"line":1046,"column":1,"offset":27813},"end":{"line":1046,"column":24,"offset":27836},"indent":[]}}],"position":{"start":{"line":1046,"column":1,"offset":27813},"end":{"line":1046,"column":24,"offset":27836},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    for (let i = 0, j = s.length - 1; i < j; i++, j--) {\n        let left = s.charCodeAt(i);\n        while (i < j && (left < 48 || (left > 57 && left < 65) || (left > 90 && left < 97) || left > 122)) {\n            left = s.charCodeAt(++i);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (left >= 65 && left <= 90) {\n            left += 32;\n        }\n\n        let right = s.charCodeAt(j);\n        while (i < j && (right < 48 || (right > 57 && right < 65) || (right > 90 && right < 97) || right > 122)) {\n            right = s.charCodeAt(--j);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (right >= 65 && right <= 90) {\n            right += 32;\n        }\n\n        if (left !== right) {\n            return false;\n        }\n    }\n\n    return true;\n};","position":{"start":{"line":1048,"column":1,"offset":27838},"end":{"line":1084,"column":4,"offset":28742},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1086,"column":1,"offset":28744},"end":{"line":1086,"column":4,"offset":28747},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1088,"column":1,"offset":28749},"end":{"line":1090,"column":10,"offset":28791},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1090,"column":11,"offset":28792},"end":{"line":1090,"column":41,"offset":28822},"indent":[]}}],"position":{"start":{"line":1090,"column":10,"offset":28791},"end":{"line":1090,"column":42,"offset":28823},"indent":[]}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":1090,"column":42,"offset":28823},"end":{"line":1091,"column":11,"offset":28834},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/string","children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":1091,"column":12,"offset":28835},"end":{"line":1091,"column":43,"offset":28866},"indent":[]}}],"position":{"start":{"line":1091,"column":11,"offset":28834},"end":{"line":1091,"column":44,"offset":28867},"indent":[]}},{"type":"text","value":"\n\"Backtracking\": ","position":{"start":{"line":1091,"column":44,"offset":28867},"end":{"line":1092,"column":17,"offset":28884},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/backtracking","children":[{"type":"text","value":"https://leetcode.com/tag/backtracking","position":{"start":{"line":1092,"column":18,"offset":28885},"end":{"line":1092,"column":55,"offset":28922},"indent":[]}}],"position":{"start":{"line":1092,"column":17,"offset":28884},"end":{"line":1092,"column":56,"offset":28923},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1092,"column":56,"offset":28923},"end":{"line":1093,"column":25,"offset":28948},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1093,"column":26,"offset":28949},"end":{"line":1093,"column":71,"offset":28994},"indent":[]}}],"position":{"start":{"line":1093,"column":25,"offset":28948},"end":{"line":1093,"column":72,"offset":28995},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder\": ","position":{"start":{"line":1093,"column":72,"offset":28995},"end":{"line":1095,"column":16,"offset":29030},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder","children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder","position":{"start":{"line":1095,"column":17,"offset":29031},"end":{"line":1095,"column":58,"offset":29072},"indent":[]}}],"position":{"start":{"line":1095,"column":16,"offset":29030},"end":{"line":1095,"column":59,"offset":29073},"indent":[]}}],"position":{"start":{"line":1088,"column":1,"offset":28749},"end":{"line":1095,"column":59,"offset":29073},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1097,"column":1,"offset":29075},"end":{"line":1097,"column":4,"offset":29078},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#126-word-ladder-iihttpsleetcodecomproblemsword-ladder-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1099,"column":2,"offset":29081},"end":{"line":1099,"column":142,"offset":29221},"indent":[]}}],"position":{"start":{"line":1099,"column":1,"offset":29080},"end":{"line":1099,"column":213,"offset":29292},"indent":[]}}],"position":{"start":{"line":1099,"column":1,"offset":29080},"end":{"line":1099,"column":213,"offset":29292},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1101,"column":4,"offset":29297},"end":{"line":1101,"column":6,"offset":29299},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder-ii/description/","children":[{"type":"text","value":"126. Word Ladder II","position":{"start":{"line":1101,"column":7,"offset":29300},"end":{"line":1101,"column":26,"offset":29319},"indent":[]}}],"position":{"start":{"line":1101,"column":6,"offset":29299},"end":{"line":1101,"column":86,"offset":29379},"indent":[]}}],"position":{"start":{"line":1101,"column":1,"offset":29294},"end":{"line":1101,"column":86,"offset":29379},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1103,"column":5,"offset":29385},"end":{"line":1103,"column":12,"offset":29392},"indent":[]}}],"position":{"start":{"line":1103,"column":1,"offset":29381},"end":{"line":1103,"column":12,"offset":29392},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1105,"column":1,"offset":29394},"end":{"line":1105,"column":18,"offset":29411},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1105,"column":19,"offset":29412},"end":{"line":1105,"column":28,"offset":29421},"indent":[]}}],"position":{"start":{"line":1105,"column":18,"offset":29411},"end":{"line":1105,"column":29,"offset":29422},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1105,"column":29,"offset":29422},"end":{"line":1105,"column":34,"offset":29427},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1105,"column":35,"offset":29428},"end":{"line":1105,"column":42,"offset":29435},"indent":[]}}],"position":{"start":{"line":1105,"column":34,"offset":29427},"end":{"line":1105,"column":43,"offset":29436},"indent":[]}},{"type":"text","value":"), and a dictionary's word list, find all shortest transformation sequence(s) from ","position":{"start":{"line":1105,"column":43,"offset":29436},"end":{"line":1105,"column":126,"offset":29519},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1105,"column":127,"offset":29520},"end":{"line":1105,"column":136,"offset":29529},"indent":[]}}],"position":{"start":{"line":1105,"column":126,"offset":29519},"end":{"line":1105,"column":137,"offset":29530},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1105,"column":137,"offset":29530},"end":{"line":1105,"column":141,"offset":29534},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1105,"column":142,"offset":29535},"end":{"line":1105,"column":149,"offset":29542},"indent":[]}}],"position":{"start":{"line":1105,"column":141,"offset":29534},"end":{"line":1105,"column":150,"offset":29543},"indent":[]}},{"type":"text","value":", such that:","position":{"start":{"line":1105,"column":150,"offset":29543},"end":{"line":1105,"column":162,"offset":29555},"indent":[]}}],"position":{"start":{"line":1105,"column":1,"offset":29394},"end":{"line":1105,"column":162,"offset":29555},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only one letter can be changed at a time","position":{"start":{"line":1107,"column":5,"offset":29561},"end":{"line":1107,"column":45,"offset":29601},"indent":[]}}],"position":{"start":{"line":1107,"column":5,"offset":29561},"end":{"line":1107,"column":45,"offset":29601},"indent":[]}}],"position":{"start":{"line":1107,"column":1,"offset":29557},"end":{"line":1107,"column":45,"offset":29601},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1108,"column":5,"offset":29606},"end":{"line":1108,"column":66,"offset":29667},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1108,"column":67,"offset":29668},"end":{"line":1108,"column":76,"offset":29677},"indent":[]}}],"position":{"start":{"line":1108,"column":66,"offset":29667},"end":{"line":1108,"column":77,"offset":29678},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":1108,"column":77,"offset":29678},"end":{"line":1108,"column":81,"offset":29682},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":1108,"column":82,"offset":29683},"end":{"line":1108,"column":85,"offset":29686},"indent":[]}}],"position":{"start":{"line":1108,"column":81,"offset":29682},"end":{"line":1108,"column":86,"offset":29687},"indent":[]}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1108,"column":86,"offset":29687},"end":{"line":1108,"column":106,"offset":29707},"indent":[]}}],"position":{"start":{"line":1108,"column":5,"offset":29606},"end":{"line":1108,"column":106,"offset":29707},"indent":[]}}],"position":{"start":{"line":1108,"column":1,"offset":29602},"end":{"line":1108,"column":106,"offset":29707},"indent":[]}}],"position":{"start":{"line":1107,"column":1,"offset":29557},"end":{"line":1108,"column":106,"offset":29707},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1110,"column":3,"offset":29711},"end":{"line":1110,"column":8,"offset":29716},"indent":[]}}],"position":{"start":{"line":1110,"column":1,"offset":29709},"end":{"line":1110,"column":10,"offset":29718},"indent":[]}}],"position":{"start":{"line":1110,"column":1,"offset":29709},"end":{"line":1110,"column":10,"offset":29718},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Return an empty list if there is no such transformation sequence.","position":{"start":{"line":1112,"column":3,"offset":29722},"end":{"line":1112,"column":68,"offset":29787},"indent":[]}}],"position":{"start":{"line":1112,"column":3,"offset":29722},"end":{"line":1112,"column":68,"offset":29787},"indent":[]}}],"position":{"start":{"line":1112,"column":1,"offset":29720},"end":{"line":1112,"column":68,"offset":29787},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1113,"column":3,"offset":29790},"end":{"line":1113,"column":34,"offset":29821},"indent":[]}}],"position":{"start":{"line":1113,"column":3,"offset":29790},"end":{"line":1113,"column":34,"offset":29821},"indent":[]}}],"position":{"start":{"line":1113,"column":1,"offset":29788},"end":{"line":1113,"column":34,"offset":29821},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1114,"column":3,"offset":29824},"end":{"line":1114,"column":58,"offset":29879},"indent":[]}}],"position":{"start":{"line":1114,"column":3,"offset":29824},"end":{"line":1114,"column":58,"offset":29879},"indent":[]}}],"position":{"start":{"line":1114,"column":1,"offset":29822},"end":{"line":1114,"column":58,"offset":29879},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1115,"column":3,"offset":29882},"end":{"line":1115,"column":49,"offset":29928},"indent":[]}}],"position":{"start":{"line":1115,"column":3,"offset":29882},"end":{"line":1115,"column":49,"offset":29928},"indent":[]}}],"position":{"start":{"line":1115,"column":1,"offset":29880},"end":{"line":1115,"column":49,"offset":29928},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1116,"column":3,"offset":29931},"end":{"line":1116,"column":18,"offset":29946},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1116,"column":19,"offset":29947},"end":{"line":1116,"column":28,"offset":29956},"indent":[]}}],"position":{"start":{"line":1116,"column":18,"offset":29946},"end":{"line":1116,"column":29,"offset":29957},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1116,"column":29,"offset":29957},"end":{"line":1116,"column":34,"offset":29962},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1116,"column":35,"offset":29963},"end":{"line":1116,"column":42,"offset":29970},"indent":[]}}],"position":{"start":{"line":1116,"column":34,"offset":29962},"end":{"line":1116,"column":43,"offset":29971},"indent":[]}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1116,"column":43,"offset":29971},"end":{"line":1116,"column":79,"offset":30007},"indent":[]}}],"position":{"start":{"line":1116,"column":3,"offset":29931},"end":{"line":1116,"column":79,"offset":30007},"indent":[]}}],"position":{"start":{"line":1116,"column":1,"offset":29929},"end":{"line":1116,"column":79,"offset":30007},"indent":[]}}],"position":{"start":{"line":1112,"column":1,"offset":29720},"end":{"line":1116,"column":79,"offset":30007},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1118,"column":3,"offset":30011},"end":{"line":1118,"column":13,"offset":30021},"indent":[]}}],"position":{"start":{"line":1118,"column":1,"offset":30009},"end":{"line":1118,"column":15,"offset":30023},"indent":[]}}],"position":{"start":{"line":1118,"column":1,"offset":30009},"end":{"line":1118,"column":15,"offset":30023},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput:\n[\n  [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\n  [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\n]","position":{"start":{"line":1120,"column":1,"offset":30025},"end":{"line":1132,"column":4,"offset":30207},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1134,"column":3,"offset":30211},"end":{"line":1134,"column":13,"offset":30221},"indent":[]}}],"position":{"start":{"line":1134,"column":1,"offset":30209},"end":{"line":1134,"column":15,"offset":30223},"indent":[]}}],"position":{"start":{"line":1134,"column":1,"offset":30209},"end":{"line":1134,"column":15,"offset":30223},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: []\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.","position":{"start":{"line":1136,"column":1,"offset":30225},"end":{"line":1146,"column":4,"offset":30419},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1148,"column":5,"offset":30425},"end":{"line":1148,"column":13,"offset":30433},"indent":[]}}],"position":{"start":{"line":1148,"column":1,"offset":30421},"end":{"line":1148,"column":13,"offset":30433},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is just like ","position":{"start":{"line":1150,"column":1,"offset":30435},"end":{"line":1150,"column":19,"offset":30453},"indent":[]}},{"type":"link","title":null,"url":"./127.%20Word%20Ladder","children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1150,"column":20,"offset":30454},"end":{"line":1150,"column":36,"offset":30470},"indent":[]}}],"position":{"start":{"line":1150,"column":19,"offset":30453},"end":{"line":1150,"column":61,"offset":30495},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1150,"column":61,"offset":30495},"end":{"line":1150,"column":62,"offset":30496},"indent":[]}}],"position":{"start":{"line":1150,"column":1,"offset":30435},"end":{"line":1150,"column":62,"offset":30496},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The constrain still works, but instead of deleting the words right away, collect them and delete them all when a level ends, so that we can reuse the words (matching different parents in the same level).","position":{"start":{"line":1152,"column":1,"offset":30498},"end":{"line":1152,"column":204,"offset":30701},"indent":[]}}],"position":{"start":{"line":1152,"column":1,"offset":30498},"end":{"line":1152,"column":204,"offset":30701},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The items in the queue are not just words now. Parent nodes are also kept so that we can backtrack the path from the end.","position":{"start":{"line":1154,"column":1,"offset":30703},"end":{"line":1154,"column":122,"offset":30824},"indent":[]}}],"position":{"start":{"line":1154,"column":1,"offset":30703},"end":{"line":1154,"column":122,"offset":30824},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {string[][]}\n */\nfunction findLadders(beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return [];\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    const result = [];\n    let isEndWordFound = false;\n    const levelWords = new Set();\n    const queue = [[beginWord, null], null];\n    while (queue.length > 1) {\n        const node = queue.shift();\n\n        if (node === null) {\n            if (isEndWordFound) {\n                break;\n            }\n            levelWords.forEach((word) => wordList.delete(word));\n            levelWords.clear();\n            queue.push(null);\n            continue;\n        }\n\n        const word = node[0];\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const w = head + ALPHABET[c] + tail;\n                    if (w === endWord) {\n                        const path = [endWord];\n                        for (let n = node; n !== null; n = n[1]) {\n                            path.unshift(n[0]);\n                        }\n                        result.push(path);\n                        isEndWordFound = true;\n                    }\n                    if (wordList.has(w)) {\n                        levelWords.add(w);\n                        queue.push([w, node]);\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}","position":{"start":{"line":1156,"column":1,"offset":30826},"end":{"line":1216,"column":4,"offset":32500},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1218,"column":1,"offset":32502},"end":{"line":1218,"column":4,"offset":32505},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Breadth-first Search\": ","position":{"start":{"line":1220,"column":1,"offset":32507},"end":{"line":1222,"column":25,"offset":32566},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1222,"column":26,"offset":32567},"end":{"line":1222,"column":71,"offset":32612},"indent":[]}}],"position":{"start":{"line":1222,"column":25,"offset":32566},"end":{"line":1222,"column":72,"offset":32613},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder II\": ","position":{"start":{"line":1222,"column":72,"offset":32613},"end":{"line":1224,"column":19,"offset":32651},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder-ii","children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder-ii","position":{"start":{"line":1224,"column":20,"offset":32652},"end":{"line":1224,"column":64,"offset":32696},"indent":[]}}],"position":{"start":{"line":1224,"column":19,"offset":32651},"end":{"line":1224,"column":65,"offset":32697},"indent":[]}},{"type":"text","value":"\n\"Minimum Genetic Mutation\": ","position":{"start":{"line":1224,"column":65,"offset":32697},"end":{"line":1225,"column":29,"offset":32726},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/minimum-genetic-mutation","children":[{"type":"text","value":"https://leetcode.com/problems/minimum-genetic-mutation","position":{"start":{"line":1225,"column":30,"offset":32727},"end":{"line":1225,"column":84,"offset":32781},"indent":[]}}],"position":{"start":{"line":1225,"column":29,"offset":32726},"end":{"line":1225,"column":85,"offset":32782},"indent":[]}}],"position":{"start":{"line":1220,"column":1,"offset":32507},"end":{"line":1225,"column":85,"offset":32782},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1227,"column":1,"offset":32784},"end":{"line":1227,"column":4,"offset":32787},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#127-word-ladderhttpsleetcodecomproblemsword-ladderdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1229,"column":2,"offset":32790},"end":{"line":1229,"column":142,"offset":32930},"indent":[]}}],"position":{"start":{"line":1229,"column":1,"offset":32789},"end":{"line":1229,"column":207,"offset":32995},"indent":[]}}],"position":{"start":{"line":1229,"column":1,"offset":32789},"end":{"line":1229,"column":207,"offset":32995},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1231,"column":4,"offset":33000},"end":{"line":1231,"column":6,"offset":33002},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder/description/","children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1231,"column":7,"offset":33003},"end":{"line":1231,"column":23,"offset":33019},"indent":[]}}],"position":{"start":{"line":1231,"column":6,"offset":33002},"end":{"line":1231,"column":80,"offset":33076},"indent":[]}}],"position":{"start":{"line":1231,"column":1,"offset":32997},"end":{"line":1231,"column":80,"offset":33076},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1233,"column":5,"offset":33082},"end":{"line":1233,"column":12,"offset":33089},"indent":[]}}],"position":{"start":{"line":1233,"column":1,"offset":33078},"end":{"line":1233,"column":12,"offset":33089},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1235,"column":1,"offset":33091},"end":{"line":1235,"column":18,"offset":33108},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1235,"column":19,"offset":33109},"end":{"line":1235,"column":28,"offset":33118},"indent":[]}}],"position":{"start":{"line":1235,"column":18,"offset":33108},"end":{"line":1235,"column":29,"offset":33119},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1235,"column":29,"offset":33119},"end":{"line":1235,"column":34,"offset":33124},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1235,"column":35,"offset":33125},"end":{"line":1235,"column":42,"offset":33132},"indent":[]}}],"position":{"start":{"line":1235,"column":34,"offset":33124},"end":{"line":1235,"column":43,"offset":33133},"indent":[]}},{"type":"text","value":"), and a dictionary's word list, find the length of shortest transformation sequence from ","position":{"start":{"line":1235,"column":43,"offset":33133},"end":{"line":1235,"column":133,"offset":33223},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1235,"column":134,"offset":33224},"end":{"line":1235,"column":143,"offset":33233},"indent":[]}}],"position":{"start":{"line":1235,"column":133,"offset":33223},"end":{"line":1235,"column":144,"offset":33234},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1235,"column":144,"offset":33234},"end":{"line":1235,"column":148,"offset":33238},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1235,"column":149,"offset":33239},"end":{"line":1235,"column":156,"offset":33246},"indent":[]}}],"position":{"start":{"line":1235,"column":148,"offset":33238},"end":{"line":1235,"column":157,"offset":33247},"indent":[]}},{"type":"text","value":", such that:","position":{"start":{"line":1235,"column":157,"offset":33247},"end":{"line":1235,"column":169,"offset":33259},"indent":[]}}],"position":{"start":{"line":1235,"column":1,"offset":33091},"end":{"line":1235,"column":169,"offset":33259},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only one letter can be changed at a time.","position":{"start":{"line":1237,"column":5,"offset":33265},"end":{"line":1237,"column":46,"offset":33306},"indent":[]}}],"position":{"start":{"line":1237,"column":5,"offset":33265},"end":{"line":1237,"column":46,"offset":33306},"indent":[]}}],"position":{"start":{"line":1237,"column":1,"offset":33261},"end":{"line":1237,"column":46,"offset":33306},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1238,"column":5,"offset":33311},"end":{"line":1238,"column":66,"offset":33372},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1238,"column":67,"offset":33373},"end":{"line":1238,"column":76,"offset":33382},"indent":[]}}],"position":{"start":{"line":1238,"column":66,"offset":33372},"end":{"line":1238,"column":77,"offset":33383},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":1238,"column":77,"offset":33383},"end":{"line":1238,"column":81,"offset":33387},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":1238,"column":82,"offset":33388},"end":{"line":1238,"column":85,"offset":33391},"indent":[]}}],"position":{"start":{"line":1238,"column":81,"offset":33387},"end":{"line":1238,"column":86,"offset":33392},"indent":[]}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1238,"column":86,"offset":33392},"end":{"line":1238,"column":106,"offset":33412},"indent":[]}}],"position":{"start":{"line":1238,"column":5,"offset":33311},"end":{"line":1238,"column":106,"offset":33412},"indent":[]}}],"position":{"start":{"line":1238,"column":1,"offset":33307},"end":{"line":1238,"column":106,"offset":33412},"indent":[]}}],"position":{"start":{"line":1237,"column":1,"offset":33261},"end":{"line":1238,"column":106,"offset":33412},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1240,"column":3,"offset":33416},"end":{"line":1240,"column":8,"offset":33421},"indent":[]}}],"position":{"start":{"line":1240,"column":1,"offset":33414},"end":{"line":1240,"column":10,"offset":33423},"indent":[]}}],"position":{"start":{"line":1240,"column":1,"offset":33414},"end":{"line":1240,"column":10,"offset":33423},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Return 0 if there is no such transformation sequence.","position":{"start":{"line":1242,"column":3,"offset":33427},"end":{"line":1242,"column":56,"offset":33480},"indent":[]}}],"position":{"start":{"line":1242,"column":3,"offset":33427},"end":{"line":1242,"column":56,"offset":33480},"indent":[]}}],"position":{"start":{"line":1242,"column":1,"offset":33425},"end":{"line":1242,"column":56,"offset":33480},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1243,"column":3,"offset":33483},"end":{"line":1243,"column":34,"offset":33514},"indent":[]}}],"position":{"start":{"line":1243,"column":3,"offset":33483},"end":{"line":1243,"column":34,"offset":33514},"indent":[]}}],"position":{"start":{"line":1243,"column":1,"offset":33481},"end":{"line":1243,"column":34,"offset":33514},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1244,"column":3,"offset":33517},"end":{"line":1244,"column":58,"offset":33572},"indent":[]}}],"position":{"start":{"line":1244,"column":3,"offset":33517},"end":{"line":1244,"column":58,"offset":33572},"indent":[]}}],"position":{"start":{"line":1244,"column":1,"offset":33515},"end":{"line":1244,"column":58,"offset":33572},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1245,"column":3,"offset":33575},"end":{"line":1245,"column":49,"offset":33621},"indent":[]}}],"position":{"start":{"line":1245,"column":3,"offset":33575},"end":{"line":1245,"column":49,"offset":33621},"indent":[]}}],"position":{"start":{"line":1245,"column":1,"offset":33573},"end":{"line":1245,"column":49,"offset":33621},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1246,"column":3,"offset":33624},"end":{"line":1246,"column":18,"offset":33639},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1246,"column":19,"offset":33640},"end":{"line":1246,"column":28,"offset":33649},"indent":[]}}],"position":{"start":{"line":1246,"column":18,"offset":33639},"end":{"line":1246,"column":29,"offset":33650},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1246,"column":29,"offset":33650},"end":{"line":1246,"column":34,"offset":33655},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1246,"column":35,"offset":33656},"end":{"line":1246,"column":42,"offset":33663},"indent":[]}}],"position":{"start":{"line":1246,"column":34,"offset":33655},"end":{"line":1246,"column":43,"offset":33664},"indent":[]}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1246,"column":43,"offset":33664},"end":{"line":1246,"column":79,"offset":33700},"indent":[]}}],"position":{"start":{"line":1246,"column":3,"offset":33624},"end":{"line":1246,"column":79,"offset":33700},"indent":[]}}],"position":{"start":{"line":1246,"column":1,"offset":33622},"end":{"line":1246,"column":79,"offset":33700},"indent":[]}}],"position":{"start":{"line":1242,"column":1,"offset":33425},"end":{"line":1246,"column":79,"offset":33700},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1248,"column":3,"offset":33704},"end":{"line":1248,"column":13,"offset":33714},"indent":[]}}],"position":{"start":{"line":1248,"column":1,"offset":33702},"end":{"line":1248,"column":15,"offset":33716},"indent":[]}}],"position":{"start":{"line":1248,"column":1,"offset":33702},"end":{"line":1248,"column":15,"offset":33716},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput: 5\n\nExplanation: As one shortest transformation is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\nreturn its length 5.","position":{"start":{"line":1250,"column":1,"offset":33718},"end":{"line":1261,"column":4,"offset":33941},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1263,"column":3,"offset":33945},"end":{"line":1263,"column":13,"offset":33955},"indent":[]}}],"position":{"start":{"line":1263,"column":1,"offset":33943},"end":{"line":1263,"column":15,"offset":33957},"indent":[]}}],"position":{"start":{"line":1263,"column":1,"offset":33943},"end":{"line":1263,"column":15,"offset":33957},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: 0\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.","position":{"start":{"line":1265,"column":1,"offset":33959},"end":{"line":1275,"column":4,"offset":34152},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1277,"column":5,"offset":34158},"end":{"line":1277,"column":13,"offset":34166},"indent":[]}}],"position":{"start":{"line":1277,"column":1,"offset":34154},"end":{"line":1277,"column":13,"offset":34166},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Think of it as building a tree, with ","position":{"start":{"line":1279,"column":1,"offset":34168},"end":{"line":1279,"column":38,"offset":34205},"indent":[]}},{"type":"inlineCode","value":"begineWord","position":{"start":{"line":1279,"column":38,"offset":34205},"end":{"line":1279,"column":50,"offset":34217},"indent":[]}},{"type":"text","value":" as root and ","position":{"start":{"line":1279,"column":50,"offset":34217},"end":{"line":1279,"column":63,"offset":34230},"indent":[]}},{"type":"inlineCode","value":"endWord","position":{"start":{"line":1279,"column":63,"offset":34230},"end":{"line":1279,"column":72,"offset":34239},"indent":[]}},{"type":"text","value":" as leaves.","position":{"start":{"line":1279,"column":72,"offset":34239},"end":{"line":1279,"column":83,"offset":34250},"indent":[]}}],"position":{"start":{"line":1279,"column":1,"offset":34168},"end":{"line":1279,"column":83,"offset":34250},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The best way control the depth (length of the shortest transformations) while building the tree is level-order traversal (BFS).","position":{"start":{"line":1281,"column":1,"offset":34252},"end":{"line":1281,"column":128,"offset":34379},"indent":[]}}],"position":{"start":{"line":1281,"column":1,"offset":34252},"end":{"line":1281,"column":128,"offset":34379},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We do not actually build the tree because it is expensive (astronomical if the list is huge). In fact, we only need one shortest path. So just like Dijkstra's algorithm, we say that the first time (level ","position":{"start":{"line":1283,"column":1,"offset":34381},"end":{"line":1283,"column":205,"offset":34585},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":1283,"column":205,"offset":34585},"end":{"line":1283,"column":208,"offset":34588},"indent":[]}},{"type":"text","value":") we encounter a word that turns out to be in a shortest path, then level ","position":{"start":{"line":1283,"column":208,"offset":34588},"end":{"line":1283,"column":282,"offset":34662},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":1283,"column":282,"offset":34662},"end":{"line":1283,"column":285,"offset":34665},"indent":[]}},{"type":"text","value":" is the lowest level this word could ever get. We can safely remove it from the ","position":{"start":{"line":1283,"column":285,"offset":34665},"end":{"line":1283,"column":365,"offset":34745},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1283,"column":365,"offset":34745},"end":{"line":1283,"column":375,"offset":34755},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1283,"column":375,"offset":34755},"end":{"line":1283,"column":376,"offset":34756},"indent":[]}}],"position":{"start":{"line":1283,"column":1,"offset":34381},"end":{"line":1283,"column":376,"offset":34756},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To find all the next words, instead of filtering the ","position":{"start":{"line":1285,"column":1,"offset":34758},"end":{"line":1285,"column":54,"offset":34811},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1285,"column":54,"offset":34811},"end":{"line":1285,"column":64,"offset":34821},"indent":[]}},{"type":"text","value":", enumerate all 25 possible words and check if in ","position":{"start":{"line":1285,"column":64,"offset":34821},"end":{"line":1285,"column":114,"offset":34871},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1285,"column":114,"offset":34871},"end":{"line":1285,"column":124,"offset":34881},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1285,"column":124,"offset":34881},"end":{"line":1285,"column":125,"offset":34882},"indent":[]}}],"position":{"start":{"line":1285,"column":1,"offset":34758},"end":{"line":1285,"column":125,"offset":34882},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {number}\n */\nlet ladderLength = function (beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return 0;\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    let level = 1;\n    const queue = [beginWord, null];\n    while (queue.length > 1) {\n        const word = queue.shift();\n\n        if (word === null) {\n            level++;\n            queue.push(null);\n            continue;\n        }\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const word = head + ALPHABET[c] + tail;\n                    if (word === endWord) {\n                        return level + 1;\n                    }\n                    if (wordList.delete(word)) {\n                        queue.push(word);\n                    }\n                }\n            }\n        }\n    }\n\n    return 0;\n};","position":{"start":{"line":1287,"column":1,"offset":34884},"end":{"line":1333,"column":4,"offset":36028},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1335,"column":1,"offset":36030},"end":{"line":1335,"column":4,"offset":36033},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1337,"column":1,"offset":36035},"end":{"line":1339,"column":10,"offset":36077},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1339,"column":11,"offset":36078},"end":{"line":1339,"column":41,"offset":36108},"indent":[]}}],"position":{"start":{"line":1339,"column":10,"offset":36077},"end":{"line":1339,"column":42,"offset":36109},"indent":[]}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1339,"column":42,"offset":36109},"end":{"line":1340,"column":15,"offset":36124},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/union-find","children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1340,"column":16,"offset":36125},"end":{"line":1340,"column":51,"offset":36160},"indent":[]}}],"position":{"start":{"line":1340,"column":15,"offset":36124},"end":{"line":1340,"column":52,"offset":36161},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Binary Tree Longest Consecutive Sequence\": ","position":{"start":{"line":1340,"column":52,"offset":36161},"end":{"line":1342,"column":45,"offset":36225},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","position":{"start":{"line":1342,"column":46,"offset":36226},"end":{"line":1342,"column":116,"offset":36296},"indent":[]}}],"position":{"start":{"line":1342,"column":45,"offset":36225},"end":{"line":1342,"column":117,"offset":36297},"indent":[]}}],"position":{"start":{"line":1337,"column":1,"offset":36035},"end":{"line":1342,"column":117,"offset":36297},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1344,"column":1,"offset":36299},"end":{"line":1344,"column":4,"offset":36302},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#128-longest-consecutive-sequencehttpsleetcodecomproblemslongest-consecutive-sequencedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1346,"column":2,"offset":36305},"end":{"line":1346,"column":142,"offset":36445},"indent":[]}}],"position":{"start":{"line":1346,"column":1,"offset":36304},"end":{"line":1346,"column":241,"offset":36544},"indent":[]}}],"position":{"start":{"line":1346,"column":1,"offset":36304},"end":{"line":1346,"column":241,"offset":36544},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1348,"column":4,"offset":36549},"end":{"line":1348,"column":6,"offset":36551},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/longest-consecutive-sequence/description/","children":[{"type":"text","value":"128. Longest Consecutive Sequence","position":{"start":{"line":1348,"column":7,"offset":36552},"end":{"line":1348,"column":40,"offset":36585},"indent":[]}}],"position":{"start":{"line":1348,"column":6,"offset":36551},"end":{"line":1348,"column":114,"offset":36659},"indent":[]}}],"position":{"start":{"line":1348,"column":1,"offset":36546},"end":{"line":1348,"column":114,"offset":36659},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1350,"column":5,"offset":36665},"end":{"line":1350,"column":12,"offset":36672},"indent":[]}}],"position":{"start":{"line":1350,"column":1,"offset":36661},"end":{"line":1350,"column":12,"offset":36672},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given an unsorted array of integers, find the length of the longest consecutive elements sequence.","position":{"start":{"line":1352,"column":1,"offset":36674},"end":{"line":1352,"column":99,"offset":36772},"indent":[]}}],"position":{"start":{"line":1352,"column":1,"offset":36674},"end":{"line":1352,"column":99,"offset":36772},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Your algorithm should run in O(","position":{"start":{"line":1354,"column":1,"offset":36774},"end":{"line":1354,"column":32,"offset":36805},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":1354,"column":33,"offset":36806},"end":{"line":1354,"column":34,"offset":36807},"indent":[]}}],"position":{"start":{"line":1354,"column":32,"offset":36805},"end":{"line":1354,"column":35,"offset":36808},"indent":[]}},{"type":"text","value":") complexity.","position":{"start":{"line":1354,"column":35,"offset":36808},"end":{"line":1354,"column":48,"offset":36821},"indent":[]}}],"position":{"start":{"line":1354,"column":1,"offset":36774},"end":{"line":1354,"column":48,"offset":36821},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1356,"column":3,"offset":36825},"end":{"line":1356,"column":11,"offset":36833},"indent":[]}}],"position":{"start":{"line":1356,"column":1,"offset":36823},"end":{"line":1356,"column":13,"offset":36835},"indent":[]}}],"position":{"start":{"line":1356,"column":1,"offset":36823},"end":{"line":1356,"column":13,"offset":36835},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [100, 4, 200, 1, 3, 2]\nOutput: 4\nExplanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.","position":{"start":{"line":1358,"column":1,"offset":36837},"end":{"line":1363,"column":4,"offset":36984},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1365,"column":5,"offset":36990},"end":{"line":1365,"column":13,"offset":36998},"indent":[]}}],"position":{"start":{"line":1365,"column":1,"offset":36986},"end":{"line":1365,"column":13,"offset":36998},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Build a Set from the list. Pick a number, find all it's adjacent numbers that are also in the Set. Count them and remove them all from the Set. Repeat until the Set is empty. Time complexity O(n + n) = O(n).","position":{"start":{"line":1367,"column":1,"offset":37000},"end":{"line":1367,"column":208,"offset":37207},"indent":[]}}],"position":{"start":{"line":1367,"column":1,"offset":37000},"end":{"line":1367,"column":208,"offset":37207},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} nums\n * @return {number}\n */\nlet longestConsecutive = function (nums) {\n    const numSet = new Set(nums);\n    let maxCount = 0;\n    while (numSet.size > 0) {\n        const num = numSet.values().next().value;\n        numSet.delete(num);\n        let count = 1;\n        for (let n = num + 1; numSet.delete(n); n++) {\n            count++;\n        }\n        for (let n = num - 1; numSet.delete(n); n--) {\n            count++;\n        }\n        if (count > maxCount) {\n            maxCount = count;\n        }\n    }\n    return maxCount;\n};","position":{"start":{"line":1369,"column":1,"offset":37209},"end":{"line":1393,"column":4,"offset":37776},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1395,"column":1,"offset":37778},"end":{"line":1395,"column":4,"offset":37781},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":1397,"column":1,"offset":37783},"end":{"line":1399,"column":9,"offset":37826},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":1399,"column":10,"offset":37827},"end":{"line":1399,"column":39,"offset":37856},"indent":[]}}],"position":{"start":{"line":1399,"column":9,"offset":37826},"end":{"line":1399,"column":40,"offset":37857},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":1399,"column":40,"offset":37857},"end":{"line":1400,"column":23,"offset":37880},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1400,"column":24,"offset":37881},"end":{"line":1400,"column":67,"offset":37924},"indent":[]}}],"position":{"start":{"line":1400,"column":23,"offset":37880},"end":{"line":1400,"column":68,"offset":37925},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":1400,"column":68,"offset":37925},"end":{"line":1402,"column":13,"offset":37957},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":1402,"column":14,"offset":37958},"end":{"line":1402,"column":52,"offset":37996},"indent":[]}}],"position":{"start":{"line":1402,"column":13,"offset":37957},"end":{"line":1402,"column":53,"offset":37997},"indent":[]}},{"type":"text","value":"\n\"Binary Tree Maximum Path Sum\": ","position":{"start":{"line":1402,"column":53,"offset":37997},"end":{"line":1403,"column":33,"offset":38030},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-maximum-path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-maximum-path-sum","position":{"start":{"line":1403,"column":34,"offset":38031},"end":{"line":1403,"column":92,"offset":38089},"indent":[]}}],"position":{"start":{"line":1403,"column":33,"offset":38030},"end":{"line":1403,"column":93,"offset":38090},"indent":[]}}],"position":{"start":{"line":1397,"column":1,"offset":37783},"end":{"line":1403,"column":93,"offset":38090},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1405,"column":1,"offset":38092},"end":{"line":1405,"column":4,"offset":38095},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#129-sum-root-to-leaf-numbershttpsleetcodecomproblemssum-root-to-leaf-numbersdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1407,"column":2,"offset":38098},"end":{"line":1407,"column":142,"offset":38238},"indent":[]}}],"position":{"start":{"line":1407,"column":1,"offset":38097},"end":{"line":1407,"column":233,"offset":38329},"indent":[]}}],"position":{"start":{"line":1407,"column":1,"offset":38097},"end":{"line":1407,"column":233,"offset":38329},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1409,"column":4,"offset":38334},"end":{"line":1409,"column":6,"offset":38336},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/sum-root-to-leaf-numbers/description/","children":[{"type":"text","value":"129. Sum Root to Leaf Numbers","position":{"start":{"line":1409,"column":7,"offset":38337},"end":{"line":1409,"column":36,"offset":38366},"indent":[]}}],"position":{"start":{"line":1409,"column":6,"offset":38336},"end":{"line":1409,"column":106,"offset":38436},"indent":[]}}],"position":{"start":{"line":1409,"column":1,"offset":38331},"end":{"line":1409,"column":106,"offset":38436},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1411,"column":5,"offset":38442},"end":{"line":1411,"column":12,"offset":38449},"indent":[]}}],"position":{"start":{"line":1411,"column":1,"offset":38438},"end":{"line":1411,"column":12,"offset":38449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree containing digits from ","position":{"start":{"line":1413,"column":1,"offset":38451},"end":{"line":1413,"column":44,"offset":38494},"indent":[]}},{"type":"inlineCode","value":"0-9","position":{"start":{"line":1413,"column":44,"offset":38494},"end":{"line":1413,"column":49,"offset":38499},"indent":[]}},{"type":"text","value":" only, each root-to-leaf path could represent a number.","position":{"start":{"line":1413,"column":49,"offset":38499},"end":{"line":1413,"column":104,"offset":38554},"indent":[]}}],"position":{"start":{"line":1413,"column":1,"offset":38451},"end":{"line":1413,"column":104,"offset":38554},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An example is the root-to-leaf path ","position":{"start":{"line":1415,"column":1,"offset":38556},"end":{"line":1415,"column":37,"offset":38592},"indent":[]}},{"type":"inlineCode","value":"1->2->3","position":{"start":{"line":1415,"column":37,"offset":38592},"end":{"line":1415,"column":46,"offset":38601},"indent":[]}},{"type":"text","value":" which represents the number ","position":{"start":{"line":1415,"column":46,"offset":38601},"end":{"line":1415,"column":75,"offset":38630},"indent":[]}},{"type":"inlineCode","value":"123","position":{"start":{"line":1415,"column":75,"offset":38630},"end":{"line":1415,"column":80,"offset":38635},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1415,"column":80,"offset":38635},"end":{"line":1415,"column":81,"offset":38636},"indent":[]}}],"position":{"start":{"line":1415,"column":1,"offset":38556},"end":{"line":1415,"column":81,"offset":38636},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find the total sum of all root-to-leaf numbers.","position":{"start":{"line":1417,"column":1,"offset":38638},"end":{"line":1417,"column":48,"offset":38685},"indent":[]}}],"position":{"start":{"line":1417,"column":1,"offset":38638},"end":{"line":1417,"column":48,"offset":38685},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1419,"column":3,"offset":38689},"end":{"line":1419,"column":8,"offset":38694},"indent":[]}}],"position":{"start":{"line":1419,"column":1,"offset":38687},"end":{"line":1419,"column":10,"offset":38696},"indent":[]}},{"type":"text","value":" A leaf is a node with no children.","position":{"start":{"line":1419,"column":10,"offset":38696},"end":{"line":1419,"column":45,"offset":38731},"indent":[]}}],"position":{"start":{"line":1419,"column":1,"offset":38687},"end":{"line":1419,"column":45,"offset":38731},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1421,"column":3,"offset":38735},"end":{"line":1421,"column":11,"offset":38743},"indent":[]}}],"position":{"start":{"line":1421,"column":1,"offset":38733},"end":{"line":1421,"column":13,"offset":38745},"indent":[]}}],"position":{"start":{"line":1421,"column":1,"offset":38733},"end":{"line":1421,"column":13,"offset":38745},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3]\n    1\n   / \\\n  2   3\nOutput: 25\nExplanation:\nThe root-to-leaf path 1->2 represents the number 12.\nThe root-to-leaf path 1->3 represents the number 13.\nTherefore, sum = 12 + 13 = 25.","position":{"start":{"line":1423,"column":1,"offset":38747},"end":{"line":1431,"column":35,"offset":38979},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1433,"column":3,"offset":38983},"end":{"line":1433,"column":13,"offset":38993},"indent":[]}}],"position":{"start":{"line":1433,"column":1,"offset":38981},"end":{"line":1433,"column":15,"offset":38995},"indent":[]}}],"position":{"start":{"line":1433,"column":1,"offset":38981},"end":{"line":1433,"column":15,"offset":38995},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [4,9,0,5,1]\n    4\n   / \\\n  9   0\n / \\\n5   1\nOutput: 1026\nExplanation:\nThe root-to-leaf path 4->9->5 represents the number 495.\nThe root-to-leaf path 4->9->1 represents the number 491.\nThe root-to-leaf path 4->0 represents the number 40.\nTherefore, sum = 495 + 491 + 40 = 1026.","position":{"start":{"line":1435,"column":1,"offset":38997},"end":{"line":1446,"column":44,"offset":39328},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1448,"column":5,"offset":39334},"end":{"line":1448,"column":13,"offset":39342},"indent":[]}}],"position":{"start":{"line":1448,"column":1,"offset":39330},"end":{"line":1448,"column":13,"offset":39342},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To write a clean solution for this promblem, use ","position":{"start":{"line":1450,"column":1,"offset":39344},"end":{"line":1450,"column":50,"offset":39393},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1450,"column":50,"offset":39393},"end":{"line":1450,"column":53,"offset":39396},"indent":[]}},{"type":"text","value":" as indicator of leaf node. If all the children get ","position":{"start":{"line":1450,"column":53,"offset":39396},"end":{"line":1450,"column":105,"offset":39448},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1450,"column":105,"offset":39448},"end":{"line":1450,"column":108,"offset":39451},"indent":[]}},{"type":"text","value":", it is a leaf node, return the sum of current level.","position":{"start":{"line":1450,"column":108,"offset":39451},"end":{"line":1450,"column":161,"offset":39504},"indent":[]}}],"position":{"start":{"line":1450,"column":1,"offset":39344},"end":{"line":1450,"column":161,"offset":39504},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet sumNumbers = function (root, sum = 0) {\n    if (!root) {\n        return 0;\n    }\n    sum = sum * 10 + root.val;\n    return sumNumbers(root.left, sum) + sumNumbers(root.right, sum) || sum;\n};","position":{"start":{"line":1452,"column":1,"offset":39506},"end":{"line":1471,"column":4,"offset":39904},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1473,"column":1,"offset":39906},"end":{"line":1473,"column":4,"offset":39909},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1475,"column":1,"offset":39911},"end":{"line":1477,"column":23,"offset":39968},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1477,"column":24,"offset":39969},"end":{"line":1477,"column":67,"offset":40012},"indent":[]}}],"position":{"start":{"line":1477,"column":23,"offset":39968},"end":{"line":1477,"column":68,"offset":40013},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1477,"column":68,"offset":40013},"end":{"line":1478,"column":25,"offset":40038},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1478,"column":26,"offset":40039},"end":{"line":1478,"column":71,"offset":40084},"indent":[]}}],"position":{"start":{"line":1478,"column":25,"offset":40038},"end":{"line":1478,"column":72,"offset":40085},"indent":[]}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1478,"column":72,"offset":40085},"end":{"line":1479,"column":15,"offset":40100},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/union-find","children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1479,"column":16,"offset":40101},"end":{"line":1479,"column":51,"offset":40136},"indent":[]}}],"position":{"start":{"line":1479,"column":15,"offset":40100},"end":{"line":1479,"column":52,"offset":40137},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Number of Islands\": ","position":{"start":{"line":1479,"column":52,"offset":40137},"end":{"line":1481,"column":22,"offset":40178},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/number-of-islands","children":[{"type":"text","value":"https://leetcode.com/problems/number-of-islands","position":{"start":{"line":1481,"column":23,"offset":40179},"end":{"line":1481,"column":70,"offset":40226},"indent":[]}}],"position":{"start":{"line":1481,"column":22,"offset":40178},"end":{"line":1481,"column":71,"offset":40227},"indent":[]}},{"type":"text","value":"\n\"Walls and Gates\": ","position":{"start":{"line":1481,"column":71,"offset":40227},"end":{"line":1482,"column":20,"offset":40247},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/walls-and-gates","children":[{"type":"text","value":"https://leetcode.com/problems/walls-and-gates","position":{"start":{"line":1482,"column":21,"offset":40248},"end":{"line":1482,"column":66,"offset":40293},"indent":[]}}],"position":{"start":{"line":1482,"column":20,"offset":40247},"end":{"line":1482,"column":67,"offset":40294},"indent":[]}}],"position":{"start":{"line":1475,"column":1,"offset":39911},"end":{"line":1482,"column":67,"offset":40294},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1484,"column":1,"offset":40296},"end":{"line":1484,"column":4,"offset":40299},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#130-surrounded-regionshttpsleetcodecomproblemssurrounded-regionsdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1486,"column":2,"offset":40302},"end":{"line":1486,"column":142,"offset":40442},"indent":[]}}],"position":{"start":{"line":1486,"column":1,"offset":40301},"end":{"line":1486,"column":221,"offset":40521},"indent":[]}}],"position":{"start":{"line":1486,"column":1,"offset":40301},"end":{"line":1486,"column":221,"offset":40521},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1488,"column":4,"offset":40526},"end":{"line":1488,"column":6,"offset":40528},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/surrounded-regions/description/","children":[{"type":"text","value":"130. Surrounded Regions","position":{"start":{"line":1488,"column":7,"offset":40529},"end":{"line":1488,"column":30,"offset":40552},"indent":[]}}],"position":{"start":{"line":1488,"column":6,"offset":40528},"end":{"line":1488,"column":94,"offset":40616},"indent":[]}}],"position":{"start":{"line":1488,"column":1,"offset":40523},"end":{"line":1488,"column":94,"offset":40616},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1490,"column":5,"offset":40622},"end":{"line":1490,"column":12,"offset":40629},"indent":[]}}],"position":{"start":{"line":1490,"column":1,"offset":40618},"end":{"line":1490,"column":12,"offset":40629},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a 2D board containing ","position":{"start":{"line":1492,"column":1,"offset":40631},"end":{"line":1492,"column":29,"offset":40659},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1492,"column":29,"offset":40659},"end":{"line":1492,"column":34,"offset":40664},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1492,"column":34,"offset":40664},"end":{"line":1492,"column":39,"offset":40669},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1492,"column":39,"offset":40669},"end":{"line":1492,"column":44,"offset":40674},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":1492,"column":44,"offset":40674},"end":{"line":1492,"column":46,"offset":40676},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"the letter O","position":{"start":{"line":1492,"column":48,"offset":40678},"end":{"line":1492,"column":60,"offset":40690},"indent":[]}}],"position":{"start":{"line":1492,"column":46,"offset":40676},"end":{"line":1492,"column":62,"offset":40692},"indent":[]}},{"type":"text","value":"), capture all regions surrounded by ","position":{"start":{"line":1492,"column":62,"offset":40692},"end":{"line":1492,"column":99,"offset":40729},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1492,"column":99,"offset":40729},"end":{"line":1492,"column":104,"offset":40734},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1492,"column":104,"offset":40734},"end":{"line":1492,"column":105,"offset":40735},"indent":[]}}],"position":{"start":{"line":1492,"column":1,"offset":40631},"end":{"line":1492,"column":105,"offset":40735},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A region is captured by flipping all ","position":{"start":{"line":1494,"column":1,"offset":40737},"end":{"line":1494,"column":38,"offset":40774},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1494,"column":38,"offset":40774},"end":{"line":1494,"column":43,"offset":40779},"indent":[]}},{"type":"text","value":"s into ","position":{"start":{"line":1494,"column":43,"offset":40779},"end":{"line":1494,"column":50,"offset":40786},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1494,"column":50,"offset":40786},"end":{"line":1494,"column":55,"offset":40791},"indent":[]}},{"type":"text","value":"s in that surrounded region.","position":{"start":{"line":1494,"column":55,"offset":40791},"end":{"line":1494,"column":83,"offset":40819},"indent":[]}}],"position":{"start":{"line":1494,"column":1,"offset":40737},"end":{"line":1494,"column":83,"offset":40819},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1496,"column":3,"offset":40823},"end":{"line":1496,"column":11,"offset":40831},"indent":[]}}],"position":{"start":{"line":1496,"column":1,"offset":40821},"end":{"line":1496,"column":13,"offset":40833},"indent":[]}}],"position":{"start":{"line":1496,"column":1,"offset":40821},"end":{"line":1496,"column":13,"offset":40833},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"X X X X\nX O O X\nX X O X\nX O X X","position":{"start":{"line":1498,"column":1,"offset":40835},"end":{"line":1504,"column":4,"offset":40875},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After running your function, the board should be:","position":{"start":{"line":1506,"column":1,"offset":40877},"end":{"line":1506,"column":50,"offset":40926},"indent":[]}}],"position":{"start":{"line":1506,"column":1,"offset":40877},"end":{"line":1506,"column":50,"offset":40926},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"X X X X\nX X X X\nX X X X\nX O X X","position":{"start":{"line":1508,"column":1,"offset":40928},"end":{"line":1514,"column":4,"offset":40968},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1516,"column":3,"offset":40972},"end":{"line":1516,"column":15,"offset":40984},"indent":[]}}],"position":{"start":{"line":1516,"column":1,"offset":40970},"end":{"line":1516,"column":17,"offset":40986},"indent":[]}}],"position":{"start":{"line":1516,"column":1,"offset":40970},"end":{"line":1516,"column":17,"offset":40986},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Surrounded regions shouldn't be on the border, which means that any ","position":{"start":{"line":1518,"column":1,"offset":40988},"end":{"line":1518,"column":69,"offset":41056},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1518,"column":69,"offset":41056},"end":{"line":1518,"column":74,"offset":41061},"indent":[]}},{"type":"text","value":" on the border of the board are not flipped to ","position":{"start":{"line":1518,"column":74,"offset":41061},"end":{"line":1518,"column":121,"offset":41108},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1518,"column":121,"offset":41108},"end":{"line":1518,"column":126,"offset":41113},"indent":[]}},{"type":"text","value":". Any ","position":{"start":{"line":1518,"column":126,"offset":41113},"end":{"line":1518,"column":132,"offset":41119},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1518,"column":132,"offset":41119},"end":{"line":1518,"column":137,"offset":41124},"indent":[]}},{"type":"text","value":" that is not on the border and it is not connected to an ","position":{"start":{"line":1518,"column":137,"offset":41124},"end":{"line":1518,"column":194,"offset":41181},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1518,"column":194,"offset":41181},"end":{"line":1518,"column":199,"offset":41186},"indent":[]}},{"type":"text","value":" on the border will be flipped to ","position":{"start":{"line":1518,"column":199,"offset":41186},"end":{"line":1518,"column":233,"offset":41220},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1518,"column":233,"offset":41220},"end":{"line":1518,"column":238,"offset":41225},"indent":[]}},{"type":"text","value":". Two cells are connected if they are adjacent cells connected horizontally or vertically.","position":{"start":{"line":1518,"column":238,"offset":41225},"end":{"line":1518,"column":328,"offset":41315},"indent":[]}}],"position":{"start":{"line":1518,"column":1,"offset":40988},"end":{"line":1518,"column":328,"offset":41315},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1520,"column":5,"offset":41321},"end":{"line":1520,"column":13,"offset":41329},"indent":[]}}],"position":{"start":{"line":1520,"column":1,"offset":41317},"end":{"line":1520,"column":13,"offset":41329},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find all the ","position":{"start":{"line":1522,"column":1,"offset":41331},"end":{"line":1522,"column":14,"offset":41344},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":14,"offset":41344},"end":{"line":1522,"column":17,"offset":41347},"indent":[]}},{"type":"text","value":"s that are connected to the ","position":{"start":{"line":1522,"column":17,"offset":41347},"end":{"line":1522,"column":45,"offset":41375},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":45,"offset":41375},"end":{"line":1522,"column":48,"offset":41378},"indent":[]}},{"type":"text","value":"s on the border, change them to ","position":{"start":{"line":1522,"column":48,"offset":41378},"end":{"line":1522,"column":80,"offset":41410},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1522,"column":80,"offset":41410},"end":{"line":1522,"column":83,"offset":41413},"indent":[]}},{"type":"text","value":". Then scan the board, change ","position":{"start":{"line":1522,"column":83,"offset":41413},"end":{"line":1522,"column":113,"offset":41443},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":113,"offset":41443},"end":{"line":1522,"column":116,"offset":41446},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1522,"column":116,"offset":41446},"end":{"line":1522,"column":120,"offset":41450},"indent":[]}},{"type":"inlineCode","value":"X","position":{"start":{"line":1522,"column":120,"offset":41450},"end":{"line":1522,"column":123,"offset":41453},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1522,"column":123,"offset":41453},"end":{"line":1522,"column":128,"offset":41458},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1522,"column":128,"offset":41458},"end":{"line":1522,"column":131,"offset":41461},"indent":[]}},{"type":"text","value":" back to ","position":{"start":{"line":1522,"column":131,"offset":41461},"end":{"line":1522,"column":140,"offset":41470},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":140,"offset":41470},"end":{"line":1522,"column":143,"offset":41473},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1522,"column":143,"offset":41473},"end":{"line":1522,"column":144,"offset":41474},"indent":[]}}],"position":{"start":{"line":1522,"column":1,"offset":41331},"end":{"line":1522,"column":144,"offset":41474},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The process of finding the connected ","position":{"start":{"line":1524,"column":1,"offset":41476},"end":{"line":1524,"column":38,"offset":41513},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1524,"column":38,"offset":41513},"end":{"line":1524,"column":41,"offset":41516},"indent":[]}},{"type":"text","value":"s is just like tree traversal. ","position":{"start":{"line":1524,"column":41,"offset":41516},"end":{"line":1524,"column":72,"offset":41547},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1524,"column":72,"offset":41547},"end":{"line":1524,"column":75,"offset":41550},"indent":[]}},{"type":"text","value":"s on the border are the same level. Their children are the second level. And so on.","position":{"start":{"line":1524,"column":75,"offset":41550},"end":{"line":1524,"column":158,"offset":41633},"indent":[]}}],"position":{"start":{"line":1524,"column":1,"offset":41476},"end":{"line":1524,"column":158,"offset":41633},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So both BFS and DFS are good. I prefer BFS when pruning is not needed in favor of its readability.","position":{"start":{"line":1526,"column":1,"offset":41635},"end":{"line":1526,"column":99,"offset":41733},"indent":[]}}],"position":{"start":{"line":1526,"column":1,"offset":41635},"end":{"line":1526,"column":99,"offset":41733},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */\nlet solve = function (board) {\n    const height = board.length;\n    if (height <= 1) {\n        return;\n    }\n    const width = board[0].length;\n    if (width <= 1) {\n        return;\n    }\n\n    const rowend = height - 1;\n    const colend = width - 1;\n\n    const queue = [];\n\n    for (let row = 0; row < height; row++) {\n        if (board[row][0] === 'O') {\n            board[row][0] = '#';\n            queue.push(row, 0);\n        }\n        if (board[row][colend] === 'O') {\n            board[row][colend] = '#';\n            queue.push(row, colend);\n        }\n    }\n\n    for (let col = 0; col < width; col++) {\n        if (board[0][col] === 'O') {\n            board[0][col] = '#';\n            queue.push(0, col);\n        }\n        if (board[rowend][col] === 'O') {\n            board[rowend][col] = '#';\n            queue.push(rowend, col);\n        }\n    }\n\n    while (queue.length > 0) {\n        const row = queue.shift();\n        const col = queue.shift();\n        if (row < rowend && board[row + 1][col] === 'O') {\n            board[row + 1][col] = '#';\n            queue.push(row + 1, col);\n        }\n        if (row > 0 && board[row - 1][col] === 'O') {\n            board[row - 1][col] = '#';\n            queue.push(row - 1, col);\n        }\n        if (board[row][col + 1] === 'O') {\n            board[row][col + 1] = '#';\n            queue.push(row, col + 1);\n        }\n        if (board[row][col - 1] === 'O') {\n            board[row][col - 1] = '#';\n            queue.push(row, col - 1);\n        }\n    }\n\n    for (let row = 0; row < height; row++) {\n        for (let col = 0; col < width; col++) {\n            if (board[row][col] === '#') {\n                board[row][col] = 'O';\n            } else if (board[row][col] === 'O') {\n                board[row][col] = 'X';\n            }\n        }\n    }\n};","position":{"start":{"line":1528,"column":1,"offset":41735},"end":{"line":1601,"column":4,"offset":43664},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1603,"column":1,"offset":43666},"end":{"line":1603,"column":4,"offset":43669},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1605,"column":1,"offset":43671},"end":{"line":1607,"column":23,"offset":43728},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1607,"column":24,"offset":43729},"end":{"line":1607,"column":67,"offset":43772},"indent":[]}}],"position":{"start":{"line":1607,"column":23,"offset":43728},"end":{"line":1607,"column":68,"offset":43773},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1607,"column":68,"offset":43773},"end":{"line":1608,"column":25,"offset":43798},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1608,"column":26,"offset":43799},"end":{"line":1608,"column":71,"offset":43844},"indent":[]}}],"position":{"start":{"line":1608,"column":25,"offset":43798},"end":{"line":1608,"column":72,"offset":43845},"indent":[]}},{"type":"text","value":"\n\"Graph\": ","position":{"start":{"line":1608,"column":72,"offset":43845},"end":{"line":1609,"column":10,"offset":43855},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/graph","children":[{"type":"text","value":"https://leetcode.com/tag/graph","position":{"start":{"line":1609,"column":11,"offset":43856},"end":{"line":1609,"column":41,"offset":43886},"indent":[]}}],"position":{"start":{"line":1609,"column":10,"offset":43855},"end":{"line":1609,"column":42,"offset":43887},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Copy List with Random Pointer\": ","position":{"start":{"line":1609,"column":42,"offset":43887},"end":{"line":1611,"column":34,"offset":43940},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/copy-list-with-random-pointer","children":[{"type":"text","value":"https://leetcode.com/problems/copy-list-with-random-pointer","position":{"start":{"line":1611,"column":35,"offset":43941},"end":{"line":1611,"column":94,"offset":44000},"indent":[]}}],"position":{"start":{"line":1611,"column":34,"offset":43940},"end":{"line":1611,"column":95,"offset":44001},"indent":[]}}],"position":{"start":{"line":1605,"column":1,"offset":43671},"end":{"line":1611,"column":95,"offset":44001},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1613,"column":1,"offset":44003},"end":{"line":1613,"column":4,"offset":44006},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#133-clone-graphhttpsleetcodecomproblemsclone-graphdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1615,"column":2,"offset":44009},"end":{"line":1615,"column":142,"offset":44149},"indent":[]}}],"position":{"start":{"line":1615,"column":1,"offset":44008},"end":{"line":1615,"column":207,"offset":44214},"indent":[]}}],"position":{"start":{"line":1615,"column":1,"offset":44008},"end":{"line":1615,"column":207,"offset":44214},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1617,"column":4,"offset":44219},"end":{"line":1617,"column":6,"offset":44221},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/clone-graph/description/","children":[{"type":"text","value":"133. Clone Graph","position":{"start":{"line":1617,"column":7,"offset":44222},"end":{"line":1617,"column":23,"offset":44238},"indent":[]}}],"position":{"start":{"line":1617,"column":6,"offset":44221},"end":{"line":1617,"column":80,"offset":44295},"indent":[]}}],"position":{"start":{"line":1617,"column":1,"offset":44216},"end":{"line":1617,"column":80,"offset":44295},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1619,"column":5,"offset":44301},"end":{"line":1619,"column":12,"offset":44308},"indent":[]}}],"position":{"start":{"line":1619,"column":1,"offset":44297},"end":{"line":1619,"column":12,"offset":44308},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the head of a graph, return a deep copy (clone) of the graph. Each node in the graph contains a ","position":{"start":{"line":1621,"column":1,"offset":44310},"end":{"line":1621,"column":103,"offset":44412},"indent":[]}},{"type":"inlineCode","value":"label","position":{"start":{"line":1621,"column":103,"offset":44412},"end":{"line":1621,"column":110,"offset":44419},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":1621,"column":110,"offset":44419},"end":{"line":1621,"column":112,"offset":44421},"indent":[]}},{"type":"inlineCode","value":"int","position":{"start":{"line":1621,"column":112,"offset":44421},"end":{"line":1621,"column":117,"offset":44426},"indent":[]}},{"type":"text","value":") and a list (","position":{"start":{"line":1621,"column":117,"offset":44426},"end":{"line":1621,"column":131,"offset":44440},"indent":[]}},{"type":"inlineCode","value":"List[UndirectedGraphNode]","position":{"start":{"line":1621,"column":131,"offset":44440},"end":{"line":1621,"column":158,"offset":44467},"indent":[]}},{"type":"text","value":") of its ","position":{"start":{"line":1621,"column":158,"offset":44467},"end":{"line":1621,"column":167,"offset":44476},"indent":[]}},{"type":"inlineCode","value":"neighbors","position":{"start":{"line":1621,"column":167,"offset":44476},"end":{"line":1621,"column":178,"offset":44487},"indent":[]}},{"type":"text","value":". There is an edge between the given node and each of the nodes in its neighbors.","position":{"start":{"line":1621,"column":178,"offset":44487},"end":{"line":1621,"column":259,"offset":44568},"indent":[]}}],"position":{"start":{"line":1621,"column":1,"offset":44310},"end":{"line":1621,"column":259,"offset":44568},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"OJ's undirected graph serialization (so you can understand error output):","position":{"start":{"line":1623,"column":1,"offset":44570},"end":{"line":1623,"column":74,"offset":44643},"indent":[]}}],"position":{"start":{"line":1623,"column":1,"offset":44570},"end":{"line":1623,"column":74,"offset":44643},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nodes are labeled uniquely.","position":{"start":{"line":1625,"column":1,"offset":44645},"end":{"line":1625,"column":28,"offset":44672},"indent":[]}}],"position":{"start":{"line":1625,"column":1,"offset":44645},"end":{"line":1625,"column":28,"offset":44672},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":1627,"column":1,"offset":44674},"end":{"line":1627,"column":8,"offset":44681},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1627,"column":8,"offset":44681},"end":{"line":1627,"column":11,"offset":44684},"indent":[]}},{"type":"text","value":" as a separator for each node, and ","position":{"start":{"line":1627,"column":11,"offset":44684},"end":{"line":1627,"column":46,"offset":44719},"indent":[]}},{"type":"inlineCode","value":",","position":{"start":{"line":1627,"column":46,"offset":44719},"end":{"line":1627,"column":49,"offset":44722},"indent":[]}},{"type":"text","value":" as a separator for node label and each neighbor of the node.","position":{"start":{"line":1627,"column":49,"offset":44722},"end":{"line":1627,"column":110,"offset":44783},"indent":[]}}],"position":{"start":{"line":1627,"column":1,"offset":44674},"end":{"line":1627,"column":110,"offset":44783},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As an example, consider the serialized graph ","position":{"start":{"line":1629,"column":1,"offset":44785},"end":{"line":1629,"column":46,"offset":44830},"indent":[]}},{"type":"inlineCode","value":"{0,1,2#1,2#2,2}","position":{"start":{"line":1629,"column":46,"offset":44830},"end":{"line":1629,"column":63,"offset":44847},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1629,"column":63,"offset":44847},"end":{"line":1629,"column":64,"offset":44848},"indent":[]}}],"position":{"start":{"line":1629,"column":1,"offset":44785},"end":{"line":1629,"column":64,"offset":44848},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The graph has a total of three nodes, and therefore contains three parts as separated by ","position":{"start":{"line":1631,"column":1,"offset":44850},"end":{"line":1631,"column":90,"offset":44939},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1631,"column":90,"offset":44939},"end":{"line":1631,"column":93,"offset":44942},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1631,"column":93,"offset":44942},"end":{"line":1631,"column":94,"offset":44943},"indent":[]}}],"position":{"start":{"line":1631,"column":1,"offset":44850},"end":{"line":1631,"column":94,"offset":44943},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"First node is labeled as ","position":{"start":{"line":1633,"column":5,"offset":44949},"end":{"line":1633,"column":30,"offset":44974},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1633,"column":30,"offset":44974},"end":{"line":1633,"column":33,"offset":44977},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1633,"column":33,"offset":44977},"end":{"line":1633,"column":48,"offset":44992},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1633,"column":48,"offset":44992},"end":{"line":1633,"column":51,"offset":44995},"indent":[]}},{"type":"text","value":" to both nodes ","position":{"start":{"line":1633,"column":51,"offset":44995},"end":{"line":1633,"column":66,"offset":45010},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1633,"column":66,"offset":45010},"end":{"line":1633,"column":69,"offset":45013},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1633,"column":69,"offset":45013},"end":{"line":1633,"column":74,"offset":45018},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1633,"column":74,"offset":45018},"end":{"line":1633,"column":77,"offset":45021},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1633,"column":77,"offset":45021},"end":{"line":1633,"column":78,"offset":45022},"indent":[]}}],"position":{"start":{"line":1633,"column":5,"offset":44949},"end":{"line":1633,"column":78,"offset":45022},"indent":[]}}],"position":{"start":{"line":1633,"column":1,"offset":44945},"end":{"line":1633,"column":78,"offset":45022},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Second node is labeled as ","position":{"start":{"line":1634,"column":5,"offset":45027},"end":{"line":1634,"column":31,"offset":45053},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1634,"column":31,"offset":45053},"end":{"line":1634,"column":34,"offset":45056},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1634,"column":34,"offset":45056},"end":{"line":1634,"column":49,"offset":45071},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1634,"column":49,"offset":45071},"end":{"line":1634,"column":52,"offset":45074},"indent":[]}},{"type":"text","value":" to node ","position":{"start":{"line":1634,"column":52,"offset":45074},"end":{"line":1634,"column":61,"offset":45083},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1634,"column":61,"offset":45083},"end":{"line":1634,"column":64,"offset":45086},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1634,"column":64,"offset":45086},"end":{"line":1634,"column":65,"offset":45087},"indent":[]}}],"position":{"start":{"line":1634,"column":5,"offset":45027},"end":{"line":1634,"column":65,"offset":45087},"indent":[]}}],"position":{"start":{"line":1634,"column":1,"offset":45023},"end":{"line":1634,"column":65,"offset":45087},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Third node is labeled as ","position":{"start":{"line":1635,"column":5,"offset":45092},"end":{"line":1635,"column":30,"offset":45117},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1635,"column":30,"offset":45117},"end":{"line":1635,"column":33,"offset":45120},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1635,"column":33,"offset":45120},"end":{"line":1635,"column":48,"offset":45135},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1635,"column":48,"offset":45135},"end":{"line":1635,"column":51,"offset":45138},"indent":[]}},{"type":"text","value":" to node ","position":{"start":{"line":1635,"column":51,"offset":45138},"end":{"line":1635,"column":60,"offset":45147},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1635,"column":60,"offset":45147},"end":{"line":1635,"column":63,"offset":45150},"indent":[]}},{"type":"text","value":" (itself), thus forming a self-cycle.","position":{"start":{"line":1635,"column":63,"offset":45150},"end":{"line":1635,"column":100,"offset":45187},"indent":[]}}],"position":{"start":{"line":1635,"column":5,"offset":45092},"end":{"line":1635,"column":100,"offset":45187},"indent":[]}}],"position":{"start":{"line":1635,"column":1,"offset":45088},"end":{"line":1635,"column":100,"offset":45187},"indent":[]}}],"position":{"start":{"line":1633,"column":1,"offset":44945},"end":{"line":1635,"column":100,"offset":45187},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Visually, the graph looks like the following:","position":{"start":{"line":1637,"column":1,"offset":45189},"end":{"line":1637,"column":46,"offset":45234},"indent":[]}}],"position":{"start":{"line":1637,"column":1,"offset":45189},"end":{"line":1637,"column":46,"offset":45234},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"       1\n      / \\\n     /   \\\n    0 --- 2\n         / \\\n         \\_/","position":{"start":{"line":1639,"column":1,"offset":45236},"end":{"line":1647,"column":4,"offset":45312},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note","position":{"start":{"line":1649,"column":3,"offset":45316},"end":{"line":1649,"column":7,"offset":45320},"indent":[]}}],"position":{"start":{"line":1649,"column":1,"offset":45314},"end":{"line":1649,"column":9,"offset":45322},"indent":[]}},{"type":"text","value":": The information about the tree serialization is only meant so that you can understand error output if you get a wrong answer. You don't need to understand the serialization to solve the problem.","position":{"start":{"line":1649,"column":9,"offset":45322},"end":{"line":1649,"column":205,"offset":45518},"indent":[]}}],"position":{"start":{"line":1649,"column":1,"offset":45314},"end":{"line":1649,"column":205,"offset":45518},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1651,"column":5,"offset":45524},"end":{"line":1651,"column":13,"offset":45532},"indent":[]}}],"position":{"start":{"line":1651,"column":1,"offset":45520},"end":{"line":1651,"column":13,"offset":45532},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"DFS. Cache the visited node before entering the next recursion.","position":{"start":{"line":1653,"column":1,"offset":45534},"end":{"line":1653,"column":64,"offset":45597},"indent":[]}}],"position":{"start":{"line":1653,"column":1,"offset":45534},"end":{"line":1653,"column":64,"offset":45597},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for undirected graph.\n * function UndirectedGraphNode(label) {\n *     this.label = label;\n *     this.neighbors = [];   // Array of UndirectedGraphNode\n * }\n */\n\n/**\n * @param {UndirectedGraphNode} graph\n * @return {UndirectedGraphNode}\n */\nlet cloneGraph = function (graph) {\n    const cache = {};\n    return _clone(graph);\n\n    function _clone(graph) {\n        if (!graph) {\n            return graph;\n        }\n        const label = graph.label;\n        if (!cache[label]) {\n            cache[label] = new UndirectedGraphNode(label);\n            cache[label].neighbors = graph.neighbors.map(_clone);\n        }\n        return cache[label];\n    }\n};","position":{"start":{"line":1655,"column":1,"offset":45599},"end":{"line":1684,"column":4,"offset":46276},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":"binary-tree-upside-down","url":"https://github.com/everthis/leetcode-js/blob/master/images/binary-tree-upside-down.webp","alt":"alt text","position":{"start":{"line":1686,"column":1,"offset":46278},"end":{"line":1686,"column":127,"offset":46404},"indent":[]}}],"position":{"start":{"line":1686,"column":1,"offset":46278},"end":{"line":1686,"column":127,"offset":46404},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nconst upsideDownBinaryTree = function (root) {\n    let curr = root;\n    let next = null;\n    let temp = null;\n    let prev = null;\n    while (curr !== null) {\n        next = curr.left;\n        curr.left = temp;\n        temp = curr.right;\n        curr.right = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n};\n\n// another\n\nconst upsideDownBinaryTree = function (root) {\n    if (root == null || root.left == null) {\n        return root;\n    }\n    const newRoot = upsideDownBinaryTree(root.left);\n    root.left.left = root.right;\n    root.left.right = root;\n    root.left = null;\n    root.right = null;\n    return newRoot;\n};","position":{"start":{"line":1688,"column":1,"offset":46406},"end":{"line":1729,"column":4,"offset":47258},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":"maximum-sum-circular-subarray","url":"https://github.com/everthis/leetcode-js/blob/master/images/maximum-sum-circular-subarray.png","alt":"alt text","position":{"start":{"line":1731,"column":1,"offset":47260},"end":{"line":1731,"column":138,"offset":47397},"indent":[]}}],"position":{"start":{"line":1731,"column":1,"offset":47260},"end":{"line":1731,"column":138,"offset":47397},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} A\n * @return {number}\n */\nconst maxSubarraySumCircular = function (A) {\n    let minSum = Infinity,\n        sum = 0,\n        maxSum = -Infinity,\n        curMax = 0,\n        curMin = 0;\n    for (let a of A) {\n        sum += a;\n        curMax = Math.max(curMax + a, a);\n        maxSum = Math.max(maxSum, curMax);\n        curMin = Math.min(curMin + a, a);\n        minSum = Math.min(minSum, curMin);\n    }\n    return maxSum > 0 ? Math.max(maxSum, sum - minSum) : maxSum;\n};","position":{"start":{"line":1733,"column":1,"offset":47399},"end":{"line":1753,"column":4,"offset":47902},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#balanced-binary-tree---leetcode","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1755,"column":2,"offset":47905},"end":{"line":1755,"column":142,"offset":48045},"indent":[]}}],"position":{"start":{"line":1755,"column":1,"offset":47904},"end":{"line":1755,"column":177,"offset":48080},"indent":[]}}],"position":{"start":{"line":1755,"column":1,"offset":47904},"end":{"line":1755,"column":177,"offset":48080},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"âž¤ Balanced Binary Tree - LeetCode","position":{"start":{"line":1757,"column":3,"offset":48084},"end":{"line":1757,"column":36,"offset":48117},"indent":[]}}],"position":{"start":{"line":1757,"column":1,"offset":48082},"end":{"line":1757,"column":36,"offset":48117},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1759,"column":3,"offset":48121},"end":{"line":1759,"column":144,"offset":48262},"indent":[]}}],"position":{"start":{"line":1759,"column":3,"offset":48121},"end":{"line":1759,"column":144,"offset":48262},"indent":[]}}],"position":{"start":{"line":1759,"column":1,"offset":48119},"end":{"line":1759,"column":144,"offset":48262},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree, determine if it is height-balanced.","position":{"start":{"line":1761,"column":1,"offset":48264},"end":{"line":1761,"column":57,"offset":48320},"indent":[]}}],"position":{"start":{"line":1761,"column":1,"offset":48264},"end":{"line":1761,"column":57,"offset":48320},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as:","position":{"start":{"line":1763,"column":1,"offset":48322},"end":{"line":1763,"column":63,"offset":48384},"indent":[]}}],"position":{"start":{"line":1763,"column":1,"offset":48322},"end":{"line":1763,"column":63,"offset":48384},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"a binary tree in which the left and right subtrees of ","position":{"start":{"line":1765,"column":3,"offset":48388},"end":{"line":1765,"column":57,"offset":48442},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"every","position":{"start":{"line":1765,"column":58,"offset":48443},"end":{"line":1765,"column":63,"offset":48448},"indent":[]}}],"position":{"start":{"line":1765,"column":57,"offset":48442},"end":{"line":1765,"column":64,"offset":48449},"indent":[]}},{"type":"text","value":" node differ in height by no more than 1.","position":{"start":{"line":1765,"column":64,"offset":48449},"end":{"line":1765,"column":105,"offset":48490},"indent":[]}}],"position":{"start":{"line":1765,"column":3,"offset":48388},"end":{"line":1765,"column":105,"offset":48490},"indent":[]}}],"position":{"start":{"line":1765,"column":1,"offset":48386},"end":{"line":1765,"column":105,"offset":48490},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1767,"column":3,"offset":48494},"end":{"line":1767,"column":13,"offset":48504},"indent":[]}}],"position":{"start":{"line":1767,"column":1,"offset":48492},"end":{"line":1767,"column":15,"offset":48506},"indent":[]}}],"position":{"start":{"line":1767,"column":1,"offset":48492},"end":{"line":1767,"column":15,"offset":48506},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg","alt":null,"position":{"start":{"line":1769,"column":1,"offset":48508},"end":{"line":1769,"column":66,"offset":48573},"indent":[]}}],"position":{"start":{"line":1769,"column":1,"offset":48508},"end":{"line":1769,"column":66,"offset":48573},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1771,"column":3,"offset":48577},"end":{"line":1771,"column":9,"offset":48583},"indent":[]}}],"position":{"start":{"line":1771,"column":1,"offset":48575},"end":{"line":1771,"column":11,"offset":48585},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1771,"column":11,"offset":48585},"end":{"line":1771,"column":19,"offset":48593},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1771,"column":19,"offset":48593},"end":{"line":1771,"column":21,"offset":48595},"indent":[]}},{"type":"text","value":"3,9,20,null,null,15,7]\n","position":{"start":{"line":1771,"column":21,"offset":48595},"end":{"line":1772,"column":1,"offset":48618},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1772,"column":3,"offset":48620},"end":{"line":1772,"column":10,"offset":48627},"indent":[]}}],"position":{"start":{"line":1772,"column":1,"offset":48618},"end":{"line":1772,"column":12,"offset":48629},"indent":[]}},{"type":"text","value":" true","position":{"start":{"line":1772,"column":12,"offset":48629},"end":{"line":1772,"column":17,"offset":48634},"indent":[]}}],"position":{"start":{"line":1771,"column":1,"offset":48575},"end":{"line":1772,"column":17,"offset":48634},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1774,"column":3,"offset":48638},"end":{"line":1774,"column":13,"offset":48648},"indent":[]}}],"position":{"start":{"line":1774,"column":1,"offset":48636},"end":{"line":1774,"column":15,"offset":48650},"indent":[]}}],"position":{"start":{"line":1774,"column":1,"offset":48636},"end":{"line":1774,"column":15,"offset":48650},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg","alt":null,"position":{"start":{"line":1776,"column":1,"offset":48652},"end":{"line":1776,"column":66,"offset":48717},"indent":[]}}],"position":{"start":{"line":1776,"column":1,"offset":48652},"end":{"line":1776,"column":66,"offset":48717},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1778,"column":3,"offset":48721},"end":{"line":1778,"column":9,"offset":48727},"indent":[]}}],"position":{"start":{"line":1778,"column":1,"offset":48719},"end":{"line":1778,"column":11,"offset":48729},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1778,"column":11,"offset":48729},"end":{"line":1778,"column":19,"offset":48737},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1778,"column":19,"offset":48737},"end":{"line":1778,"column":21,"offset":48739},"indent":[]}},{"type":"text","value":"1,2,2,3,3,null,null,4,4]\n","position":{"start":{"line":1778,"column":21,"offset":48739},"end":{"line":1779,"column":1,"offset":48764},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1779,"column":3,"offset":48766},"end":{"line":1779,"column":10,"offset":48773},"indent":[]}}],"position":{"start":{"line":1779,"column":1,"offset":48764},"end":{"line":1779,"column":12,"offset":48775},"indent":[]}},{"type":"text","value":" false","position":{"start":{"line":1779,"column":12,"offset":48775},"end":{"line":1779,"column":18,"offset":48781},"indent":[]}}],"position":{"start":{"line":1778,"column":1,"offset":48719},"end":{"line":1779,"column":18,"offset":48781},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1781,"column":3,"offset":48785},"end":{"line":1781,"column":13,"offset":48795},"indent":[]}}],"position":{"start":{"line":1781,"column":1,"offset":48783},"end":{"line":1781,"column":15,"offset":48797},"indent":[]}}],"position":{"start":{"line":1781,"column":1,"offset":48783},"end":{"line":1781,"column":15,"offset":48797},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1783,"column":3,"offset":48801},"end":{"line":1783,"column":9,"offset":48807},"indent":[]}}],"position":{"start":{"line":1783,"column":1,"offset":48799},"end":{"line":1783,"column":11,"offset":48809},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1783,"column":11,"offset":48809},"end":{"line":1783,"column":19,"offset":48817},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1783,"column":19,"offset":48817},"end":{"line":1783,"column":21,"offset":48819},"indent":[]}},{"type":"text","value":"]\n","position":{"start":{"line":1783,"column":21,"offset":48819},"end":{"line":1784,"column":1,"offset":48821},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1784,"column":3,"offset":48823},"end":{"line":1784,"column":10,"offset":48830},"indent":[]}}],"position":{"start":{"line":1784,"column":1,"offset":48821},"end":{"line":1784,"column":12,"offset":48832},"indent":[]}},{"type":"text","value":" true","position":{"start":{"line":1784,"column":12,"offset":48832},"end":{"line":1784,"column":17,"offset":48837},"indent":[]}}],"position":{"start":{"line":1783,"column":1,"offset":48799},"end":{"line":1784,"column":17,"offset":48837},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1786,"column":3,"offset":48841},"end":{"line":1786,"column":15,"offset":48853},"indent":[]}}],"position":{"start":{"line":1786,"column":1,"offset":48839},"end":{"line":1786,"column":17,"offset":48855},"indent":[]}}],"position":{"start":{"line":1786,"column":1,"offset":48839},"end":{"line":1786,"column":17,"offset":48855},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1788,"column":3,"offset":48859},"end":{"line":1788,"column":51,"offset":48907},"indent":[]}},{"type":"inlineCode","value":"[0, 5000]","position":{"start":{"line":1788,"column":51,"offset":48907},"end":{"line":1788,"column":62,"offset":48918},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1788,"column":62,"offset":48918},"end":{"line":1788,"column":63,"offset":48919},"indent":[]}}],"position":{"start":{"line":1788,"column":3,"offset":48859},"end":{"line":1788,"column":63,"offset":48919},"indent":[]}}],"position":{"start":{"line":1788,"column":1,"offset":48857},"end":{"line":1788,"column":63,"offset":48919},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-104 <= Node.val <= 104","position":{"start":{"line":1789,"column":3,"offset":48922},"end":{"line":1789,"column":28,"offset":48947},"indent":[]}}],"position":{"start":{"line":1789,"column":3,"offset":48922},"end":{"line":1789,"column":28,"offset":48947},"indent":[]}}],"position":{"start":{"line":1789,"column":1,"offset":48920},"end":{"line":1789,"column":28,"offset":48947},"indent":[]}}],"position":{"start":{"line":1788,"column":1,"offset":48857},"end":{"line":1789,"column":28,"offset":48947},"indent":[1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/balanced-binary-tree/","children":[{"type":"text","value":"Source","position":{"start":{"line":1791,"column":2,"offset":48950},"end":{"line":1791,"column":8,"offset":48956},"indent":[]}}],"position":{"start":{"line":1791,"column":1,"offset":48949},"end":{"line":1791,"column":62,"offset":49010},"indent":[]}},{"type":"text","value":"# Convert Sorted Array to Binary Search Tree","position":{"start":{"line":1791,"column":62,"offset":49010},"end":{"line":1791,"column":106,"offset":49054},"indent":[]}}],"position":{"start":{"line":1791,"column":1,"offset":48949},"end":{"line":1791,"column":106,"offset":49054},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1793,"column":3,"offset":49058},"end":{"line":1793,"column":144,"offset":49199},"indent":[]}}],"position":{"start":{"line":1793,"column":3,"offset":49058},"end":{"line":1793,"column":144,"offset":49199},"indent":[]}}],"position":{"start":{"line":1793,"column":1,"offset":49056},"end":{"line":1793,"column":144,"offset":49199},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given an array where elements are sorted in ascending order, convert it to a height balanced BST.","position":{"start":{"line":1795,"column":1,"offset":49201},"end":{"line":1795,"column":98,"offset":49298},"indent":[]}}],"position":{"start":{"line":1795,"column":1,"offset":49201},"end":{"line":1795,"column":98,"offset":49298},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of ","position":{"start":{"line":1797,"column":1,"offset":49300},"end":{"line":1797,"column":119,"offset":49418},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"every","position":{"start":{"line":1797,"column":120,"offset":49419},"end":{"line":1797,"column":125,"offset":49424},"indent":[]}}],"position":{"start":{"line":1797,"column":119,"offset":49418},"end":{"line":1797,"column":126,"offset":49425},"indent":[]}},{"type":"text","value":" node never differ by more than 1.","position":{"start":{"line":1797,"column":126,"offset":49425},"end":{"line":1797,"column":160,"offset":49459},"indent":[]}}],"position":{"start":{"line":1797,"column":1,"offset":49300},"end":{"line":1797,"column":160,"offset":49459},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1799,"column":3,"offset":49463},"end":{"line":1799,"column":11,"offset":49471},"indent":[]}}],"position":{"start":{"line":1799,"column":1,"offset":49461},"end":{"line":1799,"column":13,"offset":49473},"indent":[]}}],"position":{"start":{"line":1799,"column":1,"offset":49461},"end":{"line":1799,"column":13,"offset":49473},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the sorted array: ","position":{"start":{"line":1801,"column":1,"offset":49475},"end":{"line":1801,"column":25,"offset":49499},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1801,"column":25,"offset":49499},"end":{"line":1801,"column":27,"offset":49501},"indent":[]}},{"type":"text","value":"-10,-3,0,5,9],","position":{"start":{"line":1801,"column":27,"offset":49501},"end":{"line":1801,"column":41,"offset":49515},"indent":[]}}],"position":{"start":{"line":1801,"column":1,"offset":49475},"end":{"line":1801,"column":41,"offset":49515},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One possible answer is: ","position":{"start":{"line":1803,"column":1,"offset":49517},"end":{"line":1803,"column":25,"offset":49541},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1803,"column":25,"offset":49541},"end":{"line":1803,"column":27,"offset":49543},"indent":[]}},{"type":"text","value":"0,-3,9,-10,null,5], which represents the following height balanced BST:","position":{"start":{"line":1803,"column":27,"offset":49543},"end":{"line":1803,"column":98,"offset":49614},"indent":[]}}],"position":{"start":{"line":1803,"column":1,"offset":49517},"end":{"line":1803,"column":98,"offset":49614},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"  0\n / \\\\","position":{"start":{"line":1805,"column":1,"offset":49616},"end":{"line":1806,"column":10,"offset":49633},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":1808,"column":1,"offset":49635},"end":{"line":1808,"column":3,"offset":49637},"indent":[]}},{"type":"text","value":"3 9\n/ /\n","position":{"start":{"line":1808,"column":3,"offset":49637},"end":{"line":1810,"column":1,"offset":49645},"indent":[1,1]}},{"type":"text","value":"-","position":{"start":{"line":1810,"column":1,"offset":49645},"end":{"line":1810,"column":3,"offset":49647},"indent":[]}},{"type":"text","value":"10 5","position":{"start":{"line":1810,"column":3,"offset":49647},"end":{"line":1810,"column":7,"offset":49651},"indent":[]}}],"position":{"start":{"line":1808,"column":1,"offset":49635},"end":{"line":1810,"column":7,"offset":49651},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/","children":[{"type":"text","value":"Source","position":{"start":{"line":1812,"column":2,"offset":49654},"end":{"line":1812,"column":8,"offset":49660},"indent":[]}}],"position":{"start":{"line":1812,"column":1,"offset":49653},"end":{"line":1812,"column":84,"offset":49736},"indent":[]}},{"type":"text","value":"# Delete Node in a BST","position":{"start":{"line":1812,"column":84,"offset":49736},"end":{"line":1812,"column":106,"offset":49758},"indent":[]}}],"position":{"start":{"line":1812,"column":1,"offset":49653},"end":{"line":1812,"column":106,"offset":49758},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1814,"column":3,"offset":49762},"end":{"line":1814,"column":144,"offset":49903},"indent":[]}}],"position":{"start":{"line":1814,"column":3,"offset":49762},"end":{"line":1814,"column":144,"offset":49903},"indent":[]}}],"position":{"start":{"line":1814,"column":1,"offset":49760},"end":{"line":1814,"column":144,"offset":49903},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.","position":{"start":{"line":1816,"column":1,"offset":49905},"end":{"line":1816,"column":157,"offset":50061},"indent":[]}}],"position":{"start":{"line":1816,"column":1,"offset":49905},"end":{"line":1816,"column":157,"offset":50061},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Basically, the deletion can be divided into two stages:","position":{"start":{"line":1818,"column":1,"offset":50063},"end":{"line":1818,"column":56,"offset":50118},"indent":[]}}],"position":{"start":{"line":1818,"column":1,"offset":50063},"end":{"line":1818,"column":56,"offset":50118},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Search for a node to remove.","position":{"start":{"line":1820,"column":5,"offset":50124},"end":{"line":1820,"column":33,"offset":50152},"indent":[]}}],"position":{"start":{"line":1820,"column":5,"offset":50124},"end":{"line":1820,"column":33,"offset":50152},"indent":[]}}],"position":{"start":{"line":1820,"column":1,"offset":50120},"end":{"line":1820,"column":33,"offset":50152},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If the node is found, delete the node.","position":{"start":{"line":1821,"column":5,"offset":50157},"end":{"line":1821,"column":43,"offset":50195},"indent":[]}}],"position":{"start":{"line":1821,"column":5,"offset":50157},"end":{"line":1821,"column":43,"offset":50195},"indent":[]}}],"position":{"start":{"line":1821,"column":1,"offset":50153},"end":{"line":1821,"column":43,"offset":50195},"indent":[]}}],"position":{"start":{"line":1820,"column":1,"offset":50120},"end":{"line":1821,"column":43,"offset":50195},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Follow up:","position":{"start":{"line":1823,"column":3,"offset":50199},"end":{"line":1823,"column":13,"offset":50209},"indent":[]}}],"position":{"start":{"line":1823,"column":1,"offset":50197},"end":{"line":1823,"column":15,"offset":50211},"indent":[]}},{"type":"text","value":" Can you solve it with time complexity ","position":{"start":{"line":1823,"column":15,"offset":50211},"end":{"line":1823,"column":54,"offset":50250},"indent":[]}},{"type":"inlineCode","value":"O(height of tree)","position":{"start":{"line":1823,"column":54,"offset":50250},"end":{"line":1823,"column":73,"offset":50269},"indent":[]}},{"type":"text","value":"?","position":{"start":{"line":1823,"column":73,"offset":50269},"end":{"line":1823,"column":74,"offset":50270},"indent":[]}}],"position":{"start":{"line":1823,"column":1,"offset":50197},"end":{"line":1823,"column":74,"offset":50270},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1825,"column":3,"offset":50274},"end":{"line":1825,"column":13,"offset":50284},"indent":[]}}],"position":{"start":{"line":1825,"column":1,"offset":50272},"end":{"line":1825,"column":15,"offset":50286},"indent":[]}}],"position":{"start":{"line":1825,"column":1,"offset":50272},"end":{"line":1825,"column":15,"offset":50286},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg","alt":null,"position":{"start":{"line":1827,"column":1,"offset":50288},"end":{"line":1827,"column":67,"offset":50354},"indent":[]}}],"position":{"start":{"line":1827,"column":1,"offset":50288},"end":{"line":1827,"column":67,"offset":50354},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1829,"column":3,"offset":50358},"end":{"line":1829,"column":9,"offset":50364},"indent":[]}}],"position":{"start":{"line":1829,"column":1,"offset":50356},"end":{"line":1829,"column":11,"offset":50366},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1829,"column":11,"offset":50366},"end":{"line":1829,"column":19,"offset":50374},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1829,"column":19,"offset":50374},"end":{"line":1829,"column":21,"offset":50376},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7], key = 3\n","position":{"start":{"line":1829,"column":21,"offset":50376},"end":{"line":1830,"column":1,"offset":50403},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1830,"column":3,"offset":50405},"end":{"line":1830,"column":10,"offset":50412},"indent":[]}}],"position":{"start":{"line":1830,"column":1,"offset":50403},"end":{"line":1830,"column":12,"offset":50414},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1830,"column":12,"offset":50414},"end":{"line":1830,"column":13,"offset":50415},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1830,"column":13,"offset":50415},"end":{"line":1830,"column":15,"offset":50417},"indent":[]}},{"type":"text","value":"5,4,6,2,null,null,7]\n","position":{"start":{"line":1830,"column":15,"offset":50417},"end":{"line":1831,"column":1,"offset":50438},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1831,"column":3,"offset":50440},"end":{"line":1831,"column":15,"offset":50452},"indent":[]}}],"position":{"start":{"line":1831,"column":1,"offset":50438},"end":{"line":1831,"column":17,"offset":50454},"indent":[]}},{"type":"text","value":" Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is ","position":{"start":{"line":1831,"column":17,"offset":50454},"end":{"line":1832,"column":21,"offset":50549},"indent":[1]}},{"type":"text","value":"[","position":{"start":{"line":1832,"column":21,"offset":50549},"end":{"line":1832,"column":23,"offset":50551},"indent":[]}},{"type":"text","value":"5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is ","position":{"start":{"line":1832,"column":23,"offset":50551},"end":{"line":1833,"column":44,"offset":50640},"indent":[1]}},{"type":"text","value":"[","position":{"start":{"line":1833,"column":44,"offset":50640},"end":{"line":1833,"column":46,"offset":50642},"indent":[]}},{"type":"text","value":"5,2,6,null,4,null,7] and it's also accepted.\n","position":{"start":{"line":1833,"column":46,"offset":50642},"end":{"line":1834,"column":1,"offset":50687},"indent":[1]}},{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg","alt":null,"position":{"start":{"line":1834,"column":1,"offset":50687},"end":{"line":1834,"column":70,"offset":50756},"indent":[]}}],"position":{"start":{"line":1829,"column":1,"offset":50356},"end":{"line":1834,"column":70,"offset":50756},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1836,"column":3,"offset":50760},"end":{"line":1836,"column":13,"offset":50770},"indent":[]}}],"position":{"start":{"line":1836,"column":1,"offset":50758},"end":{"line":1836,"column":15,"offset":50772},"indent":[]}}],"position":{"start":{"line":1836,"column":1,"offset":50758},"end":{"line":1836,"column":15,"offset":50772},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1838,"column":3,"offset":50776},"end":{"line":1838,"column":9,"offset":50782},"indent":[]}}],"position":{"start":{"line":1838,"column":1,"offset":50774},"end":{"line":1838,"column":11,"offset":50784},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1838,"column":11,"offset":50784},"end":{"line":1838,"column":19,"offset":50792},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1838,"column":19,"offset":50792},"end":{"line":1838,"column":21,"offset":50794},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7], key = 0\n","position":{"start":{"line":1838,"column":21,"offset":50794},"end":{"line":1839,"column":1,"offset":50821},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1839,"column":3,"offset":50823},"end":{"line":1839,"column":10,"offset":50830},"indent":[]}}],"position":{"start":{"line":1839,"column":1,"offset":50821},"end":{"line":1839,"column":12,"offset":50832},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1839,"column":12,"offset":50832},"end":{"line":1839,"column":13,"offset":50833},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1839,"column":13,"offset":50833},"end":{"line":1839,"column":15,"offset":50835},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7]\n","position":{"start":{"line":1839,"column":15,"offset":50835},"end":{"line":1840,"column":1,"offset":50853},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1840,"column":3,"offset":50855},"end":{"line":1840,"column":15,"offset":50867},"indent":[]}}],"position":{"start":{"line":1840,"column":1,"offset":50853},"end":{"line":1840,"column":17,"offset":50869},"indent":[]}},{"type":"text","value":" The tree does not contain a node with value = 0.","position":{"start":{"line":1840,"column":17,"offset":50869},"end":{"line":1840,"column":66,"offset":50918},"indent":[]}}],"position":{"start":{"line":1838,"column":1,"offset":50774},"end":{"line":1840,"column":66,"offset":50918},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1842,"column":3,"offset":50922},"end":{"line":1842,"column":13,"offset":50932},"indent":[]}}],"position":{"start":{"line":1842,"column":1,"offset":50920},"end":{"line":1842,"column":15,"offset":50934},"indent":[]}}],"position":{"start":{"line":1842,"column":1,"offset":50920},"end":{"line":1842,"column":15,"offset":50934},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1844,"column":3,"offset":50938},"end":{"line":1844,"column":9,"offset":50944},"indent":[]}}],"position":{"start":{"line":1844,"column":1,"offset":50936},"end":{"line":1844,"column":11,"offset":50946},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1844,"column":11,"offset":50946},"end":{"line":1844,"column":19,"offset":50954},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1844,"column":19,"offset":50954},"end":{"line":1844,"column":21,"offset":50956},"indent":[]}},{"type":"text","value":"], key = 0\n","position":{"start":{"line":1844,"column":21,"offset":50956},"end":{"line":1845,"column":1,"offset":50967},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1845,"column":3,"offset":50969},"end":{"line":1845,"column":10,"offset":50976},"indent":[]}}],"position":{"start":{"line":1845,"column":1,"offset":50967},"end":{"line":1845,"column":12,"offset":50978},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1845,"column":12,"offset":50978},"end":{"line":1845,"column":13,"offset":50979},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1845,"column":13,"offset":50979},"end":{"line":1845,"column":15,"offset":50981},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1845,"column":15,"offset":50981},"end":{"line":1845,"column":16,"offset":50982},"indent":[]}}],"position":{"start":{"line":1844,"column":1,"offset":50936},"end":{"line":1845,"column":16,"offset":50982},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1847,"column":3,"offset":50986},"end":{"line":1847,"column":15,"offset":50998},"indent":[]}}],"position":{"start":{"line":1847,"column":1,"offset":50984},"end":{"line":1847,"column":17,"offset":51000},"indent":[]}}],"position":{"start":{"line":1847,"column":1,"offset":50984},"end":{"line":1847,"column":17,"offset":51000},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1849,"column":3,"offset":51004},"end":{"line":1849,"column":51,"offset":51052},"indent":[]}},{"type":"inlineCode","value":"[0, 104]","position":{"start":{"line":1849,"column":51,"offset":51052},"end":{"line":1849,"column":61,"offset":51062},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1849,"column":61,"offset":51062},"end":{"line":1849,"column":62,"offset":51063},"indent":[]}}],"position":{"start":{"line":1849,"column":3,"offset":51004},"end":{"line":1849,"column":62,"offset":51063},"indent":[]}}],"position":{"start":{"line":1849,"column":1,"offset":51002},"end":{"line":1849,"column":62,"offset":51063},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-105 <= Node.val <= 105","position":{"start":{"line":1850,"column":3,"offset":51066},"end":{"line":1850,"column":28,"offset":51091},"indent":[]}}],"position":{"start":{"line":1850,"column":3,"offset":51066},"end":{"line":1850,"column":28,"offset":51091},"indent":[]}}],"position":{"start":{"line":1850,"column":1,"offset":51064},"end":{"line":1850,"column":28,"offset":51091},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each node has a ","position":{"start":{"line":1851,"column":3,"offset":51094},"end":{"line":1851,"column":19,"offset":51110},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"unique","position":{"start":{"line":1851,"column":21,"offset":51112},"end":{"line":1851,"column":27,"offset":51118},"indent":[]}}],"position":{"start":{"line":1851,"column":19,"offset":51110},"end":{"line":1851,"column":29,"offset":51120},"indent":[]}},{"type":"text","value":" value.","position":{"start":{"line":1851,"column":29,"offset":51120},"end":{"line":1851,"column":36,"offset":51127},"indent":[]}}],"position":{"start":{"line":1851,"column":3,"offset":51094},"end":{"line":1851,"column":36,"offset":51127},"indent":[]}}],"position":{"start":{"line":1851,"column":1,"offset":51092},"end":{"line":1851,"column":36,"offset":51127},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"root","position":{"start":{"line":1852,"column":3,"offset":51130},"end":{"line":1852,"column":9,"offset":51136},"indent":[]}},{"type":"text","value":" is a valid binary search tree.","position":{"start":{"line":1852,"column":9,"offset":51136},"end":{"line":1852,"column":40,"offset":51167},"indent":[]}}],"position":{"start":{"line":1852,"column":3,"offset":51130},"end":{"line":1852,"column":40,"offset":51167},"indent":[]}}],"position":{"start":{"line":1852,"column":1,"offset":51128},"end":{"line":1852,"column":40,"offset":51167},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-105 <= key <= 105","position":{"start":{"line":1853,"column":3,"offset":51170},"end":{"line":1853,"column":23,"offset":51190},"indent":[]}}],"position":{"start":{"line":1853,"column":3,"offset":51170},"end":{"line":1853,"column":23,"offset":51190},"indent":[]}}],"position":{"start":{"line":1853,"column":1,"offset":51168},"end":{"line":1853,"column":23,"offset":51190},"indent":[]}}],"position":{"start":{"line":1849,"column":1,"offset":51002},"end":{"line":1853,"column":23,"offset":51190},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/delete-node-in-a-bst/","children":[{"type":"text","value":"Source","position":{"start":{"line":1855,"column":2,"offset":51193},"end":{"line":1855,"column":8,"offset":51199},"indent":[]}}],"position":{"start":{"line":1855,"column":1,"offset":51192},"end":{"line":1855,"column":62,"offset":51253},"indent":[]}},{"type":"image","title":"meeting-room-ii","url":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-0.jpg","alt":"alt text","position":{"start":{"line":1855,"column":62,"offset":51253},"end":{"line":1855,"column":173,"offset":51364},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":1855,"column":173,"offset":51364},"end":{"line":1856,"column":1,"offset":51365},"indent":[1]}},{"type":"image","title":"meeting-room-ii","url":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-1.jpg","alt":"alt text","position":{"start":{"line":1856,"column":1,"offset":51365},"end":{"line":1856,"column":112,"offset":51476},"indent":[]}}],"position":{"start":{"line":1855,"column":1,"offset":51192},"end":{"line":1856,"column":112,"offset":51476},"indent":[1]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[][]} intervals\n * @return {number}\n */\nconst minMeetingRooms = function (intervals) {\n    const len = intervals.length;\n    const starts = new Array(len);\n    const ends = new Array(len);\n    for (let i = 0; i < len; i++) {\n        starts[i] = intervals[i][0];\n        ends[i] = intervals[i][1];\n    }\n    starts.sort((a, b) => a - b);\n    ends.sort((a, b) => a - b);\n    let rooms = 0;\n    let endsIdx = 0;\n    for (let i = 0; i < len; i++) {\n        if (starts[i] < ends[endsIdx]) rooms++;\n        else endsIdx++;\n    }\n    return rooms;\n};","position":{"start":{"line":1858,"column":1,"offset":51478},"end":{"line":1881,"column":4,"offset":52052},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1883,"column":2,"offset":52055},"end":{"line":1883,"column":142,"offset":52195},"indent":[]}}],"position":{"start":{"line":1883,"column":1,"offset":52054},"end":{"line":1883,"column":147,"offset":52200},"indent":[]}}],"position":{"start":{"line":1883,"column":1,"offset":52054},"end":{"line":1883,"column":147,"offset":52200},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1884,"column":1,"offset":52201}}}}