{"expireTime":9007200907909664000,"key":"transformer-remark-markdown-ast-1be603bff3630b268f3c3770f77cd429--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Archives:","position":{"start":{"line":3,"column":3,"offset":4},"end":{"line":3,"column":12,"offset":13},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":12,"offset":13},"indent":[]}},{"type":"html","value":"<br>\n<br>\n<br>\n<br>","position":{"start":{"line":5,"column":1,"offset":15},"end":{"line":8,"column":5,"offset":34},"indent":[1,1,1]}},{"type":"html","value":"<h1> Text Tools     </h1>\n<br>","position":{"start":{"line":10,"column":1,"offset":36},"end":{"line":11,"column":5,"offset":66},"indent":[1]}},{"type":"html","value":"<iframe sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"    src=\"https://devtools42.netlify.app/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" ></iframe>","position":{"start":{"line":13,"column":1,"offset":68},"end":{"line":13,"column":244,"offset":311},"indent":[]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":15,"column":1,"offset":313},"end":{"line":16,"column":5,"offset":322},"indent":[1]}},{"type":"html","value":"<br>\n<br>\n<br>\n<br>","position":{"start":{"line":19,"column":1,"offset":325},"end":{"line":22,"column":5,"offset":344},"indent":[1,1,1]}},{"type":"html","value":"<br>\n<br>\n<br>","position":{"start":{"line":25,"column":1,"offset":347},"end":{"line":27,"column":5,"offset":361},"indent":[1,1]}},{"type":"html","value":"<h1> Ternary Converter   </h1>\n<br>\n<iframe sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"    src=\"https://ternary42.netlify.app/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" ></iframe>","position":{"start":{"line":29,"column":1,"offset":363},"end":{"line":31,"column":243,"offset":641},"indent":[1,1]}},{"type":"table","align":[null,null,null,null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"---","position":{"start":{"line":33,"column":3,"offset":645},"end":{"line":33,"column":6,"offset":648},"indent":[]}}],"position":{"start":{"line":33,"column":3,"offset":645},"end":{"line":33,"column":234,"offset":876},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"---","position":{"start":{"line":33,"column":237,"offset":879},"end":{"line":33,"column":240,"offset":882},"indent":[]}}],"position":{"start":{"line":33,"column":237,"offset":879},"end":{"line":33,"column":446,"offset":1088},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"---","position":{"start":{"line":33,"column":449,"offset":1091},"end":{"line":33,"column":452,"offset":1094},"indent":[]}}],"position":{"start":{"line":33,"column":449,"offset":1091},"end":{"line":33,"column":662,"offset":1304},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"---","position":{"start":{"line":33,"column":665,"offset":1307},"end":{"line":33,"column":668,"offset":1310},"indent":[]}}],"position":{"start":{"line":33,"column":665,"offset":1307},"end":{"line":33,"column":1041,"offset":1683},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"---","position":{"start":{"line":33,"column":1044,"offset":1686},"end":{"line":33,"column":1047,"offset":1689},"indent":[]}}],"position":{"start":{"line":33,"column":1044,"offset":1686},"end":{"line":33,"column":1250,"offset":1892},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":643},"end":{"line":33,"column":1252,"offset":1894},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"leonardomso/33-js-concepts","position":{"start":{"line":35,"column":3,"offset":3173},"end":{"line":35,"column":29,"offset":3199},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a…","position":{"start":{"line":35,"column":30,"offset":3200},"end":{"line":35,"column":148,"offset":3318},"indent":[]}}],"position":{"start":{"line":35,"column":29,"offset":3199},"end":{"line":35,"column":149,"offset":3319},"indent":[]}},{"type":"text","value":"github.com","position":{"start":{"line":35,"column":149,"offset":3319},"end":{"line":35,"column":159,"offset":3329},"indent":[]}}],"position":{"start":{"line":35,"column":3,"offset":3173},"end":{"line":35,"column":239,"offset":3409},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Call stack - MDN Web Docs Glossary: Definitions of Web-related terms MDN","position":{"start":{"line":35,"column":242,"offset":3412},"end":{"line":35,"column":314,"offset":3484},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"A call stack is a mechanism for an interpreter (like the JavaScript interpreter in a web browser) to keep track of its…","position":{"start":{"line":35,"column":315,"offset":3485},"end":{"line":35,"column":434,"offset":3604},"indent":[]}}],"position":{"start":{"line":35,"column":314,"offset":3484},"end":{"line":35,"column":435,"offset":3605},"indent":[]}},{"type":"text","value":"developer.mozilla.org","position":{"start":{"line":35,"column":435,"offset":3605},"end":{"line":35,"column":456,"offset":3626},"indent":[]}}],"position":{"start":{"line":35,"column":242,"offset":3412},"end":{"line":35,"column":456,"offset":3626},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Understanding Javascript Function Executions — Call Stack, Event Loop , Tasks & more","position":{"start":{"line":35,"column":459,"offset":3629},"end":{"line":35,"column":543,"offset":3713},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Web developers or Front end engineers, as that's what we like to be called, nowadays do everything right from acting as…","position":{"start":{"line":35,"column":544,"offset":3714},"end":{"line":35,"column":664,"offset":3834},"indent":[]}}],"position":{"start":{"line":35,"column":543,"offset":3713},"end":{"line":35,"column":665,"offset":3835},"indent":[]}},{"type":"text","value":"medium.com","position":{"start":{"line":35,"column":665,"offset":3835},"end":{"line":35,"column":675,"offset":3845},"indent":[]}}],"position":{"start":{"line":35,"column":459,"offset":3629},"end":{"line":35,"column":677,"offset":3847},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Understanding the JavaScript call stack","position":{"start":{"line":35,"column":680,"offset":3850},"end":{"line":35,"column":719,"offset":3889},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"The JavaScript engine (which is found in a hosting environment like the browser), is a single-threaded interpreter…","position":{"start":{"line":35,"column":720,"offset":3890},"end":{"line":35,"column":835,"offset":4005},"indent":[]}}],"position":{"start":{"line":35,"column":719,"offset":3889},"end":{"line":35,"column":836,"offset":4006},"indent":[]}},{"type":"text","value":"medium.freecodecamp.org Javascript: What Is The Execution Context? What Is The Call Stack?","position":{"start":{"line":35,"column":836,"offset":4006},"end":{"line":35,"column":926,"offset":4096},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"What is the Execution Context in Javascript? I bet you don't know the answer. What are the most basic components of a…","position":{"start":{"line":35,"column":927,"offset":4097},"end":{"line":35,"column":1045,"offset":4215},"indent":[]}}],"position":{"start":{"line":35,"column":926,"offset":4096},"end":{"line":35,"column":1046,"offset":4216},"indent":[]}},{"type":"text","value":"web.archive.org","position":{"start":{"line":35,"column":1046,"offset":4216},"end":{"line":35,"column":1061,"offset":4231},"indent":[]}}],"position":{"start":{"line":35,"column":680,"offset":3850},"end":{"line":35,"column":1061,"offset":4231},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Understanding Execution Context and Execution Stack in Javascript","position":{"start":{"line":35,"column":1064,"offset":4234},"end":{"line":35,"column":1129,"offset":4299},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Understanding execution context and stack to become a better Javascript developer.","position":{"start":{"line":35,"column":1130,"offset":4300},"end":{"line":35,"column":1212,"offset":4382},"indent":[]}}],"position":{"start":{"line":35,"column":1129,"offset":4299},"end":{"line":35,"column":1213,"offset":4383},"indent":[]}},{"type":"text","value":"blog.bitsrc.io","position":{"start":{"line":35,"column":1213,"offset":4383},"end":{"line":35,"column":1227,"offset":4397},"indent":[]}}],"position":{"start":{"line":35,"column":1064,"offset":4234},"end":{"line":35,"column":1275,"offset":4445},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":3171},"end":{"line":35,"column":1277,"offset":4447},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"JavaScript data types and data structures - JavaScript MDN","position":{"start":{"line":36,"column":3,"offset":4450},"end":{"line":36,"column":61,"offset":4508},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Programming languages all have built-in data structures, but these often differ from one language to another. This…","position":{"start":{"line":36,"column":62,"offset":4509},"end":{"line":36,"column":177,"offset":4624},"indent":[]}}],"position":{"start":{"line":36,"column":61,"offset":4508},"end":{"line":36,"column":178,"offset":4625},"indent":[]}},{"type":"text","value":"developer.mozilla.org","position":{"start":{"line":36,"column":178,"offset":4625},"end":{"line":36,"column":199,"offset":4646},"indent":[]}}],"position":{"start":{"line":36,"column":3,"offset":4450},"end":{"line":36,"column":239,"offset":4686},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"How numbers are encoded in JavaScript","position":{"start":{"line":36,"column":242,"offset":4689},"end":{"line":36,"column":279,"offset":4726},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Edit description","position":{"start":{"line":36,"column":280,"offset":4727},"end":{"line":36,"column":296,"offset":4743},"indent":[]}}],"position":{"start":{"line":36,"column":279,"offset":4726},"end":{"line":36,"column":297,"offset":4744},"indent":[]}},{"type":"text","value":"2ality.com","position":{"start":{"line":36,"column":297,"offset":4744},"end":{"line":36,"column":307,"offset":4754},"indent":[]}}],"position":{"start":{"line":36,"column":242,"offset":4689},"end":{"line":36,"column":456,"offset":4903},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Here is what you need to know about JavaScript's Number type","position":{"start":{"line":36,"column":459,"offset":4906},"end":{"line":36,"column":519,"offset":4966},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Why 0.1+0.2 IS NOT equal to 0.3 and 9007199254740992 IS equal to 9007199254740993","position":{"start":{"line":36,"column":520,"offset":4967},"end":{"line":36,"column":601,"offset":5048},"indent":[]}}],"position":{"start":{"line":36,"column":519,"offset":4966},"end":{"line":36,"column":602,"offset":5049},"indent":[]}},{"type":"text","value":"medium.com","position":{"start":{"line":36,"column":602,"offset":5049},"end":{"line":36,"column":612,"offset":5059},"indent":[]}}],"position":{"start":{"line":36,"column":459,"offset":4906},"end":{"line":36,"column":677,"offset":5124},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"What Every JavaScript Developer Should Know About Floating Point Numbers","position":{"start":{"line":36,"column":680,"offset":5127},"end":{"line":36,"column":752,"offset":5199},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"After I gave my talk on JavaScript (really, I was there trying to shamelessly plug my book - Underhanded JavaScript and…","position":{"start":{"line":36,"column":753,"offset":5200},"end":{"line":36,"column":873,"offset":5320},"indent":[]}}],"position":{"start":{"line":36,"column":752,"offset":5199},"end":{"line":36,"column":874,"offset":5321},"indent":[]}},{"type":"text","value":"blog.chewxy.com","position":{"start":{"line":36,"column":874,"offset":5321},"end":{"line":36,"column":889,"offset":5336},"indent":[]}}],"position":{"start":{"line":36,"column":680,"offset":5127},"end":{"line":36,"column":1061,"offset":5508},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"The Secret Life of JavaScript Primitives","position":{"start":{"line":36,"column":1064,"offset":5511},"end":{"line":36,"column":1104,"offset":5551},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"You may not know it but, in JavaScript, whenever you interact with string, number or boolean primitives you enter a…","position":{"start":{"line":36,"column":1105,"offset":5552},"end":{"line":36,"column":1221,"offset":5668},"indent":[]}}],"position":{"start":{"line":36,"column":1104,"offset":5551},"end":{"line":36,"column":1222,"offset":5669},"indent":[]}},{"type":"text","value":"javascriptweblog.wordpress.com","position":{"start":{"line":36,"column":1222,"offset":5669},"end":{"line":36,"column":1252,"offset":5699},"indent":[]}}],"position":{"start":{"line":36,"column":1064,"offset":5511},"end":{"line":36,"column":1275,"offset":5722},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":4448},"end":{"line":36,"column":1277,"offset":5724},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"JavaScript Reference and Copy Variables Hacker Noon","position":{"start":{"line":37,"column":3,"offset":5727},"end":{"line":37,"column":54,"offset":5778},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Each programming language has its own peculiarities (and JavaScript has a lot), and today I'm going to talk about…","position":{"start":{"line":37,"column":55,"offset":5779},"end":{"line":37,"column":169,"offset":5893},"indent":[]}}],"position":{"start":{"line":37,"column":54,"offset":5778},"end":{"line":37,"column":170,"offset":5894},"indent":[]}},{"type":"text","value":"hackernoon.com","position":{"start":{"line":37,"column":170,"offset":5894},"end":{"line":37,"column":184,"offset":5908},"indent":[]}}],"position":{"start":{"line":37,"column":3,"offset":5727},"end":{"line":37,"column":239,"offset":5963},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript Primitive vs. Reference Values","position":{"start":{"line":37,"column":242,"offset":5966},"end":{"line":37,"column":283,"offset":6007},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Summary: in this tutorial, you will learn the differences between primitive and reference values. In JavaScript, a…","position":{"start":{"line":37,"column":284,"offset":6008},"end":{"line":37,"column":399,"offset":6123},"indent":[]}}],"position":{"start":{"line":37,"column":283,"offset":6007},"end":{"line":37,"column":400,"offset":6124},"indent":[]}},{"type":"text","value":"www.javascripttutorial.net","position":{"start":{"line":37,"column":400,"offset":6124},"end":{"line":37,"column":426,"offset":6150},"indent":[]}}],"position":{"start":{"line":37,"column":242,"offset":5966},"end":{"line":37,"column":456,"offset":6180},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript by reference vs. by value","position":{"start":{"line":37,"column":459,"offset":6183},"end":{"line":37,"column":495,"offset":6219},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"I'm looking for some good comprehensive reading material on when JavaScript passes something by value and when by…","position":{"start":{"line":37,"column":496,"offset":6220},"end":{"line":37,"column":610,"offset":6334},"indent":[]}}],"position":{"start":{"line":37,"column":495,"offset":6219},"end":{"line":37,"column":611,"offset":6335},"indent":[]}},{"type":"text","value":"stackoverflow.com","position":{"start":{"line":37,"column":611,"offset":6335},"end":{"line":37,"column":628,"offset":6352},"indent":[]}}],"position":{"start":{"line":37,"column":459,"offset":6183},"end":{"line":37,"column":677,"offset":6401},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript Interview Prep: Primitive vs. Reference Types","position":{"start":{"line":37,"column":680,"offset":6404},"end":{"line":37,"column":736,"offset":6460},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"original article In a JavaScript interview, they might ask if you understand the difference between primitive and…","position":{"start":{"line":37,"column":737,"offset":6461},"end":{"line":37,"column":851,"offset":6575},"indent":[]}}],"position":{"start":{"line":37,"column":736,"offset":6460},"end":{"line":37,"column":852,"offset":6576},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":37,"column":852,"offset":6576},"end":{"line":37,"column":858,"offset":6582},"indent":[]}}],"position":{"start":{"line":37,"column":680,"offset":6404},"end":{"line":37,"column":1061,"offset":6785},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"What you need to know about Javascript's Implicit Coercion","position":{"start":{"line":37,"column":1064,"offset":6788},"end":{"line":37,"column":1122,"offset":6846},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Javascript's implicit coercion simply refers to Javascript attempting to coerce an unexpected value type to the…","position":{"start":{"line":37,"column":1123,"offset":6847},"end":{"line":37,"column":1235,"offset":6959},"indent":[]}}],"position":{"start":{"line":37,"column":1122,"offset":6846},"end":{"line":37,"column":1236,"offset":6960},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":37,"column":1236,"offset":6960},"end":{"line":37,"column":1242,"offset":6966},"indent":[]}}],"position":{"start":{"line":37,"column":1064,"offset":6788},"end":{"line":37,"column":1275,"offset":6999},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":5725},"end":{"line":37,"column":1277,"offset":7001},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Javascript Coercion Explained","position":{"start":{"line":38,"column":3,"offset":7004},"end":{"line":38,"column":32,"offset":7033},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Along with some practical examples","position":{"start":{"line":38,"column":33,"offset":7034},"end":{"line":38,"column":67,"offset":7068},"indent":[]}}],"position":{"start":{"line":38,"column":32,"offset":7033},"end":{"line":38,"column":68,"offset":7069},"indent":[]}},{"type":"text","value":"hackernoon.com","position":{"start":{"line":38,"column":68,"offset":7069},"end":{"line":38,"column":82,"offset":7083},"indent":[]}}],"position":{"start":{"line":38,"column":3,"offset":7004},"end":{"line":38,"column":239,"offset":7240},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"What exactly is Type Coercion in Javascript?","position":{"start":{"line":38,"column":242,"offset":7243},"end":{"line":38,"column":286,"offset":7287},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Let's start with a short intro to type systems which I think will help you understand the general idea of type…","position":{"start":{"line":38,"column":287,"offset":7288},"end":{"line":38,"column":398,"offset":7399},"indent":[]}}],"position":{"start":{"line":38,"column":286,"offset":7287},"end":{"line":38,"column":399,"offset":7400},"indent":[]}},{"type":"text","value":"stackoverflow.com","position":{"start":{"line":38,"column":399,"offset":7400},"end":{"line":38,"column":416,"offset":7417},"indent":[]}}],"position":{"start":{"line":38,"column":242,"offset":7243},"end":{"line":38,"column":456,"offset":7457},"indent":[]}},{"type":"tableCell","children":[{"type":"link","title":null,"url":"https://thedevs.network/*Weak","children":[{"type":"text","value":"https://thedevs.network/*Weak","position":{"start":{"line":38,"column":459,"offset":7460},"end":{"line":38,"column":488,"offset":7489},"indent":[]}}],"position":{"start":{"line":38,"column":459,"offset":7460},"end":{"line":38,"column":488,"offset":7489},"indent":[]}},{"type":"text","value":" dynamic typing is arguably one of those things everybody likes to pick at about JavaScript. For an elegant dynamic…","position":{"start":{"line":38,"column":488,"offset":7489},"end":{"line":38,"column":604,"offset":7605},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":38,"column":604,"offset":7605},"end":{"line":38,"column":606,"offset":7607},"indent":[]}},{"type":"text","value":"thedevs.network","position":{"start":{"line":38,"column":606,"offset":7607},"end":{"line":38,"column":621,"offset":7622},"indent":[]}}],"position":{"start":{"line":38,"column":459,"offset":7460},"end":{"line":38,"column":677,"offset":7678},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"getify/You-Dont-Know-JS","position":{"start":{"line":38,"column":680,"offset":7681},"end":{"line":38,"column":703,"offset":7704},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"A book series on JavaScript. @YDKJS on twitter. Contribute to getify/You-Dont-Know-JS development by creating an…","position":{"start":{"line":38,"column":704,"offset":7705},"end":{"line":38,"column":817,"offset":7818},"indent":[]}}],"position":{"start":{"line":38,"column":703,"offset":7704},"end":{"line":38,"column":818,"offset":7819},"indent":[]}},{"type":"text","value":"github.com","position":{"start":{"line":38,"column":818,"offset":7819},"end":{"line":38,"column":828,"offset":7829},"indent":[]}}],"position":{"start":{"line":38,"column":680,"offset":7681},"end":{"line":38,"column":1061,"offset":8062},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript — Double Equals vs. Triple Equals","position":{"start":{"line":38,"column":1064,"offset":8065},"end":{"line":38,"column":1108,"offset":8109},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Learn equality in JavaScript in 3 minutes","position":{"start":{"line":38,"column":1109,"offset":8110},"end":{"line":38,"column":1150,"offset":8151},"indent":[]}}],"position":{"start":{"line":38,"column":1108,"offset":8109},"end":{"line":38,"column":1151,"offset":8152},"indent":[]}},{"type":"text","value":"codeburst.io","position":{"start":{"line":38,"column":1151,"offset":8152},"end":{"line":38,"column":1163,"offset":8164},"indent":[]}}],"position":{"start":{"line":38,"column":1064,"offset":8065},"end":{"line":38,"column":1275,"offset":8276},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":7002},"end":{"line":38,"column":1277,"offset":8278},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Why Use the Triple-Equals Operator in JavaScript? - Impressive Webs","position":{"start":{"line":39,"column":3,"offset":8281},"end":{"line":39,"column":70,"offset":8348},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"\"Determining whether two variables are equivalent is one of the most important operations in programming.\" That's…","position":{"start":{"line":39,"column":71,"offset":8349},"end":{"line":39,"column":185,"offset":8463},"indent":[]}}],"position":{"start":{"line":39,"column":70,"offset":8348},"end":{"line":39,"column":186,"offset":8464},"indent":[]}},{"type":"text","value":"www.impressivewebs.com","position":{"start":{"line":39,"column":186,"offset":8464},"end":{"line":39,"column":208,"offset":8486},"indent":[]}}],"position":{"start":{"line":39,"column":3,"offset":8281},"end":{"line":39,"column":239,"offset":8517},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"What is the difference between == and === in JavaScript?","position":{"start":{"line":39,"column":242,"offset":8520},"end":{"line":39,"column":298,"offset":8576},"indent":[]}},{"type":"text","value":"_","position":{"start":{"line":39,"column":298,"offset":8576},"end":{"line":39,"column":300,"offset":8578},"indent":[]}},{"type":"text","value":"On the surface == and === appear to be functionally the same, so why bother typing an extra character? In this video…","position":{"start":{"line":39,"column":300,"offset":8578},"end":{"line":39,"column":417,"offset":8695},"indent":[]}},{"type":"text","value":"_","position":{"start":{"line":39,"column":417,"offset":8695},"end":{"line":39,"column":419,"offset":8697},"indent":[]}},{"type":"text","value":"www.oreilly.com","position":{"start":{"line":39,"column":419,"offset":8697},"end":{"line":39,"column":434,"offset":8712},"indent":[]}}],"position":{"start":{"line":39,"column":242,"offset":8520},"end":{"line":39,"column":456,"offset":8734},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Why javascript's typeof always return \"object\"?","position":{"start":{"line":39,"column":459,"offset":8737},"end":{"line":39,"column":506,"offset":8784},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"To add in with the others, typeof returns both objects and primitives. There are 5 primitive types in javascript…","position":{"start":{"line":39,"column":507,"offset":8785},"end":{"line":39,"column":620,"offset":8898},"indent":[]}}],"position":{"start":{"line":39,"column":506,"offset":8784},"end":{"line":39,"column":621,"offset":8899},"indent":[]}},{"type":"text","value":"stackoverflow.com","position":{"start":{"line":39,"column":621,"offset":8899},"end":{"line":39,"column":638,"offset":8916},"indent":[]}}],"position":{"start":{"line":39,"column":459,"offset":8737},"end":{"line":39,"column":677,"offset":8955},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Checking Types in Javascript","position":{"start":{"line":39,"column":680,"offset":8958},"end":{"line":39,"column":708,"offset":8986},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Have you ever wondered: what is the correct way to check if a Javascript variable is an Array? Do a Google search and…","position":{"start":{"line":39,"column":709,"offset":8987},"end":{"line":39,"column":827,"offset":9105},"indent":[]}}],"position":{"start":{"line":39,"column":708,"offset":8986},"end":{"line":39,"column":828,"offset":9106},"indent":[]}},{"type":"text","value":"tobyho.com","position":{"start":{"line":39,"column":828,"offset":9106},"end":{"line":39,"column":838,"offset":9116},"indent":[]}}],"position":{"start":{"line":39,"column":680,"offset":8958},"end":{"line":39,"column":1061,"offset":9339},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"How to better check data types in javascript - Webbjocke","position":{"start":{"line":39,"column":1064,"offset":9342},"end":{"line":39,"column":1120,"offset":9398},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"To check what data type something has in javascript is not always the easiest. The language itself provides an operator…","position":{"start":{"line":39,"column":1121,"offset":9399},"end":{"line":39,"column":1241,"offset":9519},"indent":[]}}],"position":{"start":{"line":39,"column":1120,"offset":9398},"end":{"line":39,"column":1242,"offset":9520},"indent":[]}},{"type":"text","value":"webbjocke.com","position":{"start":{"line":39,"column":1242,"offset":9520},"end":{"line":39,"column":1255,"offset":9533},"indent":[]}}],"position":{"start":{"line":39,"column":1064,"offset":9342},"end":{"line":39,"column":1275,"offset":9553},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":8279},"end":{"line":39,"column":1277,"offset":9555},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"A JavaScript Fundamentals Cheat Sheet: Scope, Context, and \"this\"","position":{"start":{"line":40,"column":3,"offset":9558},"end":{"line":40,"column":68,"offset":9623},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Scope Scope refers to where a variable can be accessed within a program. Some variables can be accessed from anywhere…","position":{"start":{"line":40,"column":69,"offset":9624},"end":{"line":40,"column":187,"offset":9742},"indent":[]}}],"position":{"start":{"line":40,"column":68,"offset":9623},"end":{"line":40,"column":188,"offset":9743},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":40,"column":188,"offset":9743},"end":{"line":40,"column":194,"offset":9749},"indent":[]}}],"position":{"start":{"line":40,"column":3,"offset":9558},"end":{"line":40,"column":239,"offset":9794},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Quick Tip: Function Expressions vs Function Declarations - SitePoint","position":{"start":{"line":40,"column":242,"offset":9797},"end":{"line":40,"column":310,"offset":9865},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"This article was peer reviewed by Jeff Mott. Thanks to all of SitePoint's peer reviewers for making SitePoint content…","position":{"start":{"line":40,"column":311,"offset":9866},"end":{"line":40,"column":429,"offset":9984},"indent":[]}}],"position":{"start":{"line":40,"column":310,"offset":9865},"end":{"line":40,"column":430,"offset":9985},"indent":[]}},{"type":"text","value":"www.sitepoint.com","position":{"start":{"line":40,"column":430,"offset":9985},"end":{"line":40,"column":447,"offset":10002},"indent":[]}}],"position":{"start":{"line":40,"column":242,"offset":9797},"end":{"line":40,"column":456,"offset":10011},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript Function — Declaration vs Expression","position":{"start":{"line":40,"column":459,"offset":10014},"end":{"line":40,"column":506,"offset":10061},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Functions are considered as First Class citizen in JavaScript and it is really important to be clear with the concept…","position":{"start":{"line":40,"column":507,"offset":10062},"end":{"line":40,"column":625,"offset":10180},"indent":[]}}],"position":{"start":{"line":40,"column":506,"offset":10061},"end":{"line":40,"column":626,"offset":10181},"indent":[]}},{"type":"text","value":"medium.com","position":{"start":{"line":40,"column":626,"offset":10181},"end":{"line":40,"column":636,"offset":10191},"indent":[]}}],"position":{"start":{"line":40,"column":459,"offset":10014},"end":{"line":40,"column":677,"offset":10232},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Function Declarations vs. Function Expressions","position":{"start":{"line":40,"column":680,"offset":10235},"end":{"line":40,"column":726,"offset":10281},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"What is Function Statement/Declarations in JavaScript?","position":{"start":{"line":40,"column":727,"offset":10282},"end":{"line":40,"column":781,"offset":10336},"indent":[]}}],"position":{"start":{"line":40,"column":726,"offset":10281},"end":{"line":40,"column":782,"offset":10337},"indent":[]}},{"type":"text","value":"medium.com","position":{"start":{"line":40,"column":782,"offset":10337},"end":{"line":40,"column":792,"offset":10347},"indent":[]}}],"position":{"start":{"line":40,"column":680,"offset":10235},"end":{"line":40,"column":1061,"offset":10616},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Function Declarations vs. Function Expressions","position":{"start":{"line":40,"column":1064,"offset":10619},"end":{"line":40,"column":1110,"offset":10665},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Lets start with a short quiz. What is alerted in each case?: Question 1: Question 2: Question 3: Question 4: If you…","position":{"start":{"line":40,"column":1111,"offset":10666},"end":{"line":40,"column":1227,"offset":10782},"indent":[]}}],"position":{"start":{"line":40,"column":1110,"offset":10665},"end":{"line":40,"column":1228,"offset":10783},"indent":[]}},{"type":"text","value":"javascriptweblog.wordpress.com","position":{"start":{"line":40,"column":1228,"offset":10783},"end":{"line":40,"column":1258,"offset":10813},"indent":[]}}],"position":{"start":{"line":40,"column":1064,"offset":10619},"end":{"line":40,"column":1275,"offset":10830},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":9556},"end":{"line":40,"column":1277,"offset":10832},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"16. Modules","position":{"start":{"line":41,"column":3,"offset":10835},"end":{"line":41,"column":14,"offset":10846},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Edit description","position":{"start":{"line":41,"column":15,"offset":10847},"end":{"line":41,"column":31,"offset":10863},"indent":[]}}],"position":{"start":{"line":41,"column":14,"offset":10846},"end":{"line":41,"column":32,"offset":10864},"indent":[]}},{"type":"text","value":"exploringjs.com","position":{"start":{"line":41,"column":32,"offset":10864},"end":{"line":41,"column":47,"offset":10879},"indent":[]}}],"position":{"start":{"line":41,"column":3,"offset":10835},"end":{"line":41,"column":239,"offset":11071},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"ES modules: A cartoon deep-dive - Mozilla Hacks - the Web developer blog","position":{"start":{"line":41,"column":242,"offset":11074},"end":{"line":41,"column":314,"offset":11146},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"ES modules bring an official, standardized module system to JavaScript. With the release of Firefox 60 in May, all…","position":{"start":{"line":41,"column":315,"offset":11147},"end":{"line":41,"column":430,"offset":11262},"indent":[]}}],"position":{"start":{"line":41,"column":314,"offset":11146},"end":{"line":41,"column":431,"offset":11263},"indent":[]}},{"type":"text","value":"hacks.mozilla.org","position":{"start":{"line":41,"column":431,"offset":11263},"end":{"line":41,"column":448,"offset":11280},"indent":[]}}],"position":{"start":{"line":41,"column":242,"offset":11074},"end":{"line":41,"column":456,"offset":11288},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Understanding ES6 Modules - SitePoint","position":{"start":{"line":41,"column":459,"offset":11291},"end":{"line":41,"column":496,"offset":11328},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Almost every language has a concept of modules - a way to include functionality declared in one file within another…","position":{"start":{"line":41,"column":497,"offset":11329},"end":{"line":41,"column":613,"offset":11445},"indent":[]}}],"position":{"start":{"line":41,"column":496,"offset":11328},"end":{"line":41,"column":614,"offset":11446},"indent":[]}},{"type":"text","value":"www.sitepoint.com","position":{"start":{"line":41,"column":614,"offset":11446},"end":{"line":41,"column":631,"offset":11463},"indent":[]}}],"position":{"start":{"line":41,"column":459,"offset":11291},"end":{"line":41,"column":677,"offset":11509},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"An overview of ES6 Modules in JavaScript","position":{"start":{"line":41,"column":680,"offset":11512},"end":{"line":41,"column":720,"offset":11552},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Introduction Until recently if you wanted to take full advantage of modules in JavaScript you needed to make use of…","position":{"start":{"line":41,"column":721,"offset":11553},"end":{"line":41,"column":837,"offset":11669},"indent":[]}}],"position":{"start":{"line":41,"column":720,"offset":11552},"end":{"line":41,"column":838,"offset":11670},"indent":[]}},{"type":"text","value":"blog.cloud66.com","position":{"start":{"line":41,"column":838,"offset":11670},"end":{"line":41,"column":854,"offset":11686},"indent":[]}}],"position":{"start":{"line":41,"column":680,"offset":11512},"end":{"line":41,"column":1061,"offset":11893},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"ES6 Modules in Depth","position":{"start":{"line":41,"column":1064,"offset":11896},"end":{"line":41,"column":1084,"offset":11916},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Welcome back to ES6 - \"Oh, good. It's not another article about Unicode\" - in Depth series. If you've never been around…","position":{"start":{"line":41,"column":1085,"offset":11917},"end":{"line":41,"column":1205,"offset":12037},"indent":[]}}],"position":{"start":{"line":41,"column":1084,"offset":11916},"end":{"line":41,"column":1206,"offset":12038},"indent":[]}},{"type":"text","value":"ponyfoo.com","position":{"start":{"line":41,"column":1206,"offset":12038},"end":{"line":41,"column":1217,"offset":12049},"indent":[]}}],"position":{"start":{"line":41,"column":1064,"offset":11896},"end":{"line":41,"column":1275,"offset":12107},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":10833},"end":{"line":41,"column":1277,"offset":12109},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"How JavaScript works: Event loop and the rise of Async programming + 5 ways to better coding with…","position":{"start":{"line":42,"column":3,"offset":12112},"end":{"line":42,"column":101,"offset":12210},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Welcome to post # 4 of the series dedicated to exploring JavaScript and its building components. In the process of…","position":{"start":{"line":42,"column":102,"offset":12211},"end":{"line":42,"column":217,"offset":12326},"indent":[]}}],"position":{"start":{"line":42,"column":101,"offset":12210},"end":{"line":42,"column":218,"offset":12327},"indent":[]}},{"type":"text","value":"blog.sessionstack.com","position":{"start":{"line":42,"column":218,"offset":12327},"end":{"line":42,"column":239,"offset":12348},"indent":[]}}],"position":{"start":{"line":42,"column":3,"offset":12112},"end":{"line":42,"column":239,"offset":12348},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Tasks, microtasks, queues and schedules","position":{"start":{"line":42,"column":242,"offset":12351},"end":{"line":42,"column":281,"offset":12390},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Edit description","position":{"start":{"line":42,"column":282,"offset":12391},"end":{"line":42,"column":298,"offset":12407},"indent":[]}}],"position":{"start":{"line":42,"column":281,"offset":12390},"end":{"line":42,"column":299,"offset":12408},"indent":[]}},{"type":"text","value":"jakearchibald.com","position":{"start":{"line":42,"column":299,"offset":12408},"end":{"line":42,"column":316,"offset":12425},"indent":[]}}],"position":{"start":{"line":42,"column":242,"offset":12351},"end":{"line":42,"column":456,"offset":12565},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Visualising the JavaScript Event Loop with a Pizza Restaurant analogy","position":{"start":{"line":42,"column":459,"offset":12568},"end":{"line":42,"column":528,"offset":12637},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Consider a pizza restaurant. There are two types of orders that we currently have from a single customer - one is an…","position":{"start":{"line":42,"column":529,"offset":12638},"end":{"line":42,"column":646,"offset":12755},"indent":[]}}],"position":{"start":{"line":42,"column":528,"offset":12637},"end":{"line":42,"column":647,"offset":12756},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":42,"column":647,"offset":12756},"end":{"line":42,"column":653,"offset":12762},"indent":[]}}],"position":{"start":{"line":42,"column":459,"offset":12568},"end":{"line":42,"column":677,"offset":12786},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"✨♻️ JavaScript Visualized: Event Loop","position":{"start":{"line":42,"column":680,"offset":12789},"end":{"line":42,"column":717,"offset":12826},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Oh boi the event loop. It's one of those things that every JavaScript developer has to deal with in one way or another…","position":{"start":{"line":42,"column":718,"offset":12827},"end":{"line":42,"column":837,"offset":12946},"indent":[]}}],"position":{"start":{"line":42,"column":717,"offset":12826},"end":{"line":42,"column":838,"offset":12947},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":42,"column":838,"offset":12947},"end":{"line":42,"column":844,"offset":12953},"indent":[]}}],"position":{"start":{"line":42,"column":680,"offset":12789},"end":{"line":42,"column":1060,"offset":13169},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Scheduling: setTimeout and setInterval","position":{"start":{"line":42,"column":1063,"offset":13172},"end":{"line":42,"column":1101,"offset":13210},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Edit description","position":{"start":{"line":42,"column":1102,"offset":13211},"end":{"line":42,"column":1118,"offset":13227},"indent":[]}}],"position":{"start":{"line":42,"column":1101,"offset":13210},"end":{"line":42,"column":1119,"offset":13228},"indent":[]}},{"type":"text","value":"javascript.info","position":{"start":{"line":42,"column":1119,"offset":13228},"end":{"line":42,"column":1134,"offset":13243},"indent":[]}}],"position":{"start":{"line":42,"column":1063,"offset":13172},"end":{"line":42,"column":1274,"offset":13383},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":12110},"end":{"line":42,"column":1276,"offset":13385},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code","position":{"start":{"line":43,"column":3,"offset":13388},"end":{"line":43,"column":81,"offset":13466},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Before diving deep into the core of Chrome's V8, first, let's get our fundamentals down. All of our systems consist of…","position":{"start":{"line":43,"column":82,"offset":13467},"end":{"line":43,"column":201,"offset":13586},"indent":[]}}],"position":{"start":{"line":43,"column":81,"offset":13466},"end":{"line":43,"column":202,"offset":13587},"indent":[]}},{"type":"text","value":"medium.freecodecamp.org","position":{"start":{"line":43,"column":202,"offset":13587},"end":{"line":43,"column":225,"offset":13610},"indent":[]}}],"position":{"start":{"line":43,"column":3,"offset":13388},"end":{"line":43,"column":239,"offset":13624},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Understanding V8's Bytecode","position":{"start":{"line":43,"column":242,"offset":13627},"end":{"line":43,"column":269,"offset":13654},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"V8 is Google's open source JavaScript engine. Chrome, Node.js, and many other applications use V8. This article…","position":{"start":{"line":43,"column":270,"offset":13655},"end":{"line":43,"column":382,"offset":13767},"indent":[]}}],"position":{"start":{"line":43,"column":269,"offset":13654},"end":{"line":43,"column":383,"offset":13768},"indent":[]}},{"type":"text","value":"medium.com","position":{"start":{"line":43,"column":383,"offset":13768},"end":{"line":43,"column":393,"offset":13778},"indent":[]}}],"position":{"start":{"line":43,"column":242,"offset":13627},"end":{"line":43,"column":456,"offset":13841},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"A Brief History of Google's V8 JavaScript Engine","position":{"start":{"line":43,"column":459,"offset":13844},"end":{"line":43,"column":507,"offset":13892},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Javascript has a reputation in developer circles as a terrible language. It's classless, loosely typed, and plagued by…","position":{"start":{"line":43,"column":508,"offset":13893},"end":{"line":43,"column":627,"offset":14012},"indent":[]}}],"position":{"start":{"line":43,"column":507,"offset":13892},"end":{"line":43,"column":628,"offset":14013},"indent":[]}},{"type":"text","value":"www.mediacurrent.com","position":{"start":{"line":43,"column":628,"offset":14013},"end":{"line":43,"column":648,"offset":14033},"indent":[]}}],"position":{"start":{"line":43,"column":459,"offset":13844},"end":{"line":43,"column":677,"offset":14062},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript essentials: why you should know how the engine works","position":{"start":{"line":43,"column":680,"offset":14065},"end":{"line":43,"column":743,"offset":14128},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"This article is also available in Spanish.","position":{"start":{"line":43,"column":744,"offset":14129},"end":{"line":43,"column":786,"offset":14171},"indent":[]}}],"position":{"start":{"line":43,"column":743,"offset":14128},"end":{"line":43,"column":787,"offset":14172},"indent":[]}},{"type":"text","value":"medium.freecodecamp.org","position":{"start":{"line":43,"column":787,"offset":14172},"end":{"line":43,"column":810,"offset":14195},"indent":[]}}],"position":{"start":{"line":43,"column":680,"offset":14065},"end":{"line":43,"column":1061,"offset":14446},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript engine fundamentals: Shapes and Inline Caches","position":{"start":{"line":43,"column":1064,"offset":14449},"end":{"line":43,"column":1120,"offset":14505},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"This article describes some key fundamentals that are common to all JavaScript engines - and not just V8, the engine…","position":{"start":{"line":43,"column":1121,"offset":14506},"end":{"line":43,"column":1238,"offset":14623},"indent":[]}}],"position":{"start":{"line":43,"column":1120,"offset":14505},"end":{"line":43,"column":1239,"offset":14624},"indent":[]}},{"type":"text","value":"mathiasbynens.be","position":{"start":{"line":43,"column":1239,"offset":14624},"end":{"line":43,"column":1255,"offset":14640},"indent":[]}}],"position":{"start":{"line":43,"column":1064,"offset":14449},"end":{"line":43,"column":1275,"offset":14660},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":13386},"end":{"line":43,"column":1277,"offset":14662},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"JavaScript engine fundamentals: optimizing prototypes","position":{"start":{"line":44,"column":3,"offset":14665},"end":{"line":44,"column":56,"offset":14718},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"This article describes some key fundamentals that are common to all JavaScript engines - and not just V8, the engine…","position":{"start":{"line":44,"column":57,"offset":14719},"end":{"line":44,"column":174,"offset":14836},"indent":[]}}],"position":{"start":{"line":44,"column":56,"offset":14718},"end":{"line":44,"column":175,"offset":14837},"indent":[]}},{"type":"text","value":"mathiasbynens.be","position":{"start":{"line":44,"column":175,"offset":14837},"end":{"line":44,"column":191,"offset":14853},"indent":[]}}],"position":{"start":{"line":44,"column":3,"offset":14665},"end":{"line":44,"column":239,"offset":14901},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Elements kinds in V8","position":{"start":{"line":44,"column":242,"offset":14904},"end":{"line":44,"column":262,"offset":14924},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Note: If you prefer watching a presentation over reading articles, then enjoy the video below! JavaScript objects can…","position":{"start":{"line":44,"column":263,"offset":14925},"end":{"line":44,"column":381,"offset":15043},"indent":[]}}],"position":{"start":{"line":44,"column":262,"offset":14924},"end":{"line":44,"column":382,"offset":15044},"indent":[]}},{"type":"text","value":"v8.dev","position":{"start":{"line":44,"column":382,"offset":15044},"end":{"line":44,"column":388,"offset":15050},"indent":[]}}],"position":{"start":{"line":44,"column":242,"offset":14904},"end":{"line":44,"column":456,"offset":15118},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Programming with JS: Bitwise Operations","position":{"start":{"line":44,"column":459,"offset":15121},"end":{"line":44,"column":498,"offset":15160},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"In this series of articles we take a look at different Computer Science topics from the prism of JavaScript. We've…","position":{"start":{"line":44,"column":499,"offset":15161},"end":{"line":44,"column":614,"offset":15276},"indent":[]}}],"position":{"start":{"line":44,"column":498,"offset":15160},"end":{"line":44,"column":615,"offset":15277},"indent":[]}},{"type":"text","value":"hackernoon.com","position":{"start":{"line":44,"column":615,"offset":15277},"end":{"line":44,"column":629,"offset":15291},"indent":[]}}],"position":{"start":{"line":44,"column":459,"offset":15121},"end":{"line":44,"column":677,"offset":15339},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Using JavaScript's Bitwise Operators in Real Life","position":{"start":{"line":44,"column":680,"offset":15342},"end":{"line":44,"column":729,"offset":15391},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Let's pretend we're machine code programmers!","position":{"start":{"line":44,"column":730,"offset":15392},"end":{"line":44,"column":775,"offset":15437},"indent":[]}}],"position":{"start":{"line":44,"column":729,"offset":15391},"end":{"line":44,"column":776,"offset":15438},"indent":[]}},{"type":"text","value":"codeburst.io","position":{"start":{"line":44,"column":776,"offset":15438},"end":{"line":44,"column":788,"offset":15450},"indent":[]}}],"position":{"start":{"line":44,"column":680,"offset":15342},"end":{"line":44,"column":1061,"offset":15723},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript Bitwise Operators - w3resource","position":{"start":{"line":44,"column":1064,"offset":15726},"end":{"line":44,"column":1105,"offset":15767},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Bitwise operators perform an operation on the bitwise (0,1) representation of their arguments, rather than as decimal…","position":{"start":{"line":44,"column":1106,"offset":15768},"end":{"line":44,"column":1224,"offset":15886},"indent":[]}}],"position":{"start":{"line":44,"column":1105,"offset":15767},"end":{"line":44,"column":1225,"offset":15887},"indent":[]}},{"type":"text","value":"www.w3resource.com","position":{"start":{"line":44,"column":1225,"offset":15887},"end":{"line":44,"column":1243,"offset":15905},"indent":[]}}],"position":{"start":{"line":44,"column":1064,"offset":15726},"end":{"line":44,"column":1275,"offset":15937},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":14663},"end":{"line":44,"column":1277,"offset":15939},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"JavaScript DOM Tutorial with Example","position":{"start":{"line":45,"column":3,"offset":15942},"end":{"line":45,"column":39,"offset":15978},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Details JavaScript can access all the elements in a webpage making use of Document Object Model (DOM). In fact, the web…","position":{"start":{"line":45,"column":40,"offset":15979},"end":{"line":45,"column":160,"offset":16099},"indent":[]}}],"position":{"start":{"line":45,"column":39,"offset":15978},"end":{"line":45,"column":161,"offset":16100},"indent":[]}},{"type":"text","value":"www.guru99.com","position":{"start":{"line":45,"column":161,"offset":16100},"end":{"line":45,"column":175,"offset":16114},"indent":[]}}],"position":{"start":{"line":45,"column":3,"offset":15942},"end":{"line":45,"column":239,"offset":16178},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"What is the DOM?","position":{"start":{"line":45,"column":242,"offset":16181},"end":{"line":45,"column":258,"offset":16197},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"A reader recently wrote in asking me what the DOM was. They said they've heard it mentioned and alluded to, but aren't…","position":{"start":{"line":45,"column":259,"offset":16198},"end":{"line":45,"column":378,"offset":16317},"indent":[]}}],"position":{"start":{"line":45,"column":258,"offset":16197},"end":{"line":45,"column":379,"offset":16318},"indent":[]}},{"type":"text","value":"css-tricks.com","position":{"start":{"line":45,"column":379,"offset":16318},"end":{"line":45,"column":393,"offset":16332},"indent":[]}}],"position":{"start":{"line":45,"column":242,"offset":16181},"end":{"line":45,"column":456,"offset":16395},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Traversing the DOM with JavaScript","position":{"start":{"line":45,"column":459,"offset":16398},"end":{"line":45,"column":493,"offset":16432},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"A good JavaScript developer needs to know how to traverse the DOM-it's the act of selecting an element from another…","position":{"start":{"line":45,"column":494,"offset":16433},"end":{"line":45,"column":610,"offset":16549},"indent":[]}}],"position":{"start":{"line":45,"column":493,"offset":16432},"end":{"line":45,"column":611,"offset":16550},"indent":[]}},{"type":"text","value":"zellwk.com","position":{"start":{"line":45,"column":611,"offset":16550},"end":{"line":45,"column":621,"offset":16560},"indent":[]}}],"position":{"start":{"line":45,"column":459,"offset":16398},"end":{"line":45,"column":677,"offset":16616},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"DOM tree","position":{"start":{"line":45,"column":680,"offset":16619},"end":{"line":45,"column":688,"offset":16627},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"The backbone of an HTML document is tags. According to the Document Object Model (DOM), every HTML tag is an object…","position":{"start":{"line":45,"column":689,"offset":16628},"end":{"line":45,"column":805,"offset":16744},"indent":[]}}],"position":{"start":{"line":45,"column":688,"offset":16627},"end":{"line":45,"column":806,"offset":16745},"indent":[]}},{"type":"text","value":"javascript.info","position":{"start":{"line":45,"column":806,"offset":16745},"end":{"line":45,"column":821,"offset":16760},"indent":[]}}],"position":{"start":{"line":45,"column":680,"offset":16619},"end":{"line":45,"column":1061,"offset":17000},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"How to traverse the DOM in JavaScript","position":{"start":{"line":45,"column":1064,"offset":17003},"end":{"line":45,"column":1101,"offset":17040},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Learn how to navigate your way through the DOM tree.","position":{"start":{"line":45,"column":1102,"offset":17041},"end":{"line":45,"column":1154,"offset":17093},"indent":[]}}],"position":{"start":{"line":45,"column":1101,"offset":17040},"end":{"line":45,"column":1155,"offset":17094},"indent":[]}},{"type":"text","value":"javascript.plainenglish.io","position":{"start":{"line":45,"column":1155,"offset":17094},"end":{"line":45,"column":1181,"offset":17120},"indent":[]}}],"position":{"start":{"line":45,"column":1064,"offset":17003},"end":{"line":45,"column":1275,"offset":17214},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":15940},"end":{"line":45,"column":1277,"offset":17216},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"A Vanilla JS Guide On Mastering the DOM","position":{"start":{"line":46,"column":3,"offset":17219},"end":{"line":46,"column":42,"offset":17258},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Note: The contents of this post are intended to be introductory and does not include use of any libraries like jQuery…","position":{"start":{"line":46,"column":43,"offset":17259},"end":{"line":46,"column":161,"offset":17377},"indent":[]}}],"position":{"start":{"line":46,"column":42,"offset":17258},"end":{"line":46,"column":162,"offset":17378},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":46,"column":162,"offset":17378},"end":{"line":46,"column":168,"offset":17384},"indent":[]}}],"position":{"start":{"line":46,"column":3,"offset":17219},"end":{"line":46,"column":239,"offset":17455},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"How To Use Classes in JavaScript DigitalOcean","position":{"start":{"line":46,"column":242,"offset":17458},"end":{"line":46,"column":287,"offset":17503},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"JavaScript is a prototype-based language, and every object in JavaScript has a hidden internal property called…","position":{"start":{"line":46,"column":288,"offset":17504},"end":{"line":46,"column":399,"offset":17615},"indent":[]}}],"position":{"start":{"line":46,"column":287,"offset":17503},"end":{"line":46,"column":400,"offset":17616},"indent":[]}},{"type":"text","value":"www.digitalocean.com","position":{"start":{"line":46,"column":400,"offset":17616},"end":{"line":46,"column":420,"offset":17636},"indent":[]}}],"position":{"start":{"line":46,"column":242,"offset":17458},"end":{"line":46,"column":456,"offset":17672},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Javascript Classes — Under The Hood","position":{"start":{"line":46,"column":459,"offset":17675},"end":{"line":46,"column":494,"offset":17710},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Javascript classes are nothing but a syntactic sugar over existing prototype based inheritance and constructor…","position":{"start":{"line":46,"column":495,"offset":17711},"end":{"line":46,"column":606,"offset":17822},"indent":[]}}],"position":{"start":{"line":46,"column":494,"offset":17710},"end":{"line":46,"column":607,"offset":17823},"indent":[]}},{"type":"text","value":"medium.com","position":{"start":{"line":46,"column":607,"offset":17823},"end":{"line":46,"column":617,"offset":17833},"indent":[]}}],"position":{"start":{"line":46,"column":459,"offset":17675},"end":{"line":46,"column":677,"offset":17893},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"ES6 Classes - JavaScript January","position":{"start":{"line":46,"column":680,"offset":17896},"end":{"line":46,"column":712,"offset":17928},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Object-Oriented Programming (OOP) can be a great way to organize your projects. Introduced with ES6, the javascript…","position":{"start":{"line":46,"column":713,"offset":17929},"end":{"line":46,"column":829,"offset":18045},"indent":[]}}],"position":{"start":{"line":46,"column":712,"offset":17928},"end":{"line":46,"column":830,"offset":18046},"indent":[]}},{"type":"text","value":"www.javascriptjanuary.com","position":{"start":{"line":46,"column":830,"offset":18046},"end":{"line":46,"column":855,"offset":18071},"indent":[]}}],"position":{"start":{"line":46,"column":680,"offset":17896},"end":{"line":46,"column":1061,"offset":18277},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Practical Ways to Write Better JavaScript","position":{"start":{"line":46,"column":1064,"offset":18280},"end":{"line":46,"column":1105,"offset":18321},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Solid methods of improving your JS. Tagged with javascript, webdev, beginners, react.","position":{"start":{"line":46,"column":1106,"offset":18322},"end":{"line":46,"column":1191,"offset":18407},"indent":[]}}],"position":{"start":{"line":46,"column":1105,"offset":18321},"end":{"line":46,"column":1192,"offset":18408},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":46,"column":1192,"offset":18408},"end":{"line":46,"column":1198,"offset":18414},"indent":[]}}],"position":{"start":{"line":46,"column":1064,"offset":18280},"end":{"line":46,"column":1275,"offset":18491},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":17217},"end":{"line":46,"column":1277,"offset":18493},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Better JavaScript with ES6, Pt. II: A Deep Dive into Classes","position":{"start":{"line":47,"column":3,"offset":18496},"end":{"line":47,"column":63,"offset":18556},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Out with the Old, In with the new Let's be clear about one thing from the start: Under the hood, ES6 classes are not…","position":{"start":{"line":47,"column":64,"offset":18557},"end":{"line":47,"column":181,"offset":18674},"indent":[]}}],"position":{"start":{"line":47,"column":63,"offset":18556},"end":{"line":47,"column":182,"offset":18675},"indent":[]}},{"type":"text","value":"scotch.io","position":{"start":{"line":47,"column":182,"offset":18675},"end":{"line":47,"column":191,"offset":18684},"indent":[]}}],"position":{"start":{"line":47,"column":3,"offset":18496},"end":{"line":47,"column":239,"offset":18732},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Understand the Factory Design Pattern in plain javascript","position":{"start":{"line":47,"column":242,"offset":18735},"end":{"line":47,"column":299,"offset":18792},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"The simplest way to understand Factory Design Pattern","position":{"start":{"line":47,"column":300,"offset":18793},"end":{"line":47,"column":353,"offset":18846},"indent":[]}}],"position":{"start":{"line":47,"column":299,"offset":18792},"end":{"line":47,"column":354,"offset":18847},"indent":[]}},{"type":"text","value":"medium.com","position":{"start":{"line":47,"column":354,"offset":18847},"end":{"line":47,"column":364,"offset":18857},"indent":[]}}],"position":{"start":{"line":47,"column":242,"offset":18735},"end":{"line":47,"column":456,"offset":18949},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Factory Functions in JavaScript Aten Design Group","position":{"start":{"line":47,"column":459,"offset":18952},"end":{"line":47,"column":508,"offset":19001},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"As we move from an age of jQuery plugins and script drop-ins to a world of CommonJS and modular architectures it's…","position":{"start":{"line":47,"column":509,"offset":19002},"end":{"line":47,"column":624,"offset":19117},"indent":[]}}],"position":{"start":{"line":47,"column":508,"offset":19001},"end":{"line":47,"column":625,"offset":19118},"indent":[]}},{"type":"text","value":"atendesigngroup.com","position":{"start":{"line":47,"column":625,"offset":19118},"end":{"line":47,"column":644,"offset":19137},"indent":[]}}],"position":{"start":{"line":47,"column":459,"offset":18952},"end":{"line":47,"column":677,"offset":19170},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"The Factory Pattern in JS ES6","position":{"start":{"line":47,"column":680,"offset":19173},"end":{"line":47,"column":709,"offset":19202},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"I'm trying to get the most out of all the new things in ES6 (ES2015). And I'm writing a new library where I need a…","position":{"start":{"line":47,"column":710,"offset":19203},"end":{"line":47,"column":825,"offset":19318},"indent":[]}}],"position":{"start":{"line":47,"column":709,"offset":19202},"end":{"line":47,"column":826,"offset":19319},"indent":[]}},{"type":"text","value":"medium.com","position":{"start":{"line":47,"column":826,"offset":19319},"end":{"line":47,"column":836,"offset":19329},"indent":[]}}],"position":{"start":{"line":47,"column":680,"offset":19173},"end":{"line":47,"column":1061,"offset":19554},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Class vs Factory function: exploring the way forward","position":{"start":{"line":47,"column":1064,"offset":19557},"end":{"line":47,"column":1116,"offset":19609},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"ECMAScript 2015 (aka ES6) comes with the class syntax, so now we have two competing patterns for creating objects. In…","position":{"start":{"line":47,"column":1117,"offset":19610},"end":{"line":47,"column":1235,"offset":19728},"indent":[]}}],"position":{"start":{"line":47,"column":1116,"offset":19609},"end":{"line":47,"column":1236,"offset":19729},"indent":[]}},{"type":"text","value":"medium.freecodecamp.org","position":{"start":{"line":47,"column":1236,"offset":19729},"end":{"line":47,"column":1259,"offset":19752},"indent":[]}}],"position":{"start":{"line":47,"column":1064,"offset":19557},"end":{"line":47,"column":1275,"offset":19768},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":18494},"end":{"line":47,"column":1277,"offset":19770},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Prototype in Javascript Codementor","position":{"start":{"line":48,"column":3,"offset":19773},"end":{"line":48,"column":37,"offset":19807},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"By default every function has a property name as prototype which is EMPTY ( by default). We can add properties and…","position":{"start":{"line":48,"column":38,"offset":19808},"end":{"line":48,"column":153,"offset":19923},"indent":[]}}],"position":{"start":{"line":48,"column":37,"offset":19807},"end":{"line":48,"column":154,"offset":19924},"indent":[]}},{"type":"text","value":"www.codementor.io","position":{"start":{"line":48,"column":154,"offset":19924},"end":{"line":48,"column":171,"offset":19941},"indent":[]}}],"position":{"start":{"line":48,"column":3,"offset":19773},"end":{"line":48,"column":239,"offset":20009},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Prototypes in JavaScript","position":{"start":{"line":48,"column":242,"offset":20012},"end":{"line":48,"column":266,"offset":20036},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"In this post, we will discuss what are prototypes in JavaScript, how they help JavaScript in achieving the concepts of…","position":{"start":{"line":48,"column":267,"offset":20037},"end":{"line":48,"column":386,"offset":20156},"indent":[]}}],"position":{"start":{"line":48,"column":266,"offset":20036},"end":{"line":48,"column":387,"offset":20157},"indent":[]}},{"type":"text","value":"betterprogramming.pub","position":{"start":{"line":48,"column":387,"offset":20157},"end":{"line":48,"column":408,"offset":20178},"indent":[]}}],"position":{"start":{"line":48,"column":242,"offset":20012},"end":{"line":48,"column":456,"offset":20226},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Prototype in JavaScript: it's quirky, but here's how it works","position":{"start":{"line":48,"column":459,"offset":20229},"end":{"line":48,"column":520,"offset":20290},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"The following four lines are enough to confuse most JavaScript developers:","position":{"start":{"line":48,"column":521,"offset":20291},"end":{"line":48,"column":595,"offset":20365},"indent":[]}}],"position":{"start":{"line":48,"column":520,"offset":20290},"end":{"line":48,"column":596,"offset":20366},"indent":[]}},{"type":"text","value":"medium.freecodecamp.org","position":{"start":{"line":48,"column":596,"offset":20366},"end":{"line":48,"column":619,"offset":20389},"indent":[]}}],"position":{"start":{"line":48,"column":459,"offset":20229},"end":{"line":48,"column":677,"offset":20447},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Understanding JavaScript: Prototype and Inheritance","position":{"start":{"line":48,"column":680,"offset":20450},"end":{"line":48,"column":731,"offset":20501},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Due to the amazing quantity of libraries, tools and all kinds of things that make your development easier, a lot of…","position":{"start":{"line":48,"column":732,"offset":20502},"end":{"line":48,"column":848,"offset":20618},"indent":[]}}],"position":{"start":{"line":48,"column":731,"offset":20501},"end":{"line":48,"column":849,"offset":20619},"indent":[]}},{"type":"text","value":"hackernoon.com","position":{"start":{"line":48,"column":849,"offset":20619},"end":{"line":48,"column":863,"offset":20633},"indent":[]}}],"position":{"start":{"line":48,"column":680,"offset":20450},"end":{"line":48,"column":1061,"offset":20831},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Understanding Classes (ES5) and Prototypal Inheritance in JavaScript","position":{"start":{"line":48,"column":1064,"offset":20834},"end":{"line":48,"column":1132,"offset":20902},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"In a nutshell the above snippet creates a Person class that can have multiple instances. By convention functional…","position":{"start":{"line":48,"column":1133,"offset":20903},"end":{"line":48,"column":1247,"offset":21017},"indent":[]}}],"position":{"start":{"line":48,"column":1132,"offset":20902},"end":{"line":48,"column":1248,"offset":21018},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":48,"column":1248,"offset":21018},"end":{"line":48,"column":1254,"offset":21024},"indent":[]}}],"position":{"start":{"line":48,"column":1064,"offset":20834},"end":{"line":48,"column":1275,"offset":21045},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":19771},"end":{"line":48,"column":1277,"offset":21047},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"_","position":{"start":{"line":49,"column":3,"offset":21050},"end":{"line":49,"column":5,"offset":21052},"indent":[]}},{"type":"text","value":"Master JavaScript Prototypes & ","position":{"start":{"line":49,"column":5,"offset":21052},"end":{"line":49,"column":36,"offset":21083},"indent":[]}},{"type":"text","value":"_","position":{"start":{"line":49,"column":36,"offset":21083},"end":{"line":49,"column":38,"offset":21085},"indent":[]}},{"type":"text","value":"Inheritance","position":{"start":{"line":49,"column":38,"offset":21085},"end":{"line":49,"column":49,"offset":21096},"indent":[]}},{"type":"text","value":"_","position":{"start":{"line":49,"column":49,"offset":21096},"end":{"line":49,"column":51,"offset":21098},"indent":[]}},{"type":"text","value":"_","position":{"start":{"line":49,"column":51,"offset":21098},"end":{"line":49,"column":53,"offset":21100},"indent":[]}},{"type":"text","value":"\\ Inheritancecodeburst.io","position":{"start":{"line":49,"column":53,"offset":21100},"end":{"line":49,"column":78,"offset":21125},"indent":[]}}],"position":{"start":{"line":49,"column":3,"offset":21050},"end":{"line":49,"column":239,"offset":21286},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript's Prototypal Inheritance Explained Using CSS","position":{"start":{"line":49,"column":242,"offset":21289},"end":{"line":49,"column":297,"offset":21344},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Prototypal inheritance is arguably the least understood aspect of JavaScript. Well the good news is that if you…","position":{"start":{"line":49,"column":298,"offset":21345},"end":{"line":49,"column":410,"offset":21457},"indent":[]}}],"position":{"start":{"line":49,"column":297,"offset":21344},"end":{"line":49,"column":411,"offset":21458},"indent":[]}},{"type":"text","value":"medium.freecodecamp.org","position":{"start":{"line":49,"column":411,"offset":21458},"end":{"line":49,"column":434,"offset":21481},"indent":[]}}],"position":{"start":{"line":49,"column":242,"offset":21289},"end":{"line":49,"column":456,"offset":21503},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Demystifying ES6 Classes And Prototypal Inheritance","position":{"start":{"line":49,"column":459,"offset":21506},"end":{"line":49,"column":510,"offset":21557},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"In the early history of the JavaScript language, a cloud of animosity formed over the lack of a proper syntax for…","position":{"start":{"line":49,"column":511,"offset":21558},"end":{"line":49,"column":625,"offset":21672},"indent":[]}}],"position":{"start":{"line":49,"column":510,"offset":21557},"end":{"line":49,"column":626,"offset":21673},"indent":[]}},{"type":"text","value":"scotch.io","position":{"start":{"line":49,"column":626,"offset":21673},"end":{"line":49,"column":635,"offset":21682},"indent":[]}}],"position":{"start":{"line":49,"column":459,"offset":21506},"end":{"line":49,"column":677,"offset":21724},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Intro To Prototypal Inheritance - JS","position":{"start":{"line":49,"column":680,"offset":21727},"end":{"line":49,"column":716,"offset":21763},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"In this article I will try to give an introduction to protypal inheritance. As an \"optional\" pre-requisite, you can…","position":{"start":{"line":49,"column":717,"offset":21764},"end":{"line":49,"column":833,"offset":21880},"indent":[]}}],"position":{"start":{"line":49,"column":716,"offset":21763},"end":{"line":49,"column":834,"offset":21881},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":49,"column":834,"offset":21881},"end":{"line":49,"column":840,"offset":21887},"indent":[]}}],"position":{"start":{"line":49,"column":680,"offset":21727},"end":{"line":49,"column":1061,"offset":22108},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Let's Build Prototypal Inheritance in JS","position":{"start":{"line":49,"column":1064,"offset":22111},"end":{"line":49,"column":1104,"offset":22151},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"The idea for this post is pretty simple. I want to some extent build and with that, illustrate how prototypes work in…","position":{"start":{"line":49,"column":1105,"offset":22152},"end":{"line":49,"column":1223,"offset":22270},"indent":[]}}],"position":{"start":{"line":49,"column":1104,"offset":22151},"end":{"line":49,"column":1224,"offset":22271},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":49,"column":1224,"offset":22271},"end":{"line":49,"column":1230,"offset":22277},"indent":[]}}],"position":{"start":{"line":49,"column":1064,"offset":22111},"end":{"line":49,"column":1275,"offset":22322},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":21048},"end":{"line":49,"column":1277,"offset":22324},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Understanding Prototypal Inheritance In JavaScript","position":{"start":{"line":50,"column":3,"offset":22327},"end":{"line":50,"column":53,"offset":22377},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"What Is Object-oriented Programming (OOP) Classical vs Prototypal Inheritance The Prototype Object And The Prototype…","position":{"start":{"line":50,"column":54,"offset":22378},"end":{"line":50,"column":171,"offset":22495},"indent":[]}}],"position":{"start":{"line":50,"column":53,"offset":22377},"end":{"line":50,"column":172,"offset":22496},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":50,"column":172,"offset":22496},"end":{"line":50,"column":178,"offset":22502},"indent":[]}}],"position":{"start":{"line":50,"column":3,"offset":22327},"end":{"line":50,"column":239,"offset":22563},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Object.create() - JavaScript MDN","position":{"start":{"line":50,"column":242,"offset":22566},"end":{"line":50,"column":274,"offset":22598},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"The Object.create() method creates a new object, using an existing object as the prototype of the newly created object…","position":{"start":{"line":50,"column":275,"offset":22599},"end":{"line":50,"column":394,"offset":22718},"indent":[]}}],"position":{"start":{"line":50,"column":274,"offset":22598},"end":{"line":50,"column":395,"offset":22719},"indent":[]}},{"type":"text","value":"developer.mozilla.org","position":{"start":{"line":50,"column":395,"offset":22719},"end":{"line":50,"column":416,"offset":22740},"indent":[]}}],"position":{"start":{"line":50,"column":242,"offset":22566},"end":{"line":50,"column":456,"offset":22780},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Object.assign() - JavaScript MDN","position":{"start":{"line":50,"column":459,"offset":22783},"end":{"line":50,"column":491,"offset":22815},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"The Object.assign() method copies all enumerable own properties from one or more source objects to a target object. It…","position":{"start":{"line":50,"column":492,"offset":22816},"end":{"line":50,"column":611,"offset":22935},"indent":[]}}],"position":{"start":{"line":50,"column":491,"offset":22815},"end":{"line":50,"column":612,"offset":22936},"indent":[]}},{"type":"text","value":"developer.mozilla.org","position":{"start":{"line":50,"column":612,"offset":22936},"end":{"line":50,"column":633,"offset":22957},"indent":[]}}],"position":{"start":{"line":50,"column":459,"offset":22783},"end":{"line":50,"column":677,"offset":23001},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Object.create in JavaScript","position":{"start":{"line":50,"column":680,"offset":23004},"end":{"line":50,"column":707,"offset":23031},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"The Object.create method is one of the methods to create a new object in JavaScript.","position":{"start":{"line":50,"column":708,"offset":23032},"end":{"line":50,"column":792,"offset":23116},"indent":[]}}],"position":{"start":{"line":50,"column":707,"offset":23031},"end":{"line":50,"column":793,"offset":23117},"indent":[]}},{"type":"text","value":"medium.com","position":{"start":{"line":50,"column":793,"offset":23117},"end":{"line":50,"column":803,"offset":23127},"indent":[]}}],"position":{"start":{"line":50,"column":680,"offset":23004},"end":{"line":50,"column":1061,"offset":23385},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Javascript Objects A New Way to Create Objects HTML Goodies","position":{"start":{"line":50,"column":1064,"offset":23388},"end":{"line":50,"column":1123,"offset":23447},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"There are a lot of ways to create Objects in JavaScript, perhaps even more to integrate inheritance into them. Just…","position":{"start":{"line":50,"column":1124,"offset":23448},"end":{"line":50,"column":1240,"offset":23564},"indent":[]}}],"position":{"start":{"line":50,"column":1123,"offset":23447},"end":{"line":50,"column":1241,"offset":23565},"indent":[]}},{"type":"text","value":"www.htmlgoodies.com","position":{"start":{"line":50,"column":1241,"offset":23565},"end":{"line":50,"column":1260,"offset":23584},"indent":[]}}],"position":{"start":{"line":50,"column":1064,"offset":23388},"end":{"line":50,"column":1275,"offset":23599},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":22325},"end":{"line":50,"column":1277,"offset":23601},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"JavaScript Object Creation: Patterns and Best Practices - SitePoint","position":{"start":{"line":51,"column":3,"offset":23604},"end":{"line":51,"column":70,"offset":23671},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Jeff Mott guides you through a step-by-step approach to JavaScript object creation - from object literals to factory…","position":{"start":{"line":51,"column":71,"offset":23672},"end":{"line":51,"column":188,"offset":23789},"indent":[]}}],"position":{"start":{"line":51,"column":70,"offset":23671},"end":{"line":51,"column":189,"offset":23790},"indent":[]}},{"type":"text","value":"www.sitepoint.com","position":{"start":{"line":51,"column":189,"offset":23790},"end":{"line":51,"column":206,"offset":23807},"indent":[]}}],"position":{"start":{"line":51,"column":3,"offset":23604},"end":{"line":51,"column":239,"offset":23840},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty …","position":{"start":{"line":51,"column":242,"offset":23843},"end":{"line":51,"column":329,"offset":23930},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"This post is a sort of grab bag to help you explore a few very useful methods to help you manage your objects in…","position":{"start":{"line":51,"column":330,"offset":23931},"end":{"line":51,"column":443,"offset":24044},"indent":[]}}],"position":{"start":{"line":51,"column":329,"offset":23930},"end":{"line":51,"column":444,"offset":24045},"indent":[]}},{"type":"text","value":"alligator.io","position":{"start":{"line":51,"column":444,"offset":24045},"end":{"line":51,"column":456,"offset":24057},"indent":[]}}],"position":{"start":{"line":51,"column":242,"offset":23843},"end":{"line":51,"column":456,"offset":24057},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Copying Objects in JavaScript DigitalOcean","position":{"start":{"line":51,"column":459,"offset":24060},"end":{"line":51,"column":501,"offset":24102},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Objects are the fundamental blocks of JavaScript. An object is a collection of properties, and a property is an…","position":{"start":{"line":51,"column":502,"offset":24103},"end":{"line":51,"column":614,"offset":24215},"indent":[]}}],"position":{"start":{"line":51,"column":501,"offset":24102},"end":{"line":51,"column":615,"offset":24216},"indent":[]}},{"type":"text","value":"scotch.io","position":{"start":{"line":51,"column":615,"offset":24216},"end":{"line":51,"column":624,"offset":24225},"indent":[]}}],"position":{"start":{"line":51,"column":459,"offset":24060},"end":{"line":51,"column":677,"offset":24278},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript: Object.assign()","position":{"start":{"line":51,"column":680,"offset":24281},"end":{"line":51,"column":707,"offset":24308},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Veja nesse artigo como utilizar o Object.assign() do ECMAScript 6","position":{"start":{"line":51,"column":708,"offset":24309},"end":{"line":51,"column":773,"offset":24374},"indent":[]}}],"position":{"start":{"line":51,"column":707,"offset":24308},"end":{"line":51,"column":774,"offset":24375},"indent":[]}},{"type":"text","value":"codeburst.io","position":{"start":{"line":51,"column":774,"offset":24375},"end":{"line":51,"column":786,"offset":24387},"indent":[]}}],"position":{"start":{"line":51,"column":680,"offset":24281},"end":{"line":51,"column":1061,"offset":24662},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"How to deep clone a JavaScript object","position":{"start":{"line":51,"column":1064,"offset":24665},"end":{"line":51,"column":1101,"offset":24702},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Copying objects in JavaScript can be tricky. Some ways perform a shallow copy, which is the default behavior in most of…","position":{"start":{"line":51,"column":1102,"offset":24703},"end":{"line":51,"column":1222,"offset":24823},"indent":[]}}],"position":{"start":{"line":51,"column":1101,"offset":24702},"end":{"line":51,"column":1223,"offset":24824},"indent":[]}},{"type":"text","value":"flaviocopes.com","position":{"start":{"line":51,"column":1223,"offset":24824},"end":{"line":51,"column":1238,"offset":24839},"indent":[]}}],"position":{"start":{"line":51,"column":1064,"offset":24665},"end":{"line":51,"column":1275,"offset":24876},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":23602},"end":{"line":51,"column":1277,"offset":24878},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"How to Use Map, Filter, and Reduce in JavaScript","position":{"start":{"line":52,"column":3,"offset":24881},"end":{"line":52,"column":51,"offset":24929},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Functional programming has been making quite a splash in the development world these days. And for good reason…","position":{"start":{"line":52,"column":52,"offset":24930},"end":{"line":52,"column":163,"offset":25041},"indent":[]}}],"position":{"start":{"line":52,"column":51,"offset":24929},"end":{"line":52,"column":164,"offset":25042},"indent":[]}},{"type":"text","value":"code.tutsplus.com","position":{"start":{"line":52,"column":164,"offset":25042},"end":{"line":52,"column":181,"offset":25059},"indent":[]}}],"position":{"start":{"line":52,"column":3,"offset":24881},"end":{"line":52,"column":239,"offset":25117},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript — Learn to Chain Map, Filter, and Reduce","position":{"start":{"line":52,"column":242,"offset":25120},"end":{"line":52,"column":293,"offset":25171},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Learn how to chain map, filter, and reduce in JavaScript","position":{"start":{"line":52,"column":294,"offset":25172},"end":{"line":52,"column":350,"offset":25228},"indent":[]}}],"position":{"start":{"line":52,"column":293,"offset":25171},"end":{"line":52,"column":351,"offset":25229},"indent":[]}},{"type":"text","value":"codeburst.io","position":{"start":{"line":52,"column":351,"offset":25229},"end":{"line":52,"column":363,"offset":25241},"indent":[]}}],"position":{"start":{"line":52,"column":242,"offset":25120},"end":{"line":52,"column":456,"offset":25334},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Understanding map, filter and reduce in Javascript","position":{"start":{"line":52,"column":459,"offset":25337},"end":{"line":52,"column":509,"offset":25387},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"When working on Javascript projects you inevitably come across situations where you have to do some data manipulation…","position":{"start":{"line":52,"column":510,"offset":25388},"end":{"line":52,"column":628,"offset":25506},"indent":[]}}],"position":{"start":{"line":52,"column":509,"offset":25387},"end":{"line":52,"column":629,"offset":25507},"indent":[]}},{"type":"text","value":"hackernoon.com","position":{"start":{"line":52,"column":629,"offset":25507},"end":{"line":52,"column":643,"offset":25521},"indent":[]}}],"position":{"start":{"line":52,"column":459,"offset":25337},"end":{"line":52,"column":677,"offset":25555},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Functional Programming in JS: map, filter, reduce (Pt. 5)","position":{"start":{"line":52,"column":680,"offset":25558},"end":{"line":52,"column":737,"offset":25615},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Note: This is part of the \"Javascript and Functional Programming\" series on learning functional programming techniques…","position":{"start":{"line":52,"column":738,"offset":25616},"end":{"line":52,"column":857,"offset":25735},"indent":[]}}],"position":{"start":{"line":52,"column":737,"offset":25615},"end":{"line":52,"column":858,"offset":25736},"indent":[]}},{"type":"text","value":"hackernoon.com","position":{"start":{"line":52,"column":858,"offset":25736},"end":{"line":52,"column":872,"offset":25750},"indent":[]}}],"position":{"start":{"line":52,"column":680,"offset":25558},"end":{"line":52,"column":1061,"offset":25939},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript: Map, Filter, Reduce","position":{"start":{"line":52,"column":1064,"offset":25942},"end":{"line":52,"column":1095,"offset":25973},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"JavaScript's built-in map, filter, and reduce array methods are invaluable to a modern JavaScript developer. First…","position":{"start":{"line":52,"column":1096,"offset":25974},"end":{"line":52,"column":1211,"offset":26089},"indent":[]}}],"position":{"start":{"line":52,"column":1095,"offset":25973},"end":{"line":52,"column":1212,"offset":26090},"indent":[]}},{"type":"text","value":"wsvincent.com","position":{"start":{"line":52,"column":1212,"offset":26090},"end":{"line":52,"column":1225,"offset":26103},"indent":[]}}],"position":{"start":{"line":52,"column":1064,"offset":25942},"end":{"line":52,"column":1275,"offset":26153},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":24879},"end":{"line":52,"column":1277,"offset":26155},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"A simple guide to help you understand closures in JavaScript","position":{"start":{"line":53,"column":3,"offset":26158},"end":{"line":53,"column":63,"offset":26218},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Closures in JavaScript are one of those concepts that many struggle to get their heads around. In the following…","position":{"start":{"line":53,"column":64,"offset":26219},"end":{"line":53,"column":176,"offset":26331},"indent":[]}}],"position":{"start":{"line":53,"column":63,"offset":26218},"end":{"line":53,"column":177,"offset":26332},"indent":[]}},{"type":"text","value":"medium.freecodecamp.org","position":{"start":{"line":53,"column":177,"offset":26332},"end":{"line":53,"column":200,"offset":26355},"indent":[]}}],"position":{"start":{"line":53,"column":3,"offset":26158},"end":{"line":53,"column":239,"offset":26394},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Understanding JavaScript Closures: A Practical Approach","position":{"start":{"line":53,"column":242,"offset":26397},"end":{"line":53,"column":297,"offset":26452},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Learning a new language involves a series of steps, whereas its mastery is a product of patience, practice, mistakes…","position":{"start":{"line":53,"column":298,"offset":26453},"end":{"line":53,"column":415,"offset":26570},"indent":[]}}],"position":{"start":{"line":53,"column":297,"offset":26452},"end":{"line":53,"column":416,"offset":26571},"indent":[]}},{"type":"text","value":"scotch.io","position":{"start":{"line":53,"column":416,"offset":26571},"end":{"line":53,"column":425,"offset":26580},"indent":[]}}],"position":{"start":{"line":53,"column":242,"offset":26397},"end":{"line":53,"column":456,"offset":26611},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Understanding JavaScript: Closures","position":{"start":{"line":53,"column":459,"offset":26614},"end":{"line":53,"column":493,"offset":26648},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Why learn JavaScript in depth?","position":{"start":{"line":53,"column":494,"offset":26649},"end":{"line":53,"column":524,"offset":26679},"indent":[]}}],"position":{"start":{"line":53,"column":493,"offset":26648},"end":{"line":53,"column":525,"offset":26680},"indent":[]}},{"type":"text","value":"hackernoon.com","position":{"start":{"line":53,"column":525,"offset":26680},"end":{"line":53,"column":539,"offset":26694},"indent":[]}}],"position":{"start":{"line":53,"column":459,"offset":26614},"end":{"line":53,"column":677,"offset":26832},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"How to use JavaScript closures with confidence","position":{"start":{"line":53,"column":680,"offset":26835},"end":{"line":53,"column":726,"offset":26881},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Using closures will be a piece of (chocolate) cake","position":{"start":{"line":53,"column":727,"offset":26882},"end":{"line":53,"column":777,"offset":26932},"indent":[]}}],"position":{"start":{"line":53,"column":726,"offset":26881},"end":{"line":53,"column":778,"offset":26933},"indent":[]}},{"type":"text","value":"hackernoon.com","position":{"start":{"line":53,"column":778,"offset":26933},"end":{"line":53,"column":792,"offset":26947},"indent":[]}}],"position":{"start":{"line":53,"column":680,"offset":26835},"end":{"line":53,"column":1061,"offset":27216},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript Closures by Example","position":{"start":{"line":53,"column":1064,"offset":27219},"end":{"line":53,"column":1094,"offset":27249},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"At some point you may have run into a problem when executing functions from within a for loop. The first time it…","position":{"start":{"line":53,"column":1095,"offset":27250},"end":{"line":53,"column":1208,"offset":27363},"indent":[]}}],"position":{"start":{"line":53,"column":1094,"offset":27249},"end":{"line":53,"column":1209,"offset":27364},"indent":[]}},{"type":"text","value":"howchoo.com","position":{"start":{"line":53,"column":1209,"offset":27364},"end":{"line":53,"column":1220,"offset":27375},"indent":[]}}],"position":{"start":{"line":53,"column":1064,"offset":27219},"end":{"line":53,"column":1275,"offset":27430},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":26156},"end":{"line":53,"column":1277,"offset":27432},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Higher-Order Functions :: Eloquent JavaScript","position":{"start":{"line":54,"column":3,"offset":27435},"end":{"line":54,"column":48,"offset":27480},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Tzu-li and Tzu-ssu were boasting about the size of their latest programs. 'Two-hundred thousand lines,' said Tzu-li…","position":{"start":{"line":54,"column":49,"offset":27481},"end":{"line":54,"column":165,"offset":27597},"indent":[]}}],"position":{"start":{"line":54,"column":48,"offset":27480},"end":{"line":54,"column":166,"offset":27598},"indent":[]}},{"type":"text","value":"eloquentjavascript.net","position":{"start":{"line":54,"column":166,"offset":27598},"end":{"line":54,"column":188,"offset":27620},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":27435},"end":{"line":54,"column":239,"offset":27671},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Higher-Order Functions in JavaScript - SitePoint","position":{"start":{"line":54,"column":242,"offset":27674},"end":{"line":54,"column":290,"offset":27722},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Continuing his look at functional programming in JavaScript, M. David Green examines higher-order functions and how…","position":{"start":{"line":54,"column":291,"offset":27723},"end":{"line":54,"column":407,"offset":27839},"indent":[]}}],"position":{"start":{"line":54,"column":290,"offset":27722},"end":{"line":54,"column":408,"offset":27840},"indent":[]}},{"type":"text","value":"www.sitepoint.com","position":{"start":{"line":54,"column":408,"offset":27840},"end":{"line":54,"column":425,"offset":27857},"indent":[]}}],"position":{"start":{"line":54,"column":242,"offset":27674},"end":{"line":54,"column":456,"offset":27888},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code","position":{"start":{"line":54,"column":459,"offset":27891},"end":{"line":54,"column":538,"offset":27970},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Higher order functions can help you to step up your JavaScript game by making your code more declarative. That is…","position":{"start":{"line":54,"column":539,"offset":27971},"end":{"line":54,"column":653,"offset":28085},"indent":[]}}],"position":{"start":{"line":54,"column":538,"offset":27970},"end":{"line":54,"column":654,"offset":28086},"indent":[]}},{"type":"text","value":"medium.freecodecamp.org","position":{"start":{"line":54,"column":654,"offset":28086},"end":{"line":54,"column":677,"offset":28109},"indent":[]}}],"position":{"start":{"line":54,"column":459,"offset":27891},"end":{"line":54,"column":677,"offset":28109},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"First-class and Higher Order Functions: Effective Functional JavaScript","position":{"start":{"line":54,"column":680,"offset":28112},"end":{"line":54,"column":751,"offset":28183},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Functions: the killer JavaScript feature we never talk about.","position":{"start":{"line":54,"column":752,"offset":28184},"end":{"line":54,"column":813,"offset":28245},"indent":[]}}],"position":{"start":{"line":54,"column":751,"offset":28183},"end":{"line":54,"column":814,"offset":28246},"indent":[]}},{"type":"text","value":"hackernoon.com","position":{"start":{"line":54,"column":814,"offset":28246},"end":{"line":54,"column":828,"offset":28260},"indent":[]}}],"position":{"start":{"line":54,"column":680,"offset":28112},"end":{"line":54,"column":1061,"offset":28493},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Higher Order Functions in JavaScript","position":{"start":{"line":54,"column":1064,"offset":28496},"end":{"line":54,"column":1100,"offset":28532},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Higher-order functions can be intimidating at first, but they're not that hard to learn. A higher-order function is…","position":{"start":{"line":54,"column":1101,"offset":28533},"end":{"line":54,"column":1217,"offset":28649},"indent":[]}}],"position":{"start":{"line":54,"column":1100,"offset":28532},"end":{"line":54,"column":1218,"offset":28650},"indent":[]}},{"type":"text","value":"www.lullabot.com","position":{"start":{"line":54,"column":1218,"offset":28650},"end":{"line":54,"column":1234,"offset":28666},"indent":[]}}],"position":{"start":{"line":54,"column":1064,"offset":28496},"end":{"line":54,"column":1275,"offset":28707},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":27433},"end":{"line":54,"column":1277,"offset":28709},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"ES6 Promises: Patterns and Anti-Patterns","position":{"start":{"line":55,"column":3,"offset":28712},"end":{"line":55,"column":43,"offset":28752},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"When I first got started with NodeJS a few years ago, I was mortified by what is now affectionately known as \"callback…","position":{"start":{"line":55,"column":44,"offset":28753},"end":{"line":55,"column":163,"offset":28872},"indent":[]}}],"position":{"start":{"line":55,"column":43,"offset":28752},"end":{"line":55,"column":164,"offset":28873},"indent":[]}},{"type":"text","value":"medium.com","position":{"start":{"line":55,"column":164,"offset":28873},"end":{"line":55,"column":174,"offset":28883},"indent":[]}}],"position":{"start":{"line":55,"column":3,"offset":28712},"end":{"line":55,"column":239,"offset":28948},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"A Simple Guide to ES6 Promises","position":{"start":{"line":55,"column":242,"offset":28951},"end":{"line":55,"column":272,"offset":28981},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"The woods are lovely, dark and deep. But I have promises to keep, and miles to go before I sleep. — Robert Frost","position":{"start":{"line":55,"column":273,"offset":28982},"end":{"line":55,"column":385,"offset":29094},"indent":[]}}],"position":{"start":{"line":55,"column":272,"offset":28981},"end":{"line":55,"column":386,"offset":29095},"indent":[]}},{"type":"text","value":"codeburst.io","position":{"start":{"line":55,"column":386,"offset":29095},"end":{"line":55,"column":398,"offset":29107},"indent":[]}}],"position":{"start":{"line":55,"column":242,"offset":28951},"end":{"line":55,"column":456,"offset":29165},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"The ES6 Promises","position":{"start":{"line":55,"column":459,"offset":29168},"end":{"line":55,"column":475,"offset":29184},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"A very helpful feature in ES6","position":{"start":{"line":55,"column":476,"offset":29185},"end":{"line":55,"column":505,"offset":29214},"indent":[]}}],"position":{"start":{"line":55,"column":475,"offset":29184},"end":{"line":55,"column":506,"offset":29215},"indent":[]}},{"type":"text","value":"codeburst.io","position":{"start":{"line":55,"column":506,"offset":29215},"end":{"line":55,"column":518,"offset":29227},"indent":[]}}],"position":{"start":{"line":55,"column":459,"offset":29168},"end":{"line":55,"column":677,"offset":29386},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"ES6 Promises in Depth","position":{"start":{"line":55,"column":680,"offset":29389},"end":{"line":55,"column":701,"offset":29410},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Promises are a very involved paradigm, so we'll take it slow. Here's a table of contents with the topics we'll cover in…","position":{"start":{"line":55,"column":702,"offset":29411},"end":{"line":55,"column":822,"offset":29531},"indent":[]}}],"position":{"start":{"line":55,"column":701,"offset":29410},"end":{"line":55,"column":823,"offset":29532},"indent":[]}},{"type":"text","value":"ponyfoo.com","position":{"start":{"line":55,"column":823,"offset":29532},"end":{"line":55,"column":834,"offset":29543},"indent":[]}}],"position":{"start":{"line":55,"column":680,"offset":29389},"end":{"line":55,"column":1061,"offset":29770},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Javascript Promises: An In-Depth Approach","position":{"start":{"line":55,"column":1064,"offset":29773},"end":{"line":55,"column":1105,"offset":29814},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"\"Write down the syntax for promises on this sheet of paper\", is enough to give nightmares to a lot of junior and even…","position":{"start":{"line":55,"column":1106,"offset":29815},"end":{"line":55,"column":1224,"offset":29933},"indent":[]}}],"position":{"start":{"line":55,"column":1105,"offset":29814},"end":{"line":55,"column":1225,"offset":29934},"indent":[]}},{"type":"text","value":"codeburst.io","position":{"start":{"line":55,"column":1225,"offset":29934},"end":{"line":55,"column":1237,"offset":29946},"indent":[]}}],"position":{"start":{"line":55,"column":1064,"offset":29773},"end":{"line":55,"column":1275,"offset":29984},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":28710},"end":{"line":55,"column":1277,"offset":29986},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Promises - JavaScript concepts","position":{"start":{"line":56,"column":3,"offset":29989},"end":{"line":56,"column":33,"offset":30019},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"This is part of a series where I try to explain through each of 33 JS Concepts. This part corresponds to Promises…","position":{"start":{"line":56,"column":34,"offset":30020},"end":{"line":56,"column":148,"offset":30134},"indent":[]}}],"position":{"start":{"line":56,"column":33,"offset":30019},"end":{"line":56,"column":149,"offset":30135},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":56,"column":149,"offset":30135},"end":{"line":56,"column":155,"offset":30141},"indent":[]}}],"position":{"start":{"line":56,"column":3,"offset":29989},"end":{"line":56,"column":239,"offset":30225},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Javascript Promise 101","position":{"start":{"line":56,"column":242,"offset":30228},"end":{"line":56,"column":264,"offset":30250},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Knowing how Promise works in javascript will boost your development skill exponentially. Here I will share: I promise…","position":{"start":{"line":56,"column":265,"offset":30251},"end":{"line":56,"column":383,"offset":30369},"indent":[]}}],"position":{"start":{"line":56,"column":264,"offset":30250},"end":{"line":56,"column":384,"offset":30370},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":56,"column":384,"offset":30370},"end":{"line":56,"column":390,"offset":30376},"indent":[]}}],"position":{"start":{"line":56,"column":242,"offset":30228},"end":{"line":56,"column":456,"offset":30442},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Simplify JavaScript Promises","position":{"start":{"line":56,"column":459,"offset":30445},"end":{"line":56,"column":487,"offset":30473},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"I love promises. Not from people, but from JavaScript. Tweet Quote I love promises. Not from people, but from…","position":{"start":{"line":56,"column":488,"offset":30474},"end":{"line":56,"column":598,"offset":30584},"indent":[]}}],"position":{"start":{"line":56,"column":487,"offset":30473},"end":{"line":56,"column":599,"offset":30585},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":56,"column":599,"offset":30585},"end":{"line":56,"column":605,"offset":30591},"indent":[]}}],"position":{"start":{"line":56,"column":459,"offset":30445},"end":{"line":56,"column":677,"offset":30663},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"The Lowdown on Promises","position":{"start":{"line":56,"column":680,"offset":30666},"end":{"line":56,"column":703,"offset":30689},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"A quick and concise guide on how Promises work in JavaScript","position":{"start":{"line":56,"column":704,"offset":30690},"end":{"line":56,"column":764,"offset":30750},"indent":[]}}],"position":{"start":{"line":56,"column":703,"offset":30689},"end":{"line":56,"column":765,"offset":30751},"indent":[]}},{"type":"text","value":"medium.com","position":{"start":{"line":56,"column":765,"offset":30751},"end":{"line":56,"column":775,"offset":30761},"indent":[]}}],"position":{"start":{"line":56,"column":680,"offset":30666},"end":{"line":56,"column":1061,"offset":31047},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"⭐️🎀 JavaScript Visualized: Promises & Async/Await","position":{"start":{"line":56,"column":1064,"offset":31050},"end":{"line":56,"column":1114,"offset":31100},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Ever had to deal with JS code that just… didn't run the way you expected it to? Maybe it seemed like functions got…","position":{"start":{"line":56,"column":1115,"offset":31101},"end":{"line":56,"column":1230,"offset":31216},"indent":[]}}],"position":{"start":{"line":56,"column":1114,"offset":31100},"end":{"line":56,"column":1231,"offset":31217},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":56,"column":1231,"offset":31217},"end":{"line":56,"column":1237,"offset":31223},"indent":[]}}],"position":{"start":{"line":56,"column":1064,"offset":31050},"end":{"line":56,"column":1274,"offset":31260},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":29987},"end":{"line":56,"column":1276,"offset":31262},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"How to escape async/await hell","position":{"start":{"line":57,"column":3,"offset":31265},"end":{"line":57,"column":33,"offset":31295},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"async/await freed us from callback hell, but people have started abusing it — leading to the birth of async/await hell.","position":{"start":{"line":57,"column":34,"offset":31296},"end":{"line":57,"column":153,"offset":31415},"indent":[]}}],"position":{"start":{"line":57,"column":33,"offset":31295},"end":{"line":57,"column":154,"offset":31416},"indent":[]}},{"type":"text","value":"medium.freecodecamp.org","position":{"start":{"line":57,"column":154,"offset":31416},"end":{"line":57,"column":177,"offset":31439},"indent":[]}}],"position":{"start":{"line":57,"column":3,"offset":31265},"end":{"line":57,"column":239,"offset":31501},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Understanding JavaScript's async await","position":{"start":{"line":57,"column":242,"offset":31504},"end":{"line":57,"column":280,"offset":31542},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Let's suppose we had code like the following. Here I'm wrapping an HTTP request in a Promise. The promise fulfills with…","position":{"start":{"line":57,"column":281,"offset":31543},"end":{"line":57,"column":401,"offset":31663},"indent":[]}}],"position":{"start":{"line":57,"column":280,"offset":31542},"end":{"line":57,"column":402,"offset":31664},"indent":[]}},{"type":"text","value":"ponyfoo.com","position":{"start":{"line":57,"column":402,"offset":31664},"end":{"line":57,"column":413,"offset":31675},"indent":[]}}],"position":{"start":{"line":57,"column":242,"offset":31504},"end":{"line":57,"column":456,"offset":31718},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"JavaScript Async/Await: Serial, Parallel and Complex Flow - TechBrij","position":{"start":{"line":57,"column":459,"offset":31721},"end":{"line":57,"column":527,"offset":31789},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"If you have experience on ASP.NET MVC then probably you are familiar with async/await keywords in C#. The same thing is…","position":{"start":{"line":57,"column":528,"offset":31790},"end":{"line":57,"column":648,"offset":31910},"indent":[]}}],"position":{"start":{"line":57,"column":527,"offset":31789},"end":{"line":57,"column":649,"offset":31911},"indent":[]}},{"type":"text","value":"techbrij.com","position":{"start":{"line":57,"column":649,"offset":31911},"end":{"line":57,"column":661,"offset":31923},"indent":[]}}],"position":{"start":{"line":57,"column":459,"offset":31721},"end":{"line":57,"column":677,"offset":31939},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"From JavaScript Promises to Async/Await: why bother?","position":{"start":{"line":57,"column":680,"offset":31942},"end":{"line":57,"column":732,"offset":31994},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"In this tutorial, we will cover why we need async/await when we could achieve the same fit with JavaScript Promises, to…","position":{"start":{"line":57,"column":733,"offset":31995},"end":{"line":57,"column":853,"offset":32115},"indent":[]}}],"position":{"start":{"line":57,"column":732,"offset":31994},"end":{"line":57,"column":854,"offset":32116},"indent":[]}},{"type":"text","value":"blog.pusher.com","position":{"start":{"line":57,"column":854,"offset":32116},"end":{"line":57,"column":869,"offset":32131},"indent":[]}}],"position":{"start":{"line":57,"column":680,"offset":31942},"end":{"line":57,"column":1061,"offset":32323},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Flow Control in Modern JS: Callbacks to Promises to Async/Await - SitePoint","position":{"start":{"line":57,"column":1064,"offset":32326},"end":{"line":57,"column":1139,"offset":32401},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"JavaScript is regularly claimed to be asynchronous. What does that mean? How does it affect development? How has the…","position":{"start":{"line":57,"column":1140,"offset":32402},"end":{"line":57,"column":1257,"offset":32519},"indent":[]}}],"position":{"start":{"line":57,"column":1139,"offset":32401},"end":{"line":57,"column":1258,"offset":32520},"indent":[]}},{"type":"text","value":"www.sitepoint.com","position":{"start":{"line":57,"column":1258,"offset":32520},"end":{"line":57,"column":1275,"offset":32537},"indent":[]}}],"position":{"start":{"line":57,"column":1064,"offset":32326},"end":{"line":57,"column":1275,"offset":32537},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":31263},"end":{"line":57,"column":1277,"offset":32539},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Time Complexity Analysis in JavaScript","position":{"start":{"line":58,"column":3,"offset":32542},"end":{"line":58,"column":41,"offset":32580},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"An algorithm is a self-contained step-by-step set of instructions to solve a problem. It takes time for these steps to…","position":{"start":{"line":58,"column":42,"offset":32581},"end":{"line":58,"column":161,"offset":32700},"indent":[]}}],"position":{"start":{"line":58,"column":41,"offset":32580},"end":{"line":58,"column":162,"offset":32701},"indent":[]}},{"type":"text","value":"www.jenniferbland.com","position":{"start":{"line":58,"column":162,"offset":32701},"end":{"line":58,"column":183,"offset":32722},"indent":[]}}],"position":{"start":{"line":58,"column":3,"offset":32542},"end":{"line":58,"column":239,"offset":32778},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Algorithms in plain English: time complexity and Big-O notation","position":{"start":{"line":58,"column":242,"offset":32781},"end":{"line":58,"column":305,"offset":32844},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Every good developer has time on their mind. They want to give their users more of it, so they can do all those things…","position":{"start":{"line":58,"column":306,"offset":32845},"end":{"line":58,"column":425,"offset":32964},"indent":[]}}],"position":{"start":{"line":58,"column":305,"offset":32844},"end":{"line":58,"column":426,"offset":32965},"indent":[]}},{"type":"text","value":"medium.freecodecamp.org","position":{"start":{"line":58,"column":426,"offset":32965},"end":{"line":58,"column":449,"offset":32988},"indent":[]}}],"position":{"start":{"line":58,"column":242,"offset":32781},"end":{"line":58,"column":456,"offset":32995},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"An Introduction to Big O Notation","position":{"start":{"line":58,"column":459,"offset":32998},"end":{"line":58,"column":492,"offset":33031},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Big O notation is a big topic, and its universal importance stems from the fact that it describes the efficiency of…","position":{"start":{"line":58,"column":493,"offset":33032},"end":{"line":58,"column":609,"offset":33148},"indent":[]}}],"position":{"start":{"line":58,"column":492,"offset":33031},"end":{"line":58,"column":610,"offset":33149},"indent":[]}},{"type":"text","value":"dev.to","position":{"start":{"line":58,"column":610,"offset":33149},"end":{"line":58,"column":616,"offset":33155},"indent":[]}}],"position":{"start":{"line":58,"column":459,"offset":32998},"end":{"line":58,"column":677,"offset":33216},"indent":[]}},{"type":"tableCell","children":[{"type":"linkReference","identifier":"crizstian/data-structure-and-algorithms-with-es6*num type exercises description 10.- graph data structure 2 a graph consists of a set of vertices and a set of edges. a…*github.com","label":"Crizstian/data-structure-and-algorithms-with-ES6*Num Type Exercises Description 10.- Graph Data Structure 2 A graph consists of a set of vertices and a set of edges. A…*github.com","referenceType":"shortcut","children":[{"type":"text","value":"Crizstian/data-structure-and-algorithms-with-ES6","position":{"start":{"line":58,"column":681,"offset":33220},"end":{"line":58,"column":729,"offset":33268},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Num Type Exercises Description 10.- Graph Data Structure 2 A graph consists of a set of vertices and a set of edges. A…","position":{"start":{"line":58,"column":730,"offset":33269},"end":{"line":58,"column":849,"offset":33388},"indent":[]}}],"position":{"start":{"line":58,"column":729,"offset":33268},"end":{"line":58,"column":850,"offset":33389},"indent":[]}},{"type":"text","value":"github.com","position":{"start":{"line":58,"column":850,"offset":33389},"end":{"line":58,"column":860,"offset":33399},"indent":[]}}],"position":{"start":{"line":58,"column":680,"offset":33219},"end":{"line":58,"column":861,"offset":33400},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":58,"column":861,"offset":33400},"end":{"line":58,"column":862,"offset":33401},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/Crizstian/data-structure-and-algorithms-with-ES6","children":[{"type":"text","value":"https://github.com/Crizstian/data-structure-and-algorithms-with-ES6","position":{"start":{"line":58,"column":862,"offset":33401},"end":{"line":58,"column":929,"offset":33468},"indent":[]}}],"position":{"start":{"line":58,"column":862,"offset":33401},"end":{"line":58,"column":929,"offset":33468},"indent":[]}},{"type":"text","value":" \"","position":{"start":{"line":58,"column":929,"offset":33468},"end":{"line":58,"column":931,"offset":33470},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/Crizs","children":[{"type":"text","value":"https://github.com/Crizs","position":{"start":{"line":58,"column":931,"offset":33470},"end":{"line":58,"column":955,"offset":33494},"indent":[]}}],"position":{"start":{"line":58,"column":931,"offset":33470},"end":{"line":58,"column":955,"offset":33494},"indent":[]}}],"position":{"start":{"line":58,"column":680,"offset":33219},"end":{"line":58,"column":1061,"offset":33600},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":32540},"end":{"line":58,"column":1063,"offset":33602},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":643},"end":{"line":58,"column":1063,"offset":33602},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":59,"column":1,"offset":33603}}}}